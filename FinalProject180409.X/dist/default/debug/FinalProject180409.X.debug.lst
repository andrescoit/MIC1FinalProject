

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Apr 14 19:50:52 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 1.45
    37                           ; Generated 16/11/2017 GMT
    38                           ; 
    39                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F1829 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  0111                     	;# 
   122  0112                     	;# 
   123  0113                     	;# 
   124  0114                     	;# 
   125  0115                     	;# 
   126  0116                     	;# 
   127  0117                     	;# 
   128  0118                     	;# 
   129  0119                     	;# 
   130  011A                     	;# 
   131  011B                     	;# 
   132  011D                     	;# 
   133  011E                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  018E                     	;# 
   137  0191                     	;# 
   138  0191                     	;# 
   139  0192                     	;# 
   140  0193                     	;# 
   141  0193                     	;# 
   142  0193                     	;# 
   143  0194                     	;# 
   144  0195                     	;# 
   145  0196                     	;# 
   146  0199                     	;# 
   147  019A                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019C                     	;# 
   151  019D                     	;# 
   152  019E                     	;# 
   153  019F                     	;# 
   154  020C                     	;# 
   155  020D                     	;# 
   156  020E                     	;# 
   157  0211                     	;# 
   158  0211                     	;# 
   159  0212                     	;# 
   160  0212                     	;# 
   161  0213                     	;# 
   162  0213                     	;# 
   163  0214                     	;# 
   164  0214                     	;# 
   165  0215                     	;# 
   166  0215                     	;# 
   167  0215                     	;# 
   168  0216                     	;# 
   169  0216                     	;# 
   170  0217                     	;# 
   171  0217                     	;# 
   172  0219                     	;# 
   173  021A                     	;# 
   174  021B                     	;# 
   175  021C                     	;# 
   176  021D                     	;# 
   177  021E                     	;# 
   178  021F                     	;# 
   179  0291                     	;# 
   180  0291                     	;# 
   181  0292                     	;# 
   182  0293                     	;# 
   183  0294                     	;# 
   184  0295                     	;# 
   185  0295                     	;# 
   186  0296                     	;# 
   187  0298                     	;# 
   188  0298                     	;# 
   189  0299                     	;# 
   190  029A                     	;# 
   191  029B                     	;# 
   192  029C                     	;# 
   193  029D                     	;# 
   194  029E                     	;# 
   195  0311                     	;# 
   196  0311                     	;# 
   197  0312                     	;# 
   198  0313                     	;# 
   199  0318                     	;# 
   200  0318                     	;# 
   201  0319                     	;# 
   202  031A                     	;# 
   203  038C                     	;# 
   204  038D                     	;# 
   205  038E                     	;# 
   206  0391                     	;# 
   207  0392                     	;# 
   208  0393                     	;# 
   209  0394                     	;# 
   210  0395                     	;# 
   211  0396                     	;# 
   212  039A                     	;# 
   213  039C                     	;# 
   214  039D                     	;# 
   215  039E                     	;# 
   216  039F                     	;# 
   217  0415                     	;# 
   218  0416                     	;# 
   219  0417                     	;# 
   220  041C                     	;# 
   221  041D                     	;# 
   222  041E                     	;# 
   223  0FE4                     	;# 
   224  0FE5                     	;# 
   225  0FE6                     	;# 
   226  0FE7                     	;# 
   227  0FE8                     	;# 
   228  0FE9                     	;# 
   229  0FEA                     	;# 
   230  0FEB                     	;# 
   231  0FED                     	;# 
   232  0FEE                     	;# 
   233  0FEF                     	;# 
   234  0016                     _TMR1L	set	22
   235  0017                     _TMR1H	set	23
   236  0018                     _T1CON	set	24
   237  000E                     _PORTC	set	14
   238  000D                     _PORTB	set	13
   239  000C                     _PORTA	set	12
   240  00C0                     _TMR1ON	set	192
   241  0060                     _RA0	set	96
   242  0065                     _RA5	set	101
   243  0073                     _RC3	set	115
   244  0070                     _RC0	set	112
   245  0076                     _RC6	set	118
   246  006F                     _RB7	set	111
   247  006E                     _RB6	set	110
   248  006D                     _RB5	set	109
   249  006C                     _RB4	set	108
   250  008E                     _TRISC	set	142
   251  008D                     _TRISB	set	141
   252  008C                     _TRISA	set	140
   253  0099                     _OSCCON	set	153
   254  08EF                     _RXDTSEL	set	2287
   255  08EA                     _TXCKSEL	set	2282
   256  018D                     _ANSELB	set	397
   257  018C                     _ANSELA	set	396
   258  018E                     _ANSELC	set	398
   259                           
   260                           	psect	stringtext1
   261  0800                     __pstringtext1:	
   262  0800                     STR_1:	
   263  0800  3457               	retlw	87	;'W'
   264  0801  3445               	retlw	69	;'E'
   265  0802  344C               	retlw	76	;'L'
   266  0803  3443               	retlw	67	;'C'
   267  0804  344F               	retlw	79	;'O'
   268  0805  344D               	retlw	77	;'M'
   269  0806  3445               	retlw	69	;'E'
   270  0807  3420               	retlw	32	;' '
   271  0808  3454               	retlw	84	;'T'
   272  0809  344F               	retlw	79	;'O'
   273  080A  3420               	retlw	32	;' '
   274  080B  3455               	retlw	85	;'U'
   275  080C  3454               	retlw	84	;'T'
   276  080D  3453               	retlw	83	;'S'
   277  080E  3441               	retlw	65	;'A'
   278  080F  3400               	retlw	0
   279                           
   280                           	psect	stringtext2
   281  0810                     __pstringtext2:	
   282  0810                     STR_5:	
   283  0810  344F               	retlw	79	;'O'
   284  0811  3475               	retlw	117	;'u'
   285  0812  3474               	retlw	116	;'t'
   286  0813  3420               	retlw	32	;' '
   287  0814  346F               	retlw	111	;'o'
   288  0815  3466               	retlw	102	;'f'
   289  0816  3420               	retlw	32	;' '
   290  0817  3452               	retlw	82	;'R'
   291  0818  3461               	retlw	97	;'a'
   292  0819  346E               	retlw	110	;'n'
   293  081A  3467               	retlw	103	;'g'
   294  081B  3465               	retlw	101	;'e'
   295  081C  343A               	retlw	58	;':'
   296  081D  3420               	retlw	32	;' '
   297  081E  3400               	retlw	0
   298                           
   299                           	psect	stringtext3
   300  081F                     __pstringtext3:	
   301  081F                     STR_8:	
   302  081F  3444               	retlw	68	;'D'
   303  0820  3469               	retlw	105	;'i'
   304  0821  3473               	retlw	115	;'s'
   305  0822  3474               	retlw	116	;'t'
   306  0823  3461               	retlw	97	;'a'
   307  0824  346E               	retlw	110	;'n'
   308  0825  3463               	retlw	99	;'c'
   309  0826  3465               	retlw	101	;'e'
   310  0827  343A               	retlw	58	;':'
   311  0828  3420               	retlw	32	;' '
   312  0829  3400               	retlw	0
   313                           
   314                           	psect	stringtext4
   315  082A                     __pstringtext4:	
   316  082A                     STR_2:	
   317  082A  3449               	retlw	73	;'I'
   318  082B  346E               	retlw	110	;'n'
   319  082C  3420               	retlw	32	;' '
   320  082D  3472               	retlw	114	;'r'
   321  082E  3461               	retlw	97	;'a'
   322  082F  346E               	retlw	110	;'n'
   323  0830  3467               	retlw	103	;'g'
   324  0831  3465               	retlw	101	;'e'
   325  0832  343A               	retlw	58	;':'
   326  0833  3420               	retlw	32	;' '
   327  0834  3400               	retlw	0
   328                           
   329                           	psect	stringtext5
   330  0835                     __pstringtext5:	
   331  0835                     STR_3:	
   332  0835  3420               	retlw	32	;' '
   333  0836  3463               	retlw	99	;'c'
   334  0837  346D               	retlw	109	;'m'
   335  0838  342C               	retlw	44	;','
   336  0839  3420               	retlw	32	;' '
   337  083A  3400               	retlw	0
   338                           
   339                           	psect	stringtext6
   340  083B                     __pstringtext6:	
   341  083B                     STR_4:	
   342  083B  3420               	retlw	32	;' '
   343  083C  3463               	retlw	99	;'c'
   344  083D  346D               	retlw	109	;'m'
   345  083E  3400               	retlw	0
   346                           
   347                           	psect	stringtext7
   348  0000                     __pstringtext7:	
   349  0835                     
   350                           ; #config settings
   351  0000                     
   352                           	psect	cinit
   353  07FD                     start_initialization:	
   354  07FD                     __initialization:	
   355  07FD                     end_of_initialization:	
   356                           ;End of C runtime variable initialization code
   357                           
   358  07FD                     __end_of__initialization:	
   359  07FD  0020               	movlb	0
   360  07FE  3186  2E39         	ljmp	_main	;jump to C main() function
   361                           
   362                           	psect	cstackBANK1
   363  00A0                     __pcstackBANK1:	
   364  00A0                     main@bufA:	
   365                           
   366                           ; 8 bytes @ 0x0
   367  00A0                     	ds	8
   368  00A8                     main@bufB:	
   369                           
   370                           ; 8 bytes @ 0x8
   371  00A8                     	ds	8
   372  00B0                     main@toggle:	
   373                           
   374                           ; 2 bytes @ 0x10
   375  00B0                     	ds	2
   376  00B2                     main@delay_counter:	
   377                           
   378                           ; 2 bytes @ 0x12
   379  00B2                     	ds	2
   380  00B4                     main@pdelay_counter:	
   381                           
   382                           ; 1 bytes @ 0x14
   383  00B4                     	ds	1
   384  00B5                     main@initialize:	
   385                           
   386                           ; 2 bytes @ 0x15
   387  00B5                     	ds	2
   388  00B7                     main@ping_val1:	
   389                           
   390                           ; 2 bytes @ 0x17
   391  00B7                     	ds	2
   392  00B9                     main@ping_val2:	
   393                           
   394                           ; 2 bytes @ 0x19
   395  00B9                     	ds	2
   396  00BB                     main@pinitialize:	
   397                           
   398                           ; 1 bytes @ 0x1B
   399  00BB                     	ds	1
   400                           
   401                           	psect	cstackCOMMON
   402  0070                     __pcstackCOMMON:	
   403  0070                     ?_pinConfig:	
   404  0070                     ??_pinConfig:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ?_Lcd_Port:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ??_Lcd_Port:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ?_Lcd_Cmd:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_Lcd_Clear:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ?_Lcd_Init:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_Lcd_Write_Char:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?___lwdiv:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?___lwmod:	
   429                           ; 2 bytes @ 0x0
   430                           
   431  0070                     ?___ftpack:	
   432                           ; 2 bytes @ 0x0
   433                           
   434  0070                     Lcd_Port@a:	
   435                           ; 3 bytes @ 0x0
   436                           
   437  0070                     ___lwdiv@divisor:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ___lwmod@divisor:	
   441                           ; 2 bytes @ 0x0
   442                           
   443  0070                     ___ftpack@arg:	
   444                           ; 2 bytes @ 0x0
   445                           
   446                           
   447                           ; 3 bytes @ 0x0
   448  0070                     	ds	1
   449  0071                     ??_Lcd_Cmd:	
   450  0071                     ??_Lcd_Write_Char:	
   451                           ; 1 bytes @ 0x1
   452                           
   453                           
   454                           ; 1 bytes @ 0x1
   455  0071                     	ds	1
   456  0072                     Lcd_Cmd@a:	
   457  0072                     Lcd_Write_Char@temp:	
   458                           ; 1 bytes @ 0x2
   459                           
   460  0072                     ___lwdiv@dividend:	
   461                           ; 1 bytes @ 0x2
   462                           
   463  0072                     ___lwmod@dividend:	
   464                           ; 2 bytes @ 0x2
   465                           
   466                           
   467                           ; 2 bytes @ 0x2
   468  0072                     	ds	1
   469  0073                     ??_Lcd_Clear:	
   470  0073                     ?_Lcd_Set_Cursor:	
   471                           ; 1 bytes @ 0x3
   472                           
   473  0073                     ??_Lcd_Init:	
   474                           ; 1 bytes @ 0x3
   475                           
   476  0073                     Lcd_Set_Cursor@b:	
   477                           ; 1 bytes @ 0x3
   478                           
   479  0073                     Lcd_Write_Char@y:	
   480                           ; 1 bytes @ 0x3
   481                           
   482  0073                     ___ftpack@exp:	
   483                           ; 1 bytes @ 0x3
   484                           
   485                           
   486                           ; 1 bytes @ 0x3
   487  0073                     	ds	1
   488  0074                     ??_Lcd_Set_Cursor:	
   489  0074                     ??___lwdiv:	
   490                           ; 1 bytes @ 0x4
   491                           
   492  0074                     ??___lwmod:	
   493                           ; 1 bytes @ 0x4
   494                           
   495  0074                     Lcd_Write_Char@a:	
   496                           ; 1 bytes @ 0x4
   497                           
   498  0074                     ___ftpack@sign:	
   499                           ; 1 bytes @ 0x4
   500                           
   501                           
   502                           ; 1 bytes @ 0x4
   503  0074                     	ds	1
   504  0075                     ??___ftpack:	
   505  0075                     ?_Lcd_Write_String:	
   506                           ; 1 bytes @ 0x5
   507                           
   508  0075                     ___lwmod@counter:	
   509                           ; 1 bytes @ 0x5
   510                           
   511  0075                     Lcd_Write_String@a:	
   512                           ; 1 bytes @ 0x5
   513                           
   514  0075                     ___lwdiv@quotient:	
   515                           ; 2 bytes @ 0x5
   516                           
   517                           
   518                           ; 2 bytes @ 0x5
   519  0075                     	ds	1
   520  0076                     Lcd_Set_Cursor@a:	
   521                           
   522                           ; 1 bytes @ 0x6
   523  0076                     	ds	1
   524  0077                     ??_Lcd_Write_String:	
   525  0077                     Lcd_Set_Cursor@z:	
   526                           ; 1 bytes @ 0x7
   527                           
   528  0077                     ___lwdiv@counter:	
   529                           ; 1 bytes @ 0x7
   530                           
   531                           
   532                           ; 1 bytes @ 0x7
   533  0077                     	ds	1
   534  0078                     ?_utoa:	
   535  0078                     ?___awtoft:	
   536                           ; 1 bytes @ 0x8
   537                           
   538  0078                     Lcd_Set_Cursor@y:	
   539                           ; 3 bytes @ 0x8
   540                           
   541  0078                     Lcd_Write_String@i:	
   542                           ; 1 bytes @ 0x8
   543                           
   544  0078                     ___awtoft@c:	
   545                           ; 2 bytes @ 0x8
   546                           
   547  0078                     utoa@val:	
   548                           ; 2 bytes @ 0x8
   549                           
   550                           
   551                           ; 2 bytes @ 0x8
   552  0078                     	ds	1
   553  0079                     Lcd_Set_Cursor@temp:	
   554                           
   555                           ; 1 bytes @ 0x9
   556  0079                     	ds	1
   557  007A                     utoa@base:	
   558                           
   559                           ; 2 bytes @ 0xA
   560  007A                     	ds	1
   561  007B                     ??___awtoft:	
   562                           
   563                           ; 1 bytes @ 0xB
   564  007B                     	ds	1
   565  007C                     ??_utoa:	
   566                           
   567                           ; 1 bytes @ 0xC
   568  007C                     	ds	1
   569  007D                     ??_itoa:	
   570  007D                     ___awtoft@sign:	
   571                           ; 1 bytes @ 0xD
   572                           
   573                           
   574                           ; 1 bytes @ 0xD
   575  007D                     	ds	1
   576                           
   577                           	psect	cstackBANK0
   578  0020                     __pcstackBANK0:	
   579  0020                     ?___ftdiv:	
   580  0020                     utoa@v:	
   581                           ; 3 bytes @ 0x0
   582                           
   583  0020                     ___ftdiv@f2:	
   584                           ; 2 bytes @ 0x0
   585                           
   586                           
   587                           ; 3 bytes @ 0x0
   588  0020                     	ds	2
   589  0022                     utoa@c:	
   590                           
   591                           ; 1 bytes @ 0x2
   592  0022                     	ds	1
   593  0023                     utoa@buf:	
   594  0023                     ___ftdiv@f1:	
   595                           ; 1 bytes @ 0x3
   596                           
   597                           
   598                           ; 3 bytes @ 0x3
   599  0023                     	ds	1
   600  0024                     ?_itoa:	
   601  0024                     itoa@val:	
   602                           ; 1 bytes @ 0x4
   603                           
   604                           
   605                           ; 2 bytes @ 0x4
   606  0024                     	ds	2
   607  0026                     ??___ftdiv:	
   608  0026                     itoa@base:	
   609                           ; 1 bytes @ 0x6
   610                           
   611                           
   612                           ; 2 bytes @ 0x6
   613  0026                     	ds	2
   614  0028                     itoa@cp:	
   615                           
   616                           ; 1 bytes @ 0x8
   617  0028                     	ds	1
   618  0029                     itoa@buf:	
   619                           
   620                           ; 1 bytes @ 0x9
   621  0029                     	ds	1
   622  002A                     ___ftdiv@cntr:	
   623                           
   624                           ; 1 bytes @ 0xA
   625  002A                     	ds	1
   626  002B                     ___ftdiv@f3:	
   627                           
   628                           ; 3 bytes @ 0xB
   629  002B                     	ds	3
   630  002E                     ___ftdiv@exp:	
   631                           
   632                           ; 1 bytes @ 0xE
   633  002E                     	ds	1
   634  002F                     ___ftdiv@sign:	
   635                           
   636                           ; 1 bytes @ 0xF
   637  002F                     	ds	1
   638  0030                     ?___ftmul:	
   639  0030                     ___ftmul@f1:	
   640                           ; 3 bytes @ 0x10
   641                           
   642                           
   643                           ; 3 bytes @ 0x10
   644  0030                     	ds	3
   645  0033                     ___ftmul@f2:	
   646                           
   647                           ; 3 bytes @ 0x13
   648  0033                     	ds	3
   649  0036                     ??___ftmul:	
   650                           
   651                           ; 1 bytes @ 0x16
   652  0036                     	ds	4
   653  003A                     ___ftmul@exp:	
   654                           
   655                           ; 1 bytes @ 0x1A
   656  003A                     	ds	1
   657  003B                     ___ftmul@f3_as_product:	
   658                           
   659                           ; 3 bytes @ 0x1B
   660  003B                     	ds	3
   661  003E                     ___ftmul@cntr:	
   662                           
   663                           ; 1 bytes @ 0x1E
   664  003E                     	ds	1
   665  003F                     ___ftmul@sign:	
   666                           
   667                           ; 1 bytes @ 0x1F
   668  003F                     	ds	1
   669  0040                     ?___fttol:	
   670  0040                     ___fttol@f1:	
   671                           ; 4 bytes @ 0x20
   672                           
   673                           
   674                           ; 3 bytes @ 0x20
   675  0040                     	ds	4
   676  0044                     ??___fttol:	
   677                           
   678                           ; 1 bytes @ 0x24
   679  0044                     	ds	4
   680  0048                     ___fttol@sign1:	
   681                           
   682                           ; 1 bytes @ 0x28
   683  0048                     	ds	1
   684  0049                     ___fttol@lval:	
   685                           
   686                           ; 4 bytes @ 0x29
   687  0049                     	ds	4
   688  004D                     ___fttol@exp1:	
   689                           
   690                           ; 1 bytes @ 0x2D
   691  004D                     	ds	1
   692  004E                     ?_echo:	
   693  004E                     echo@pin:	
   694                           ; 2 bytes @ 0x2E
   695                           
   696                           
   697                           ; 2 bytes @ 0x2E
   698  004E                     	ds	2
   699  0050                     ??_echo:	
   700                           
   701                           ; 1 bytes @ 0x30
   702  0050                     	ds	1
   703  0051                     echo@port:	
   704                           
   705                           ; 1 bytes @ 0x31
   706  0051                     	ds	1
   707  0052                     echo@sfrdev:	
   708                           
   709                           ; 2 bytes @ 0x32
   710  0052                     	ds	2
   711  0054                     echo@a:	
   712                           
   713                           ; 2 bytes @ 0x34
   714  0054                     	ds	2
   715  0056                     ?_main:	
   716  0056                     main@argc:	
   717                           ; 2 bytes @ 0x36
   718                           
   719                           
   720                           ; 2 bytes @ 0x36
   721  0056                     	ds	2
   722  0058                     main@argv:	
   723                           
   724                           ; 2 bytes @ 0x38
   725  0058                     	ds	2
   726  005A                     ??_main:	
   727                           
   728                           ; 1 bytes @ 0x3A
   729  005A                     	ds	3
   730                           
   731                           	psect	maintext
   732  0639                     __pmaintext:	
   733 ;;
   734 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   735 ;;
   736 ;; *************** function _main *****************
   737 ;; Defined at:
   738 ;;		line 94 in file "FinalProject3.c"
   739 ;; Parameters:    Size  Location     Type
   740 ;;  argc            2   54[BANK0 ] int 
   741 ;;  argv            2   56[BANK0 ] PTR PTR unsigned char 
   742 ;; Auto vars:     Size  Location     Type
   743 ;;  bufB            8    8[BANK1 ] unsigned char [8]
   744 ;;  bufA            8    0[BANK1 ] unsigned char [8]
   745 ;;  ping_val2       2   25[BANK1 ] int 
   746 ;;  ping_val1       2   23[BANK1 ] int 
   747 ;;  initialize      2   21[BANK1 ] int 
   748 ;;  delay_counte    2   18[BANK1 ] int 
   749 ;;  toggle          2   16[BANK1 ] int 
   750 ;;  pinitialize     1   27[BANK1 ] PTR int 
   751 ;;		 -> main@initialize(2), 
   752 ;;  pdelay_count    1   20[BANK1 ] PTR int 
   753 ;;		 -> main@delay_counter(2), 
   754 ;; Return value:  Size  Location     Type
   755 ;;                  2   54[BANK0 ] int 
   756 ;; Registers used:
   757 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   758 ;; Tracked objects:
   759 ;;		On entry : B1F/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   763 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   764 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
   765 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
   766 ;;      Totals:         0       7      28       0       0       0       0       0       0       0       0       0       
      +0       0
   767 ;;Total ram usage:       35 bytes
   768 ;; Hardware stack levels required when called:    3
   769 ;; This function calls:
   770 ;;		_Lcd_Clear
   771 ;;		_Lcd_Init
   772 ;;		_Lcd_Set_Cursor
   773 ;;		_Lcd_Write_String
   774 ;;		_echo
   775 ;;		_itoa
   776 ;;		_pinConfig
   777 ;; This function is called by:
   778 ;;		Startup code after reset
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           
   783                           ;psect for function _main
   784  0639                     _main:	
   785                           
   786                           ;FinalProject3.c: 96: pinConfig();
   787                           
   788                           ;incstack = 0
   789                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   790  0639  3182  2220  3186   	fcall	_pinConfig
   791                           
   792                           ;FinalProject3.c: 97: _delay((unsigned long)((30)*(8000000/4000.0)));
   793  063C  304E               	movlw	78
   794  063D  0020               	movlb	0	; select bank0
   795  063E  00DA               	movwf	??_main
   796  063F  30EB               	movlw	235
   797  0640                     u1777:	
   798  0640  0B89               	decfsz	9,f
   799  0641  2E40               	goto	u1777
   800  0642  0BDA               	decfsz	??_main,f
   801  0643  2E40               	goto	u1777
   802                           
   803                           ;FinalProject3.c: 100: OSCCON = 0X6A;
   804  0644  306A               	movlw	106
   805  0645  0021               	movlb	1	; select bank1
   806  0646  0099               	movwf	25	;volatile
   807                           
   808                           ;FinalProject3.c: 101: ANSELC=0x20;
   809  0647  3020               	movlw	32
   810  0648  0023               	movlb	3	; select bank3
   811  0649  008E               	movwf	14	;volatile
   812                           
   813                           ;FinalProject3.c: 104: RC6 = 0;
   814  064A  0020               	movlb	0	; select bank0
   815  064B  130E               	bcf	14,6	;volatile
   816                           
   817                           ;FinalProject3.c: 108: int initialize = 0;
   818  064C  0021               	movlb	1	; select bank1
   819  064D  01B5               	clrf	main@initialize^(0+128)
   820  064E  01B6               	clrf	(main@initialize+1)^(0+128)
   821                           
   822                           ;FinalProject3.c: 109: int *pinitialize = &initialize;
   823  064F  30B5               	movlw	(low (main@initialize| 0))& (0+255)
   824  0650  0020               	movlb	0	; select bank0
   825  0651  00DA               	movwf	??_main
   826  0652  085A               	movf	??_main,w
   827  0653  0021               	movlb	1	; select bank1
   828  0654  00BB               	movwf	main@pinitialize^(0+128)
   829                           
   830                           ;FinalProject3.c: 110: int delay_counter = 0;
   831  0655  01B2               	clrf	main@delay_counter^(0+128)
   832  0656  01B3               	clrf	(main@delay_counter+1)^(0+128)
   833                           
   834                           ;FinalProject3.c: 111: int *pdelay_counter = &delay_counter;
   835  0657  30B2               	movlw	(low (main@delay_counter| 0))& (0+255)
   836  0658  0020               	movlb	0	; select bank0
   837  0659  00DA               	movwf	??_main
   838  065A  085A               	movf	??_main,w
   839  065B  0021               	movlb	1	; select bank1
   840  065C  00B4               	movwf	main@pdelay_counter^(0+128)
   841                           
   842                           ;FinalProject3.c: 113: int toggle = 0;
   843  065D  01B0               	clrf	main@toggle^(0+128)
   844  065E  01B1               	clrf	(main@toggle+1)^(0+128)
   845                           
   846                           ;FinalProject3.c: 117: Lcd_Init();
   847  065F  3182  22C2  3186   	fcall	_Lcd_Init
   848                           
   849                           ;FinalProject3.c: 118: Lcd_Clear();
   850  0662  3181  2132  3186   	fcall	_Lcd_Clear
   851                           
   852                           ;FinalProject3.c: 119: Lcd_Set_Cursor(1,1);
   853  0665  01F3               	clrf	Lcd_Set_Cursor@b
   854  0666  0AF3               	incf	Lcd_Set_Cursor@b,f
   855  0667  3001               	movlw	1
   856  0668  3182  2282  3186   	fcall	_Lcd_Set_Cursor
   857                           
   858                           ;FinalProject3.c: 120: Lcd_Write_String("WELCOME TO UTSA");
   859  066B  3000               	movlw	low (STR_1| (0+32768))
   860  066C  00F5               	movwf	Lcd_Write_String@a
   861  066D  3088               	movlw	high (STR_1| (0+32768))
   862  066E  00F6               	movwf	Lcd_Write_String@a+1
   863  066F  3181  2168  3186   	fcall	_Lcd_Write_String
   864                           
   865                           ;FinalProject3.c: 121: _delay((unsigned long)((1000)*(8000000/4000.0)));
   866  0672  300B               	movlw	11
   867  0673  0020               	movlb	0	; select bank0
   868  0674  00DB               	movwf	??_main+1
   869  0675  3026               	movlw	38
   870  0676  00DA               	movwf	??_main
   871  0677  305D               	movlw	93
   872  0678                     u1787:	
   873  0678  0B89               	decfsz	9,f
   874  0679  2E78               	goto	u1787
   875  067A  0BDA               	decfsz	??_main,f
   876  067B  2E78               	goto	u1787
   877  067C  0BDB               	decfsz	??_main+1,f
   878  067D  2E78               	goto	u1787
   879  067E  3200               	nop2
   880  067F                     l1620:	
   881                           ;FinalProject3.c: 125: while(1)
   882                           
   883                           
   884                           ;FinalProject3.c: 126: {
   885                           ;FinalProject3.c: 128: RC6 = 0;
   886  067F  0020               	movlb	0	; select bank0
   887  0680  130E               	bcf	14,6	;volatile
   888                           
   889                           ;FinalProject3.c: 129: int ping_val1 = echo('A',1);
   890  0681  3001               	movlw	1
   891  0682  00CE               	movwf	echo@pin
   892  0683  3000               	movlw	0
   893  0684  00CF               	movwf	echo@pin+1
   894  0685  3041               	movlw	65
   895  0686  3184  2451  3186   	fcall	_echo
   896  0689  0020               	movlb	0	; select bank0
   897  068A  084F               	movf	?_echo+1,w
   898  068B  0021               	movlb	1	; select bank1
   899  068C  00B8               	movwf	(main@ping_val1+1)^(0+128)
   900  068D  0020               	movlb	0	; select bank0
   901  068E  084E               	movf	?_echo,w
   902  068F  0021               	movlb	1	; select bank1
   903  0690  00B7               	movwf	main@ping_val1^(0+128)
   904                           
   905                           ;FinalProject3.c: 130: int ping_val2 = echo('A',2);
   906  0691  3002               	movlw	2
   907  0692  0020               	movlb	0	; select bank0
   908  0693  00CE               	movwf	echo@pin
   909  0694  3000               	movlw	0
   910  0695  00CF               	movwf	echo@pin+1
   911  0696  3041               	movlw	65
   912  0697  3184  2451  3186   	fcall	_echo
   913  069A  0020               	movlb	0	; select bank0
   914  069B  084F               	movf	?_echo+1,w
   915  069C  0021               	movlb	1	; select bank1
   916  069D  00BA               	movwf	(main@ping_val2+1)^(0+128)
   917  069E  0020               	movlb	0	; select bank0
   918  069F  084E               	movf	?_echo,w
   919  06A0  0021               	movlb	1	; select bank1
   920  06A1  00B9               	movwf	main@ping_val2^(0+128)
   921                           
   922                           ;FinalProject3.c: 132: char bufA[8];
   923                           ;FinalProject3.c: 133: itoa(bufA,ping_val1,10);
   924  06A2  0838               	movf	(main@ping_val1+1)^(0+128),w
   925  06A3  0020               	movlb	0	; select bank0
   926  06A4  00A5               	movwf	itoa@val+1
   927  06A5  0021               	movlb	1	; select bank1
   928  06A6  0837               	movf	main@ping_val1^(0+128),w
   929  06A7  0020               	movlb	0	; select bank0
   930  06A8  00A4               	movwf	itoa@val
   931  06A9  300A               	movlw	10
   932  06AA  00A6               	movwf	itoa@base
   933  06AB  3000               	movlw	0
   934  06AC  00A7               	movwf	itoa@base+1
   935  06AD  30A0               	movlw	(low (main@bufA| 0))& (0+255)
   936  06AE  3181  21A2  3186   	fcall	_itoa
   937                           
   938                           ;FinalProject3.c: 134: char bufB[8];
   939                           ;FinalProject3.c: 135: itoa(bufB,ping_val2,10);
   940  06B1  0021               	movlb	1	; select bank1
   941  06B2  083A               	movf	(main@ping_val2+1)^(0+128),w
   942  06B3  0020               	movlb	0	; select bank0
   943  06B4  00A5               	movwf	itoa@val+1
   944  06B5  0021               	movlb	1	; select bank1
   945  06B6  0839               	movf	main@ping_val2^(0+128),w
   946  06B7  0020               	movlb	0	; select bank0
   947  06B8  00A4               	movwf	itoa@val
   948  06B9  300A               	movlw	10
   949  06BA  00A6               	movwf	itoa@base
   950  06BB  3000               	movlw	0
   951  06BC  00A7               	movwf	itoa@base+1
   952  06BD  30A8               	movlw	(low (main@bufB| 0))& (0+255)
   953  06BE  3181  21A2  3186   	fcall	_itoa
   954                           
   955                           ;FinalProject3.c: 140: if(ping_val1 < 100 && ping_val2 < 100)
   956  06C1  0021               	movlb	1	; select bank1
   957  06C2  0838               	movf	(main@ping_val1+1)^(0+128),w
   958  06C3  3A80               	xorlw	128
   959  06C4  0020               	movlb	0	; select bank0
   960  06C5  00DA               	movwf	??_main
   961  06C6  3080               	movlw	128
   962  06C7  025A               	subwf	??_main,w
   963  06C8  1D03               	skipz
   964  06C9  2ECD               	goto	u1645
   965  06CA  3064               	movlw	100
   966  06CB  0021               	movlb	1	; select bank1
   967  06CC  0237               	subwf	main@ping_val1^(0+128),w
   968  06CD                     u1645:	
   969  06CD  1803               	skipnc
   970  06CE  2F32               	goto	l1648
   971  06CF  0021               	movlb	1	; select bank1
   972  06D0  083A               	movf	(main@ping_val2+1)^(0+128),w
   973  06D1  3A80               	xorlw	128
   974  06D2  0020               	movlb	0	; select bank0
   975  06D3  00DA               	movwf	??_main
   976  06D4  3080               	movlw	128
   977  06D5  025A               	subwf	??_main,w
   978  06D6  1D03               	skipz
   979  06D7  2EDB               	goto	u1655
   980  06D8  3064               	movlw	100
   981  06D9  0021               	movlb	1	; select bank1
   982  06DA  0239               	subwf	main@ping_val2^(0+128),w
   983  06DB                     u1655:	
   984  06DB  1803               	skipnc
   985  06DC  2F32               	goto	l1648
   986                           
   987                           ;FinalProject3.c: 141: {
   988                           ;FinalProject3.c: 142: *pdelay_counter++;
   989  06DD  3002               	movlw	2
   990  06DE  0020               	movlb	0	; select bank0
   991  06DF  00DA               	movwf	??_main
   992  06E0  085A               	movf	??_main,w
   993  06E1  0021               	movlb	1	; select bank1
   994  06E2  07B4               	addwf	main@pdelay_counter^(0+128),f
   995                           
   996                           ;FinalProject3.c: 144: if (*pinitialize == 0)
   997  06E3  083B               	movf	main@pinitialize^(0+128),w
   998  06E4  0086               	movwf	6
   999  06E5  0187               	clrf	7
  1000  06E6  0016               	moviw fsr1++
  1001  06E7  0401               	iorwf	1,w
  1002  06E8  1D03               	btfss	3,2
  1003  06E9  2FDC               	goto	l1680
  1004                           
  1005                           ;FinalProject3.c: 145: {
  1006                           ;FinalProject3.c: 147: Lcd_Clear();
  1007  06EA  3181  2132  3186   	fcall	_Lcd_Clear
  1008                           
  1009                           ;FinalProject3.c: 148: Lcd_Set_Cursor(1,1);
  1010  06ED  01F3               	clrf	Lcd_Set_Cursor@b
  1011  06EE  0AF3               	incf	Lcd_Set_Cursor@b,f
  1012  06EF  3001               	movlw	1
  1013  06F0  3182  2282  3186   	fcall	_Lcd_Set_Cursor
  1014                           
  1015                           ;FinalProject3.c: 149: Lcd_Write_String("In range: ");
  1016  06F3  302A               	movlw	low (STR_2| (0+32768))
  1017  06F4  00F5               	movwf	Lcd_Write_String@a
  1018  06F5  3088               	movlw	high (STR_2| (0+32768))
  1019  06F6  00F6               	movwf	Lcd_Write_String@a+1
  1020  06F7  3181  2168  3186   	fcall	_Lcd_Write_String
  1021                           
  1022                           ;FinalProject3.c: 150: Lcd_Set_Cursor(2,1);
  1023  06FA  01F3               	clrf	Lcd_Set_Cursor@b
  1024  06FB  0AF3               	incf	Lcd_Set_Cursor@b,f
  1025  06FC  3002               	movlw	2
  1026  06FD  3182  2282  3186   	fcall	_Lcd_Set_Cursor
  1027                           
  1028                           ;FinalProject3.c: 151: Lcd_Write_String(bufA);
  1029  0700  30A0               	movlw	low main@bufA
  1030  0701  00F5               	movwf	Lcd_Write_String@a
  1031  0702  3000               	movlw	high main@bufA
  1032  0703  00F6               	movwf	Lcd_Write_String@a+1
  1033  0704  3181  2168  3186   	fcall	_Lcd_Write_String
  1034                           
  1035                           ;FinalProject3.c: 152: Lcd_Write_String(" cm, ");
  1036  0707  3035               	movlw	low (STR_3| (0+32768))
  1037  0708  00F5               	movwf	Lcd_Write_String@a
  1038  0709  3088               	movlw	high (STR_3| (0+32768))
  1039  070A  00F6               	movwf	Lcd_Write_String@a+1
  1040  070B  3181  2168  3186   	fcall	_Lcd_Write_String
  1041                           
  1042                           ;FinalProject3.c: 153: Lcd_Write_String(bufB);
  1043  070E  30A8               	movlw	low main@bufB
  1044  070F  00F5               	movwf	Lcd_Write_String@a
  1045  0710  3000               	movlw	high main@bufB
  1046  0711  00F6               	movwf	Lcd_Write_String@a+1
  1047  0712  3181  2168  3186   	fcall	_Lcd_Write_String
  1048                           
  1049                           ;FinalProject3.c: 154: Lcd_Write_String(" cm");
  1050  0715  303B               	movlw	low (STR_4| (0+32768))
  1051  0716  00F5               	movwf	Lcd_Write_String@a
  1052  0717  3088               	movlw	high (STR_4| (0+32768))
  1053  0718  00F6               	movwf	Lcd_Write_String@a+1
  1054  0719  3181  2168  3186   	fcall	_Lcd_Write_String
  1055                           
  1056                           ;FinalProject3.c: 155: _delay((unsigned long)((500)*(8000000/4000.0)));
  1057  071C  3006               	movlw	6
  1058  071D  0020               	movlb	0	; select bank0
  1059  071E  00DB               	movwf	??_main+1
  1060  071F  3013               	movlw	19
  1061  0720  00DA               	movwf	??_main
  1062  0721  30AD               	movlw	173
  1063  0722                     u1797:	
  1064  0722  0B89               	decfsz	9,f
  1065  0723  2F22               	goto	u1797
  1066  0724  0BDA               	decfsz	??_main,f
  1067  0725  2F22               	goto	u1797
  1068  0726  0BDB               	decfsz	??_main+1,f
  1069  0727  2F22               	goto	u1797
  1070  0728  3200               	nop2
  1071                           
  1072                           ;FinalProject3.c: 157: *pinitialize = 1;
  1073  0729  0021               	movlb	1	; select bank1
  1074  072A  083B               	movf	main@pinitialize^(0+128),w
  1075  072B  0086               	movwf	6
  1076  072C  0187               	clrf	7
  1077  072D  3001               	movlw	1
  1078  072E  3FC0               	movwi [0]fsr1
  1079  072F  3000               	movlw	0
  1080  0730  3FC1               	movwi [1]fsr1
  1081                           
  1082                           ;FinalProject3.c: 159: }
  1083                           ;FinalProject3.c: 161: }
  1084  0731  2FDC               	goto	l1680
  1085  0732                     l1648:	
  1086                           
  1087                           ;FinalProject3.c: 164: else if(ping_val1 > 100 && ping_val2 > 100)
  1088  0732  0021               	movlb	1	; select bank1
  1089  0733  0838               	movf	(main@ping_val1+1)^(0+128),w
  1090  0734  3A80               	xorlw	128
  1091  0735  0020               	movlb	0	; select bank0
  1092  0736  00DA               	movwf	??_main
  1093  0737  3080               	movlw	128
  1094  0738  025A               	subwf	??_main,w
  1095  0739  1D03               	skipz
  1096  073A  2F3E               	goto	u1675
  1097  073B  3065               	movlw	101
  1098  073C  0021               	movlb	1	; select bank1
  1099  073D  0237               	subwf	main@ping_val1^(0+128),w
  1100  073E                     u1675:	
  1101  073E  1C03               	skipc
  1102  073F  2F9B               	goto	l108
  1103  0740  0021               	movlb	1	; select bank1
  1104  0741  083A               	movf	(main@ping_val2+1)^(0+128),w
  1105  0742  3A80               	xorlw	128
  1106  0743  0020               	movlb	0	; select bank0
  1107  0744  00DA               	movwf	??_main
  1108  0745  3080               	movlw	128
  1109  0746  025A               	subwf	??_main,w
  1110  0747  1D03               	skipz
  1111  0748  2F4C               	goto	u1685
  1112  0749  3065               	movlw	101
  1113  074A  0021               	movlb	1	; select bank1
  1114  074B  0239               	subwf	main@ping_val2^(0+128),w
  1115  074C                     u1685:	
  1116  074C  1C03               	skipc
  1117  074D  2F9B               	goto	l108
  1118                           
  1119                           ;FinalProject3.c: 165: {
  1120                           ;FinalProject3.c: 166: *pdelay_counter = 0;
  1121  074E  0021               	movlb	1	; select bank1
  1122  074F  0834               	movf	main@pdelay_counter^(0+128),w
  1123  0750  0086               	movwf	6
  1124  0751  0187               	clrf	7
  1125  0752  3000               	movlw	0
  1126  0753  3FC0               	movwi [0]fsr1
  1127  0754  3FC1               	movwi [1]fsr1
  1128                           
  1129                           ;FinalProject3.c: 167: *pinitialize = 0;
  1130  0755  083B               	movf	main@pinitialize^(0+128),w
  1131  0756  0086               	movwf	6
  1132  0757  0187               	clrf	7
  1133  0758  3000               	movlw	0
  1134  0759  3FC0               	movwi [0]fsr1
  1135  075A  3FC1               	movwi [1]fsr1
  1136                           
  1137                           ;FinalProject3.c: 168: Lcd_Clear();
  1138  075B  3181  2132  3186   	fcall	_Lcd_Clear
  1139                           
  1140                           ;FinalProject3.c: 169: Lcd_Set_Cursor(1,1);
  1141  075E  01F3               	clrf	Lcd_Set_Cursor@b
  1142  075F  0AF3               	incf	Lcd_Set_Cursor@b,f
  1143  0760  3001               	movlw	1
  1144  0761  3182  2282  3186   	fcall	_Lcd_Set_Cursor
  1145                           
  1146                           ;FinalProject3.c: 170: Lcd_Write_String("Out of Range: ");
  1147  0764  3010               	movlw	low (STR_5| (0+32768))
  1148  0765  00F5               	movwf	Lcd_Write_String@a
  1149  0766  3088               	movlw	high (STR_5| (0+32768))
  1150  0767  00F6               	movwf	Lcd_Write_String@a+1
  1151  0768  3181  2168  3186   	fcall	_Lcd_Write_String
  1152                           
  1153                           ;FinalProject3.c: 171: Lcd_Set_Cursor(2,1);
  1154  076B  01F3               	clrf	Lcd_Set_Cursor@b
  1155  076C  0AF3               	incf	Lcd_Set_Cursor@b,f
  1156  076D  3002               	movlw	2
  1157  076E  3182  2282  3186   	fcall	_Lcd_Set_Cursor
  1158                           
  1159                           ;FinalProject3.c: 172: Lcd_Write_String(bufA);
  1160  0771  30A0               	movlw	low main@bufA
  1161  0772  00F5               	movwf	Lcd_Write_String@a
  1162  0773  3000               	movlw	high main@bufA
  1163  0774  00F6               	movwf	Lcd_Write_String@a+1
  1164  0775  3181  2168  3186   	fcall	_Lcd_Write_String
  1165                           
  1166                           ;FinalProject3.c: 173: Lcd_Write_String(" cm, ");
  1167  0778  3035               	movlw	low (STR_3| (0+32768))
  1168  0779  00F5               	movwf	Lcd_Write_String@a
  1169  077A  3088               	movlw	high (STR_3| (0+32768))
  1170  077B  00F6               	movwf	Lcd_Write_String@a+1
  1171  077C  3181  2168  3186   	fcall	_Lcd_Write_String
  1172                           
  1173                           ;FinalProject3.c: 174: Lcd_Write_String(bufB);
  1174  077F  30A8               	movlw	low main@bufB
  1175  0780  00F5               	movwf	Lcd_Write_String@a
  1176  0781  3000               	movlw	high main@bufB
  1177  0782  00F6               	movwf	Lcd_Write_String@a+1
  1178  0783  3181  2168  3186   	fcall	_Lcd_Write_String
  1179                           
  1180                           ;FinalProject3.c: 175: Lcd_Write_String(" cm");
  1181  0786  303B               	movlw	low (STR_4| (0+32768))
  1182  0787  00F5               	movwf	Lcd_Write_String@a
  1183  0788  3088               	movlw	high (STR_4| (0+32768))
  1184  0789  00F6               	movwf	Lcd_Write_String@a+1
  1185  078A  3181  2168  3186   	fcall	_Lcd_Write_String
  1186                           
  1187                           ;FinalProject3.c: 176: _delay((unsigned long)((500)*(8000000/4000.0)));
  1188  078D  3006               	movlw	6
  1189  078E  0020               	movlb	0	; select bank0
  1190  078F  00DB               	movwf	??_main+1
  1191  0790  3013               	movlw	19
  1192  0791  00DA               	movwf	??_main
  1193  0792  30AD               	movlw	173
  1194  0793                     u1807:	
  1195  0793  0B89               	decfsz	9,f
  1196  0794  2F93               	goto	u1807
  1197  0795  0BDA               	decfsz	??_main,f
  1198  0796  2F93               	goto	u1807
  1199  0797  0BDB               	decfsz	??_main+1,f
  1200  0798  2F93               	goto	u1807
  1201  0799  3200               	nop2
  1202                           
  1203                           ;FinalProject3.c: 178: }
  1204  079A  2FDC               	goto	l1680
  1205  079B                     l108:	
  1206                           
  1207                           ;FinalProject3.c: 180: else
  1208                           ;FinalProject3.c: 181: {
  1209                           ;FinalProject3.c: 182: RA5 = 0;
  1210  079B  0020               	movlb	0	; select bank0
  1211  079C  128C               	bcf	12,5	;volatile
  1212                           
  1213                           ;FinalProject3.c: 183: Lcd_Clear();
  1214  079D  3181  2132  3186   	fcall	_Lcd_Clear
  1215                           
  1216                           ;FinalProject3.c: 184: Lcd_Set_Cursor(1,1);
  1217  07A0  01F3               	clrf	Lcd_Set_Cursor@b
  1218  07A1  0AF3               	incf	Lcd_Set_Cursor@b,f
  1219  07A2  3001               	movlw	1
  1220  07A3  3182  2282  3186   	fcall	_Lcd_Set_Cursor
  1221                           
  1222                           ;FinalProject3.c: 185: Lcd_Write_String("Distance: ");
  1223  07A6  301F               	movlw	low (STR_8| (0+32768))
  1224  07A7  00F5               	movwf	Lcd_Write_String@a
  1225  07A8  3088               	movlw	high (STR_8| (0+32768))
  1226  07A9  00F6               	movwf	Lcd_Write_String@a+1
  1227  07AA  3181  2168  3186   	fcall	_Lcd_Write_String
  1228                           
  1229                           ;FinalProject3.c: 186: Lcd_Set_Cursor(2,1);
  1230  07AD  01F3               	clrf	Lcd_Set_Cursor@b
  1231  07AE  0AF3               	incf	Lcd_Set_Cursor@b,f
  1232  07AF  3002               	movlw	2
  1233  07B0  3182  2282  3186   	fcall	_Lcd_Set_Cursor
  1234                           
  1235                           ;FinalProject3.c: 187: Lcd_Write_String(bufA);
  1236  07B3  30A0               	movlw	low main@bufA
  1237  07B4  00F5               	movwf	Lcd_Write_String@a
  1238  07B5  3000               	movlw	high main@bufA
  1239  07B6  00F6               	movwf	Lcd_Write_String@a+1
  1240  07B7  3181  2168  3186   	fcall	_Lcd_Write_String
  1241                           
  1242                           ;FinalProject3.c: 188: Lcd_Write_String(" cm, ");
  1243  07BA  3035               	movlw	low (STR_3| (0+32768))
  1244  07BB  00F5               	movwf	Lcd_Write_String@a
  1245  07BC  3088               	movlw	high (STR_3| (0+32768))
  1246  07BD  00F6               	movwf	Lcd_Write_String@a+1
  1247  07BE  3181  2168  3186   	fcall	_Lcd_Write_String
  1248                           
  1249                           ;FinalProject3.c: 189: Lcd_Write_String(bufB);
  1250  07C1  30A8               	movlw	low main@bufB
  1251  07C2  00F5               	movwf	Lcd_Write_String@a
  1252  07C3  3000               	movlw	high main@bufB
  1253  07C4  00F6               	movwf	Lcd_Write_String@a+1
  1254  07C5  3181  2168  3186   	fcall	_Lcd_Write_String
  1255                           
  1256                           ;FinalProject3.c: 190: Lcd_Write_String(" cm");
  1257  07C8  303B               	movlw	low (STR_4| (0+32768))
  1258  07C9  00F5               	movwf	Lcd_Write_String@a
  1259  07CA  3088               	movlw	high (STR_4| (0+32768))
  1260  07CB  00F6               	movwf	Lcd_Write_String@a+1
  1261  07CC  3181  2168  3186   	fcall	_Lcd_Write_String
  1262                           
  1263                           ;FinalProject3.c: 191: _delay((unsigned long)((500)*(8000000/4000.0)));
  1264  07CF  3006               	movlw	6
  1265  07D0  0020               	movlb	0	; select bank0
  1266  07D1  00DB               	movwf	??_main+1
  1267  07D2  3013               	movlw	19
  1268  07D3  00DA               	movwf	??_main
  1269  07D4  30AD               	movlw	173
  1270  07D5                     u1817:	
  1271  07D5  0B89               	decfsz	9,f
  1272  07D6  2FD5               	goto	u1817
  1273  07D7  0BDA               	decfsz	??_main,f
  1274  07D8  2FD5               	goto	u1817
  1275  07D9  0BDB               	decfsz	??_main+1,f
  1276  07DA  2FD5               	goto	u1817
  1277  07DB  3200               	nop2
  1278  07DC                     l1680:	
  1279                           
  1280                           ;FinalProject3.c: 192: }
  1281                           ;FinalProject3.c: 204: toggle = ~toggle;
  1282  07DC  0021               	movlb	1	; select bank1
  1283  07DD  09B0               	comf	main@toggle^(0+128),f
  1284  07DE  09B1               	comf	(main@toggle+1)^(0+128),f
  1285                           
  1286                           ;FinalProject3.c: 206: if(*pdelay_counter > 50)
  1287  07DF  0834               	movf	main@pdelay_counter^(0+128),w
  1288  07E0  0086               	movwf	6
  1289  07E1  0187               	clrf	7
  1290  07E2  3F40               	moviw [0]fsr1
  1291  07E3  0020               	movlb	0	; select bank0
  1292  07E4  00DA               	movwf	??_main
  1293  07E5  3F41               	moviw [1]fsr1
  1294  07E6  00DB               	movwf	??_main+1
  1295  07E7  085B               	movf	??_main+1,w
  1296  07E8  3A80               	xorlw	128
  1297  07E9  00DC               	movwf	??_main+2
  1298  07EA  3080               	movlw	128
  1299  07EB  025C               	subwf	??_main+2,w
  1300  07EC  1D03               	skipz
  1301  07ED  2FF0               	goto	u1695
  1302  07EE  3033               	movlw	51
  1303  07EF  025A               	subwf	??_main,w
  1304  07F0                     u1695:	
  1305  07F0  1C03               	skipc
  1306  07F1  2E7F               	goto	l1620
  1307                           
  1308                           ;FinalProject3.c: 207: {
  1309                           ;FinalProject3.c: 208: RA5 ^= 1;
  1310  07F2  0020               	movlb	0	; select bank0
  1311  07F3  3020               	movlw	32
  1312  07F4  068C               	xorwf	12,f
  1313                           
  1314                           ;FinalProject3.c: 209: *pinitialize = 0;
  1315  07F5  0021               	movlb	1	; select bank1
  1316  07F6  083B               	movf	main@pinitialize^(0+128),w
  1317  07F7  0086               	movwf	6
  1318  07F8  0187               	clrf	7
  1319  07F9  3000               	movlw	0
  1320  07FA  3FC0               	movwi [0]fsr1
  1321  07FB  3FC1               	movwi [1]fsr1
  1322  07FC  2E7F               	goto	l1620
  1323  07FD                     __end_of_main:	
  1324                           ;FinalProject3.c: 210: }
  1325                           ;FinalProject3.c: 212: }
  1326                           ;FinalProject3.c: 214: return 0;
  1327                           ;	Return value of _main is never used
  1328                           
  1329                           
  1330                           	psect	text1
  1331  0220                     __ptext1:	
  1332 ;; *************** function _pinConfig *****************
  1333 ;; Defined at:
  1334 ;;		line 299 in file "FinalProject3.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;		None
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;		None
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  1    wreg      void 
  1341 ;; Registers used:
  1342 ;;		wreg, status,2
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1352 ;;Total ram usage:        0 bytes
  1353 ;; Hardware stack levels used:    1
  1354 ;; This function calls:
  1355 ;;		Nothing
  1356 ;; This function is called by:
  1357 ;;		_main
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           
  1362                           ;psect for function _pinConfig
  1363  0220                     _pinConfig:	
  1364                           
  1365                           ;FinalProject3.c: 300: TRISA = ~(1<<0)&(1<<1)|(1<<2);
  1366                           
  1367                           ;incstack = 0
  1368                           ; Regs used in _pinConfig: [wreg+status,2]
  1369  0220  3006               	movlw	6
  1370  0221  0021               	movlb	1	; select bank1
  1371  0222  008C               	movwf	12	;volatile
  1372                           
  1373                           ;FinalProject3.c: 301: ANSELA = 0;
  1374  0223  0023               	movlb	3	; select bank3
  1375  0224  018C               	clrf	12	;volatile
  1376                           
  1377                           ;FinalProject3.c: 302: TRISB = (1<<4)|(1<<5)|(1<<6)|(1<<7);
  1378  0225  30F0               	movlw	240
  1379  0226  0021               	movlb	1	; select bank1
  1380  0227  008D               	movwf	13	;volatile
  1381                           
  1382                           ;FinalProject3.c: 303: ANSELB = 0;
  1383  0228  0023               	movlb	3	; select bank3
  1384  0229  018D               	clrf	13	;volatile
  1385                           
  1386                           ;FinalProject3.c: 304: TRISC = ~(1<<0)&~(1<<3)&~(1<<6)&~(1<<4)|(1<<5);
  1387  022A  30A6               	movlw	166
  1388  022B  0021               	movlb	1	; select bank1
  1389  022C  008E               	movwf	14	;volatile
  1390                           
  1391                           ;FinalProject3.c: 306: ANSELC = 0;
  1392  022D  0023               	movlb	3	; select bank3
  1393  022E  018E               	clrf	14	;volatile
  1394                           
  1395                           ;FinalProject3.c: 307: OSCCON = 0x6A;
  1396  022F  306A               	movlw	106
  1397  0230  0021               	movlb	1	; select bank1
  1398  0231  0099               	movwf	25	;volatile
  1399                           
  1400                           ;FinalProject3.c: 308: TXCKSEL = 1;
  1401  0232  0022               	movlb	2	; select bank2
  1402  0233  151D               	bsf	29,2	;volatile
  1403                           
  1404                           ;FinalProject3.c: 309: RXDTSEL = 1;
  1405  0234  179D               	bsf	29,7	;volatile
  1406                           
  1407                           ;FinalProject3.c: 311: ANSELC=0x20;
  1408  0235  3020               	movlw	32
  1409  0236  0023               	movlb	3	; select bank3
  1410  0237  008E               	movwf	14	;volatile
  1411                           
  1412                           ;FinalProject3.c: 313: TRISA = ~(1<<0)&(1<<1)|(1<<2);
  1413  0238  3006               	movlw	6
  1414  0239  0021               	movlb	1	; select bank1
  1415  023A  008C               	movwf	12	;volatile
  1416                           
  1417                           ;FinalProject3.c: 314: ANSELA = 0;
  1418  023B  0023               	movlb	3	; select bank3
  1419  023C  018C               	clrf	12	;volatile
  1420                           
  1421                           ;FinalProject3.c: 315: TRISB = TRISB & ~( (1<<4)|(1<<5)|(1<<6)|(1<<7) );
  1422  023D  0021               	movlb	1	; select bank1
  1423  023E  080D               	movf	13,w	;volatile
  1424  023F  390F               	andlw	15
  1425  0240  008D               	movwf	13	;volatile
  1426                           
  1427                           ;FinalProject3.c: 316: ANSELB = ANSELB & ~( (1<<4)|(1<<5)|(1<<6)|(1<<7) );
  1428  0241  0023               	movlb	3	; select bank3
  1429  0242  080D               	movf	13,w	;volatile
  1430  0243  390F               	andlw	15
  1431  0244  008D               	movwf	13	;volatile
  1432                           
  1433                           ;FinalProject3.c: 317: TRISC = TRISC & ~( (1<<0)|(1<<3)|(1<<6) );
  1434  0245  0021               	movlb	1	; select bank1
  1435  0246  080E               	movf	14,w	;volatile
  1436  0247  39B6               	andlw	182
  1437  0248  008E               	movwf	14	;volatile
  1438                           
  1439                           ;FinalProject3.c: 318: ANSELC = ANSELC & ~( (1<<0)|(1<<3)|(1<<6) );
  1440  0249  0023               	movlb	3	; select bank3
  1441  024A  080E               	movf	14,w	;volatile
  1442  024B  39B6               	andlw	182
  1443  024C  008E               	movwf	14	;volatile
  1444  024D  0008               	return
  1445  024E                     __end_of_pinConfig:	
  1446                           
  1447                           	psect	text2
  1448  01A2                     __ptext2:	
  1449 ;; *************** function _itoa *****************
  1450 ;; Defined at:
  1451 ;;		line 4 in file "/Applications/microchip/xc8/v1.45/sources/common/itoa.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;  buf             1    wreg     PTR unsigned char 
  1454 ;;		 -> main@bufB(8), main@bufA(8), 
  1455 ;;  val             2    4[BANK0 ] int 
  1456 ;;  base            2    6[BANK0 ] int 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  buf             1    9[BANK0 ] PTR unsigned char 
  1459 ;;		 -> main@bufB(8), main@bufA(8), 
  1460 ;;  cp              1    8[BANK0 ] PTR unsigned char 
  1461 ;;		 -> main@bufB(8), main@bufA(8), 
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  1    wreg      PTR unsigned char 
  1464 ;; Registers used:
  1465 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1471 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1472 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1473 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1474 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1475 ;;Total ram usage:        7 bytes
  1476 ;; Hardware stack levels used:    1
  1477 ;; Hardware stack levels required when called:    2
  1478 ;; This function calls:
  1479 ;;		_utoa
  1480 ;; This function is called by:
  1481 ;;		_main
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485                           
  1486                           ;psect for function _itoa
  1487  01A2                     _itoa:	
  1488                           
  1489                           ;incstack = 0
  1490                           ; Regs used in _itoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1491                           ;itoa@buf stored from wreg
  1492  01A2  0020               	movlb	0	; select bank0
  1493  01A3  00A9               	movwf	itoa@buf
  1494  01A4  0829               	movf	itoa@buf,w
  1495  01A5  00FD               	movwf	??_itoa
  1496  01A6  087D               	movf	??_itoa,w
  1497  01A7  00A8               	movwf	itoa@cp
  1498  01A8  1FA5               	btfss	itoa@val+1,7
  1499  01A9  29BA               	goto	l1582
  1500  01AA  302D               	movlw	45
  1501  01AB  00FD               	movwf	??_itoa
  1502  01AC  0829               	movf	itoa@buf,w
  1503  01AD  0086               	movwf	6
  1504  01AE  0187               	clrf	7
  1505  01AF  087D               	movf	??_itoa,w
  1506  01B0  0081               	movwf	1
  1507  01B1  3001               	movlw	1
  1508  01B2  00FD               	movwf	??_itoa
  1509  01B3  087D               	movf	??_itoa,w
  1510  01B4  07A9               	addwf	itoa@buf,f
  1511  01B5  09A4               	comf	itoa@val,f
  1512  01B6  09A5               	comf	itoa@val+1,f
  1513  01B7  0AA4               	incf	itoa@val,f
  1514  01B8  1903               	skipnz
  1515  01B9  0AA5               	incf	itoa@val+1,f
  1516  01BA                     l1582:	
  1517  01BA  0825               	movf	itoa@val+1,w
  1518  01BB  00F9               	movwf	utoa@val+1
  1519  01BC  0824               	movf	itoa@val,w
  1520  01BD  00F8               	movwf	utoa@val
  1521  01BE  0827               	movf	itoa@base+1,w
  1522  01BF  00FB               	movwf	utoa@base+1
  1523  01C0  0826               	movf	itoa@base,w
  1524  01C1  00FA               	movwf	utoa@base
  1525  01C2  0829               	movf	itoa@buf,w
  1526  01C3  3183  2304         	fcall	_utoa
  1527  01C5  0008               	return
  1528  01C6                     __end_of_itoa:	
  1529                           ;	Return value of _itoa is never used
  1530                           
  1531                           
  1532                           	psect	text3
  1533  0304                     __ptext3:	
  1534 ;; *************** function _utoa *****************
  1535 ;; Defined at:
  1536 ;;		line 17 in file "/Applications/microchip/xc8/v1.45/sources/common/itoa.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;  buf             1    wreg     PTR unsigned char 
  1539 ;;		 -> main@bufB(8), main@bufA(8), 
  1540 ;;  val             2    8[COMMON] unsigned int 
  1541 ;;  base            2   10[COMMON] int 
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  1544 ;;		 -> main@bufB(8), main@bufA(8), 
  1545 ;;  v               2    0[BANK0 ] unsigned int 
  1546 ;;  c               1    2[BANK0 ] unsigned char 
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  1    wreg      PTR unsigned char 
  1549 ;; Registers used:
  1550 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1556 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1557 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1558 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1559 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1560 ;;Total ram usage:        9 bytes
  1561 ;; Hardware stack levels used:    1
  1562 ;; Hardware stack levels required when called:    1
  1563 ;; This function calls:
  1564 ;;		___lwdiv
  1565 ;;		___lwmod
  1566 ;; This function is called by:
  1567 ;;		_itoa
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           
  1572                           ;psect for function _utoa
  1573  0304                     _utoa:	
  1574                           
  1575                           ;incstack = 0
  1576                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1577                           ;utoa@buf stored from wreg
  1578  0304  0020               	movlb	0	; select bank0
  1579  0305  00A3               	movwf	utoa@buf
  1580  0306  0879               	movf	utoa@val+1,w
  1581  0307  00A1               	movwf	utoa@v+1
  1582  0308  0878               	movf	utoa@val,w
  1583  0309  00A0               	movwf	utoa@v
  1584  030A                     l1458:	
  1585  030A  087B               	movf	utoa@base+1,w
  1586  030B  00F1               	movwf	___lwdiv@divisor+1
  1587  030C  087A               	movf	utoa@base,w
  1588  030D  00F0               	movwf	___lwdiv@divisor
  1589  030E  0821               	movf	utoa@v+1,w
  1590  030F  00F3               	movwf	___lwdiv@dividend+1
  1591  0310  0820               	movf	utoa@v,w
  1592  0311  00F2               	movwf	___lwdiv@dividend
  1593  0312  3182  224E  3183   	fcall	___lwdiv
  1594  0315  0871               	movf	?___lwdiv+1,w
  1595  0316  0020               	movlb	0	; select bank0
  1596  0317  00A1               	movwf	utoa@v+1
  1597  0318  0870               	movf	?___lwdiv,w
  1598  0319  00A0               	movwf	utoa@v
  1599  031A  3001               	movlw	1
  1600  031B  00FC               	movwf	??_utoa
  1601  031C  087C               	movf	??_utoa,w
  1602  031D  07A3               	addwf	utoa@buf,f
  1603  031E  0820               	movf	utoa@v,w
  1604  031F  0421               	iorwf	utoa@v+1,w
  1605  0320  1D03               	btfss	3,2
  1606  0321  2B0A               	goto	l1458
  1607  0322  0823               	movf	utoa@buf,w
  1608  0323  0086               	movwf	6
  1609  0324  0187               	clrf	7
  1610  0325  0181               	clrf	1
  1611  0326  3001               	movlw	1
  1612  0327  02A3               	subwf	utoa@buf,f
  1613  0328                     l1468:	
  1614  0328  087B               	movf	utoa@base+1,w
  1615  0329  00F1               	movwf	___lwmod@divisor+1
  1616  032A  087A               	movf	utoa@base,w
  1617  032B  00F0               	movwf	___lwmod@divisor
  1618  032C  0879               	movf	utoa@val+1,w
  1619  032D  00F3               	movwf	___lwmod@dividend+1
  1620  032E  0878               	movf	utoa@val,w
  1621  032F  00F2               	movwf	___lwmod@dividend
  1622  0330  3181  21C6  3183   	fcall	___lwmod
  1623  0333  0870               	movf	?___lwmod,w
  1624  0334  00FC               	movwf	??_utoa
  1625  0335  087C               	movf	??_utoa,w
  1626  0336  0020               	movlb	0	; select bank0
  1627  0337  00A2               	movwf	utoa@c
  1628  0338  087B               	movf	utoa@base+1,w
  1629  0339  00F1               	movwf	___lwdiv@divisor+1
  1630  033A  087A               	movf	utoa@base,w
  1631  033B  00F0               	movwf	___lwdiv@divisor
  1632  033C  0879               	movf	utoa@val+1,w
  1633  033D  00F3               	movwf	___lwdiv@dividend+1
  1634  033E  0878               	movf	utoa@val,w
  1635  033F  00F2               	movwf	___lwdiv@dividend
  1636  0340  3182  224E  3183   	fcall	___lwdiv
  1637  0343  0871               	movf	?___lwdiv+1,w
  1638  0344  00F9               	movwf	utoa@val+1
  1639  0345  0870               	movf	?___lwdiv,w
  1640  0346  00F8               	movwf	utoa@val
  1641  0347  300A               	movlw	10
  1642  0348  0020               	movlb	0	; select bank0
  1643  0349  0222               	subwf	utoa@c,w
  1644  034A  1C03               	skipc
  1645  034B  2B50               	goto	l499
  1646  034C  3007               	movlw	7
  1647  034D  00FC               	movwf	??_utoa
  1648  034E  087C               	movf	??_utoa,w
  1649  034F  07A2               	addwf	utoa@c,f
  1650  0350                     l499:	
  1651  0350  3030               	movlw	48
  1652  0351  00FC               	movwf	??_utoa
  1653  0352  087C               	movf	??_utoa,w
  1654  0353  07A2               	addwf	utoa@c,f
  1655  0354  0822               	movf	utoa@c,w
  1656  0355  00FC               	movwf	??_utoa
  1657  0356  0823               	movf	utoa@buf,w
  1658  0357  0086               	movwf	6
  1659  0358  0187               	clrf	7
  1660  0359  087C               	movf	??_utoa,w
  1661  035A  0081               	movwf	1
  1662  035B  3001               	movlw	1
  1663  035C  02A3               	subwf	utoa@buf,f
  1664  035D  0878               	movf	utoa@val,w
  1665  035E  0479               	iorwf	utoa@val+1,w
  1666  035F  1D03               	btfss	3,2
  1667  0360  2B28               	goto	l1468
  1668                           
  1669                           ;	Return value of _utoa is never used
  1670  0361  3001               	movlw	1
  1671  0362  00FC               	movwf	??_utoa
  1672  0363  087C               	movf	??_utoa,w
  1673  0364  07A3               	addwf	utoa@buf,f
  1674  0365  0008               	return
  1675  0366                     __end_of_utoa:	
  1676                           
  1677                           	psect	text4
  1678  01C6                     __ptext4:	
  1679 ;; *************** function ___lwmod *****************
  1680 ;; Defined at:
  1681 ;;		line 6 in file "/Applications/microchip/xc8/v1.45/sources/common/lwmod.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;  divisor         2    0[COMMON] unsigned int 
  1684 ;;  dividend        2    2[COMMON] unsigned int 
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;  counter         1    5[COMMON] unsigned char 
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  2    0[COMMON] unsigned int 
  1689 ;; Registers used:
  1690 ;;		wreg, status,2, status,0
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1696 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1697 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1698 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1699 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1700 ;;Total ram usage:        6 bytes
  1701 ;; Hardware stack levels used:    1
  1702 ;; This function calls:
  1703 ;;		Nothing
  1704 ;; This function is called by:
  1705 ;;		_utoa
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           
  1710                           ;psect for function ___lwmod
  1711  01C6                     ___lwmod:	
  1712                           
  1713                           ;incstack = 0
  1714                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1715  01C6  0870               	movf	___lwmod@divisor,w
  1716  01C7  0471               	iorwf	___lwmod@divisor+1,w
  1717  01C8  1903               	btfsc	3,2
  1718  01C9  29ED               	goto	l1270
  1719  01CA  01F5               	clrf	___lwmod@counter
  1720  01CB  0AF5               	incf	___lwmod@counter,f
  1721  01CC                     l1260:	
  1722  01CC  1BF1               	btfsc	___lwmod@divisor+1,7
  1723  01CD  29D8               	goto	l1262
  1724  01CE  3001               	movlw	1
  1725  01CF                     u1145:	
  1726  01CF  35F0               	lslf	___lwmod@divisor,f
  1727  01D0  0DF1               	rlf	___lwmod@divisor+1,f
  1728  01D1  0B89               	decfsz	9,f
  1729  01D2  29CF               	goto	u1145
  1730  01D3  3001               	movlw	1
  1731  01D4  00F4               	movwf	??___lwmod
  1732  01D5  0874               	movf	??___lwmod,w
  1733  01D6  07F5               	addwf	___lwmod@counter,f
  1734  01D7  29CC               	goto	l1260
  1735  01D8                     l1262:	
  1736  01D8  0871               	movf	___lwmod@divisor+1,w
  1737  01D9  0273               	subwf	___lwmod@dividend+1,w
  1738  01DA  1D03               	skipz
  1739  01DB  29DE               	goto	u1165
  1740  01DC  0870               	movf	___lwmod@divisor,w
  1741  01DD  0272               	subwf	___lwmod@dividend,w
  1742  01DE                     u1165:	
  1743  01DE  1C03               	skipc
  1744  01DF  29E4               	goto	l1266
  1745  01E0  0870               	movf	___lwmod@divisor,w
  1746  01E1  02F2               	subwf	___lwmod@dividend,f
  1747  01E2  0871               	movf	___lwmod@divisor+1,w
  1748  01E3  3BF3               	subwfb	___lwmod@dividend+1,f
  1749  01E4                     l1266:	
  1750  01E4  3001               	movlw	1
  1751  01E5                     u1175:	
  1752  01E5  36F1               	lsrf	___lwmod@divisor+1,f
  1753  01E6  0CF0               	rrf	___lwmod@divisor,f
  1754  01E7  0B89               	decfsz	9,f
  1755  01E8  29E5               	goto	u1175
  1756  01E9  3001               	movlw	1
  1757  01EA  02F5               	subwf	___lwmod@counter,f
  1758  01EB  1D03               	btfss	3,2
  1759  01EC  29D8               	goto	l1262
  1760  01ED                     l1270:	
  1761  01ED  0873               	movf	___lwmod@dividend+1,w
  1762  01EE  00F1               	movwf	?___lwmod+1
  1763  01EF  0872               	movf	___lwmod@dividend,w
  1764  01F0  00F0               	movwf	?___lwmod
  1765  01F1  0008               	return
  1766  01F2                     __end_of___lwmod:	
  1767                           
  1768                           	psect	text5
  1769  024E                     __ptext5:	
  1770 ;; *************** function ___lwdiv *****************
  1771 ;; Defined at:
  1772 ;;		line 6 in file "/Applications/microchip/xc8/v1.45/sources/common/lwdiv.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;  divisor         2    0[COMMON] unsigned int 
  1775 ;;  dividend        2    2[COMMON] unsigned int 
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;  quotient        2    5[COMMON] unsigned int 
  1778 ;;  counter         1    7[COMMON] unsigned char 
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  2    0[COMMON] unsigned int 
  1781 ;; Registers used:
  1782 ;;		wreg, status,2, status,0
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1788 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1789 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1790 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1791 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1792 ;;Total ram usage:        8 bytes
  1793 ;; Hardware stack levels used:    1
  1794 ;; This function calls:
  1795 ;;		Nothing
  1796 ;; This function is called by:
  1797 ;;		_utoa
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           
  1802                           ;psect for function ___lwdiv
  1803  024E                     ___lwdiv:	
  1804                           
  1805                           ;incstack = 0
  1806                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1807  024E  01F5               	clrf	___lwdiv@quotient
  1808  024F  01F6               	clrf	___lwdiv@quotient+1
  1809  0250  0870               	movf	___lwdiv@divisor,w
  1810  0251  0471               	iorwf	___lwdiv@divisor+1,w
  1811  0252  1903               	btfsc	3,2
  1812  0253  2A7D               	goto	l1248
  1813  0254  01F7               	clrf	___lwdiv@counter
  1814  0255  0AF7               	incf	___lwdiv@counter,f
  1815  0256                     l1236:	
  1816  0256  1BF1               	btfsc	___lwdiv@divisor+1,7
  1817  0257  2A62               	goto	l1238
  1818  0258  3001               	movlw	1
  1819  0259                     u1075:	
  1820  0259  35F0               	lslf	___lwdiv@divisor,f
  1821  025A  0DF1               	rlf	___lwdiv@divisor+1,f
  1822  025B  0B89               	decfsz	9,f
  1823  025C  2A59               	goto	u1075
  1824  025D  3001               	movlw	1
  1825  025E  00F4               	movwf	??___lwdiv
  1826  025F  0874               	movf	??___lwdiv,w
  1827  0260  07F7               	addwf	___lwdiv@counter,f
  1828  0261  2A56               	goto	l1236
  1829  0262                     l1238:	
  1830  0262  3001               	movlw	1
  1831  0263                     u1095:	
  1832  0263  35F5               	lslf	___lwdiv@quotient,f
  1833  0264  0DF6               	rlf	___lwdiv@quotient+1,f
  1834  0265  0B89               	decfsz	9,f
  1835  0266  2A63               	goto	u1095
  1836  0267  0871               	movf	___lwdiv@divisor+1,w
  1837  0268  0273               	subwf	___lwdiv@dividend+1,w
  1838  0269  1D03               	skipz
  1839  026A  2A6D               	goto	u1105
  1840  026B  0870               	movf	___lwdiv@divisor,w
  1841  026C  0272               	subwf	___lwdiv@dividend,w
  1842  026D                     u1105:	
  1843  026D  1C03               	skipc
  1844  026E  2A74               	goto	l1244
  1845  026F  0870               	movf	___lwdiv@divisor,w
  1846  0270  02F2               	subwf	___lwdiv@dividend,f
  1847  0271  0871               	movf	___lwdiv@divisor+1,w
  1848  0272  3BF3               	subwfb	___lwdiv@dividend+1,f
  1849  0273  1475               	bsf	___lwdiv@quotient,0
  1850  0274                     l1244:	
  1851  0274  3001               	movlw	1
  1852  0275                     u1115:	
  1853  0275  36F1               	lsrf	___lwdiv@divisor+1,f
  1854  0276  0CF0               	rrf	___lwdiv@divisor,f
  1855  0277  0B89               	decfsz	9,f
  1856  0278  2A75               	goto	u1115
  1857  0279  3001               	movlw	1
  1858  027A  02F7               	subwf	___lwdiv@counter,f
  1859  027B  1D03               	btfss	3,2
  1860  027C  2A62               	goto	l1238
  1861  027D                     l1248:	
  1862  027D  0876               	movf	___lwdiv@quotient+1,w
  1863  027E  00F1               	movwf	?___lwdiv+1
  1864  027F  0875               	movf	___lwdiv@quotient,w
  1865  0280  00F0               	movwf	?___lwdiv
  1866  0281  0008               	return
  1867  0282                     __end_of___lwdiv:	
  1868                           
  1869                           	psect	text6
  1870  0451                     __ptext6:	
  1871 ;; *************** function _echo *****************
  1872 ;; Defined at:
  1873 ;;		line 217 in file "FinalProject3.c"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;  port            1    wreg     unsigned char 
  1876 ;;  pin             2   46[BANK0 ] int 
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;  port            1   49[BANK0 ] unsigned char 
  1879 ;;  a               2   52[BANK0 ] int 
  1880 ;;  sfrdev          2   50[BANK0 ] PTR unsigned char 
  1881 ;;		 -> PORTC(1), PORTB(1), PORTA(1), 
  1882 ;; Return value:  Size  Location     Type
  1883 ;;                  2   46[BANK0 ] int 
  1884 ;; Registers used:
  1885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1886 ;; Tracked objects:
  1887 ;;		On entry : 0/0
  1888 ;;		On exit  : 0/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1891 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1892 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1893 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1894 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1895 ;;Total ram usage:        8 bytes
  1896 ;; Hardware stack levels used:    1
  1897 ;; Hardware stack levels required when called:    2
  1898 ;; This function calls:
  1899 ;;		___awtoft
  1900 ;;		___ftdiv
  1901 ;;		___ftmul
  1902 ;;		___fttol
  1903 ;; This function is called by:
  1904 ;;		_main
  1905 ;;		_ping
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           
  1910                           ;psect for function _echo
  1911  0451                     _echo:	
  1912                           
  1913                           ;incstack = 0
  1914                           ; Regs used in _echo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1915                           ;echo@port stored from wreg
  1916  0451  0020               	movlb	0	; select bank0
  1917  0452  00D1               	movwf	echo@port
  1918                           
  1919                           ;FinalProject3.c: 218: char* sfrdev;
  1920                           ;FinalProject3.c: 219: switch(port){
  1921  0453  2C61               	goto	l1544
  1922  0454                     l117:	
  1923                           ;FinalProject3.c: 220: case 'A' :
  1924                           
  1925                           
  1926                           ;FinalProject3.c: 221: sfrdev = &PORTA;
  1927  0454  3000               	movlw	0
  1928  0455  00D3               	movwf	echo@sfrdev+1
  1929  0456  300C               	movlw	12
  1930  0457  2C5F               	goto	L2
  1931  0458                     l119:	
  1932                           ;FinalProject3.c: 223: case 'B' :
  1933                           
  1934                           ;FinalProject3.c: 222: break;
  1935                           
  1936                           
  1937                           ;FinalProject3.c: 224: sfrdev = &PORTB;
  1938  0458  3000               	movlw	0
  1939  0459  00D3               	movwf	echo@sfrdev+1
  1940  045A  300D               	movlw	13
  1941  045B  2C5F               	goto	L2
  1942  045C                     l120:	
  1943                           ;FinalProject3.c: 226: case 'C' :
  1944                           
  1945                           ;FinalProject3.c: 225: break;
  1946                           
  1947                           
  1948                           ;FinalProject3.c: 227: sfrdev = &PORTC;
  1949  045C  3000               	movlw	0
  1950  045D  00D3               	movwf	echo@sfrdev+1
  1951  045E  300E               	movlw	14
  1952  045F                     L2:	
  1953  045F  00D2               	movwf	echo@sfrdev
  1954                           
  1955                           ;FinalProject3.c: 228: }
  1956  0460  2C6C               	goto	l1546
  1957  0461                     l1544:	
  1958  0461  0851               	movf	echo@port,w
  1959                           
  1960                           ; Switch size 1, requested type "space"
  1961                           ; Number of cases is 3, Range of values is 65 to 67
  1962                           ; switch strategies available:
  1963                           ; Name         Instructions Cycles
  1964                           ; simple_byte           10     6 (average)
  1965                           ; direct_byte           15     9 (fixed)
  1966                           ; jumptable            263     9 (fixed)
  1967                           ;	Chosen strategy is simple_byte
  1968  0462  3A41               	xorlw	65	; case 65
  1969  0463  1903               	skipnz
  1970  0464  2C54               	goto	l117
  1971  0465  3A03               	xorlw	3	; case 66
  1972  0466  1903               	skipnz
  1973  0467  2C58               	goto	l119
  1974  0468  3A01               	xorlw	1	; case 67
  1975  0469  1903               	skipnz
  1976  046A  2C5C               	goto	l120
  1977  046B  2C6C               	goto	l1546
  1978  046C                     l1546:	
  1979                           
  1980                           ;FinalProject3.c: 230: int a;
  1981                           ;FinalProject3.c: 232: T1CON = 0x10;
  1982  046C  3010               	movlw	16
  1983  046D  0098               	movwf	24	;volatile
  1984                           
  1985                           ;FinalProject3.c: 234: TMR1H = 0;
  1986  046E  0197               	clrf	23	;volatile
  1987                           
  1988                           ;FinalProject3.c: 235: TMR1L = 0;
  1989  046F  0196               	clrf	22	;volatile
  1990                           
  1991                           ;FinalProject3.c: 237: RA0 = 1;
  1992  0470  140C               	bsf	12,0	;volatile
  1993                           
  1994                           ;FinalProject3.c: 238: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1995  0471  3006               	movlw	6
  1996  0472                     u1827:	
  1997  0472  0B89               	decfsz	9,f
  1998  0473  2C72               	goto	u1827
  1999  0474  3200               	nop2
  2000                           
  2001                           ;FinalProject3.c: 239: RA0 = 0;
  2002  0475  0020               	movlb	0	; select bank0
  2003  0476  100C               	bcf	12,0	;volatile
  2004  0477                     l1556:	
  2005                           ;FinalProject3.c: 241: while( !(*sfrdev & (1<<pin)) );
  2006                           
  2007  0477  0852               	movf	echo@sfrdev,w
  2008  0478  0086               	movwf	6
  2009  0479  0853               	movf	echo@sfrdev+1,w
  2010  047A  0087               	movwf	7
  2011  047B  3001               	movlw	1
  2012  047C  00D0               	movwf	??_echo
  2013  047D  0A4E               	incf	echo@pin,w
  2014  047E  2C80               	goto	u1594
  2015  047F                     u1595:	
  2016  047F  35D0               	lslf	??_echo,f
  2017  0480                     u1594:	
  2018  0480  0B89               	decfsz	9,f
  2019  0481  2C7F               	goto	u1595
  2020  0482  0850               	movf	??_echo,w
  2021  0483  0501               	andwf	1,w
  2022  0484  1903               	btfsc	3,2
  2023  0485  2C77               	goto	l1556
  2024                           
  2025                           ;FinalProject3.c: 242: TMR1ON = 1;
  2026  0486  1418               	bsf	24,0	;volatile
  2027  0487                     l1558:	
  2028                           ;FinalProject3.c: 243: while( (*sfrdev & (1<<pin)) );
  2029                           
  2030  0487  0852               	movf	echo@sfrdev,w
  2031  0488  0086               	movwf	6
  2032  0489  0853               	movf	echo@sfrdev+1,w
  2033  048A  0087               	movwf	7
  2034  048B  3001               	movlw	1
  2035  048C  00D0               	movwf	??_echo
  2036  048D  0A4E               	incf	echo@pin,w
  2037  048E  2C90               	goto	u1614
  2038  048F                     u1615:	
  2039  048F  35D0               	lslf	??_echo,f
  2040  0490                     u1614:	
  2041  0490  0B89               	decfsz	9,f
  2042  0491  2C8F               	goto	u1615
  2043  0492  0850               	movf	??_echo,w
  2044  0493  0501               	andwf	1,w
  2045  0494  1D03               	btfss	3,2
  2046  0495  2C87               	goto	l1558
  2047                           
  2048                           ;FinalProject3.c: 244: TMR1ON = 0;
  2049  0496  1018               	bcf	24,0	;volatile
  2050                           
  2051                           ;FinalProject3.c: 246: a = (TMR1L | (TMR1H<<8));
  2052  0497  0817               	movf	23,w	;volatile
  2053  0498  00D5               	movwf	echo@a+1
  2054  0499  0816               	movf	22,w	;volatile
  2055  049A  00D4               	movwf	echo@a
  2056                           
  2057                           ;FinalProject3.c: 247: a = (int)((float)a/58.82*2);
  2058  049B  0855               	movf	echo@a+1,w
  2059  049C  00F9               	movwf	___awtoft@c+1
  2060  049D  0854               	movf	echo@a,w
  2061  049E  00F8               	movwf	___awtoft@c
  2062  049F  3181  2182  3184   	fcall	___awtoft
  2063  04A2  0878               	movf	?___awtoft,w
  2064  04A3  0020               	movlb	0	; select bank0
  2065  04A4  00A3               	movwf	___ftdiv@f1
  2066  04A5  0879               	movf	?___awtoft+1,w
  2067  04A6  00A4               	movwf	___ftdiv@f1+1
  2068  04A7  087A               	movf	?___awtoft+2,w
  2069  04A8  00A5               	movwf	___ftdiv@f1+2
  2070  04A9  3048               	movlw	72
  2071  04AA  00A0               	movwf	___ftdiv@f2
  2072  04AB  306B               	movlw	107
  2073  04AC  00A1               	movwf	___ftdiv@f2+1
  2074  04AD  3042               	movlw	66
  2075  04AE  00A2               	movwf	___ftdiv@f2+2
  2076  04AF  3184  24DC  3184   	fcall	___ftdiv
  2077  04B2  0020               	movlb	0	; select bank0
  2078  04B3  0820               	movf	?___ftdiv,w
  2079  04B4  00B3               	movwf	___ftmul@f2
  2080  04B5  0821               	movf	?___ftdiv+1,w
  2081  04B6  00B4               	movwf	___ftmul@f2+1
  2082  04B7  0822               	movf	?___ftdiv+2,w
  2083  04B8  00B5               	movwf	___ftmul@f2+2
  2084  04B9  3000               	movlw	0
  2085  04BA  00B0               	movwf	___ftmul@f1
  2086  04BB  3000               	movlw	0
  2087  04BC  00B1               	movwf	___ftmul@f1+1
  2088  04BD  3040               	movlw	64
  2089  04BE  00B2               	movwf	___ftmul@f1+2
  2090  04BF  3185  2585  3184   	fcall	___ftmul
  2091  04C2  0020               	movlb	0	; select bank0
  2092  04C3  0830               	movf	?___ftmul,w
  2093  04C4  00C0               	movwf	___fttol@f1
  2094  04C5  0831               	movf	?___ftmul+1,w
  2095  04C6  00C1               	movwf	___fttol@f1+1
  2096  04C7  0832               	movf	?___ftmul+2,w
  2097  04C8  00C2               	movwf	___fttol@f1+2
  2098  04C9  3183  23CA         	fcall	___fttol
  2099  04CB  0020               	movlb	0	; select bank0
  2100  04CC  0841               	movf	?___fttol+1,w
  2101  04CD  00D5               	movwf	echo@a+1
  2102  04CE  0840               	movf	?___fttol,w
  2103  04CF  00D4               	movwf	echo@a
  2104                           
  2105                           ;FinalProject3.c: 248: a = a + 1;
  2106  04D0  0854               	movf	echo@a,w
  2107  04D1  3E01               	addlw	1
  2108  04D2  00D4               	movwf	echo@a
  2109  04D3  3000               	movlw	0
  2110  04D4  3D55               	addwfc	echo@a+1,w
  2111  04D5  00D5               	movwf	echo@a+1
  2112                           
  2113                           ;FinalProject3.c: 250: T1CON = 0x00;
  2114  04D6  0198               	clrf	24	;volatile
  2115                           
  2116                           ;FinalProject3.c: 251: return a;
  2117  04D7  0855               	movf	echo@a+1,w
  2118  04D8  00CF               	movwf	?_echo+1
  2119  04D9  0854               	movf	echo@a,w
  2120  04DA  00CE               	movwf	?_echo
  2121  04DB  0008               	return
  2122  04DC                     __end_of_echo:	
  2123                           
  2124                           	psect	text7
  2125  03CA                     __ptext7:	
  2126 ;; *************** function ___fttol *****************
  2127 ;; Defined at:
  2128 ;;		line 44 in file "/Applications/microchip/xc8/v1.45/sources/common/fttol.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;  f1              3   32[BANK0 ] float 
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;  lval            4   41[BANK0 ] unsigned long 
  2133 ;;  exp1            1   45[BANK0 ] unsigned char 
  2134 ;;  sign1           1   40[BANK0 ] unsigned char 
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  4   32[BANK0 ] long 
  2137 ;; Registers used:
  2138 ;;		wreg, status,2, status,0
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2144 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2145 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2146 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2147 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2148 ;;Total ram usage:       14 bytes
  2149 ;; Hardware stack levels used:    1
  2150 ;; This function calls:
  2151 ;;		Nothing
  2152 ;; This function is called by:
  2153 ;;		_echo
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           
  2158                           ;psect for function ___fttol
  2159  03CA                     ___fttol:	
  2160                           
  2161                           ;incstack = 0
  2162                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2163  03CA  0020               	movlb	0	; select bank0
  2164  03CB  0840               	movf	___fttol@f1,w
  2165  03CC  00C4               	movwf	??___fttol
  2166  03CD  0841               	movf	___fttol@f1+1,w
  2167  03CE  00C5               	movwf	??___fttol+1
  2168  03CF  0842               	movf	___fttol@f1+2,w
  2169  03D0  00C6               	movwf	??___fttol+2
  2170  03D1  1003               	clrc
  2171  03D2  0D45               	rlf	??___fttol+1,w
  2172  03D3  0D46               	rlf	??___fttol+2,w
  2173  03D4  00C7               	movwf	??___fttol+3
  2174  03D5  0847               	movf	??___fttol+3,w
  2175  03D6  00CD               	movwf	___fttol@exp1
  2176  03D7  084D               	movf	___fttol@exp1,w
  2177  03D8  1D03               	btfss	3,2
  2178  03D9  2BE3               	goto	l1420
  2179  03DA  3000               	movlw	0
  2180  03DB  00C3               	movwf	?___fttol+3
  2181  03DC  3000               	movlw	0
  2182  03DD  00C2               	movwf	?___fttol+2
  2183  03DE  3000               	movlw	0
  2184  03DF  00C1               	movwf	?___fttol+1
  2185  03E0  3000               	movlw	0
  2186  03E1  00C0               	movwf	?___fttol
  2187  03E2  0008               	return
  2188  03E3                     l1420:	
  2189  03E3  0840               	movf	___fttol@f1,w
  2190  03E4  00C4               	movwf	??___fttol
  2191  03E5  0841               	movf	___fttol@f1+1,w
  2192  03E6  00C5               	movwf	??___fttol+1
  2193  03E7  0842               	movf	___fttol@f1+2,w
  2194  03E8  00C6               	movwf	??___fttol+2
  2195  03E9  3017               	movlw	23
  2196  03EA                     u1425:	
  2197  03EA  36C6               	lsrf	??___fttol+2,f
  2198  03EB  0CC5               	rrf	??___fttol+1,f
  2199  03EC  0CC4               	rrf	??___fttol,f
  2200  03ED  0B89               	decfsz	9,f
  2201  03EE  2BEA               	goto	u1425
  2202  03EF  0844               	movf	??___fttol,w
  2203  03F0  00C7               	movwf	??___fttol+3
  2204  03F1  0847               	movf	??___fttol+3,w
  2205  03F2  00C8               	movwf	___fttol@sign1
  2206  03F3  17C1               	bsf	___fttol@f1+1,7
  2207  03F4  30FF               	movlw	255
  2208  03F5  05C0               	andwf	___fttol@f1,f
  2209  03F6  30FF               	movlw	255
  2210  03F7  05C1               	andwf	___fttol@f1+1,f
  2211  03F8  3000               	movlw	0
  2212  03F9  05C2               	andwf	___fttol@f1+2,f
  2213  03FA  0840               	movf	___fttol@f1,w
  2214  03FB  00C9               	movwf	___fttol@lval
  2215  03FC  0841               	movf	___fttol@f1+1,w
  2216  03FD  00CA               	movwf	___fttol@lval+1
  2217  03FE  0842               	movf	___fttol@f1+2,w
  2218  03FF  00CB               	movwf	___fttol@lval+2
  2219  0400  01CC               	clrf	___fttol@lval+3
  2220  0401  308E               	movlw	142
  2221  0402  02CD               	subwf	___fttol@exp1,f
  2222  0403  1FCD               	btfss	___fttol@exp1,7
  2223  0404  2C21               	goto	l1440
  2224  0405  084D               	movf	___fttol@exp1,w
  2225  0406  3A80               	xorlw	128
  2226  0407  3E8F               	addlw	143
  2227  0408  1803               	skipnc
  2228  0409  2C13               	goto	l1438
  2229  040A  3000               	movlw	0
  2230  040B  00C3               	movwf	?___fttol+3
  2231  040C  3000               	movlw	0
  2232  040D  00C2               	movwf	?___fttol+2
  2233  040E  3000               	movlw	0
  2234  040F  00C1               	movwf	?___fttol+1
  2235  0410  3000               	movlw	0
  2236  0411  00C0               	movwf	?___fttol
  2237  0412  0008               	return
  2238  0413                     l1438:	
  2239  0413  3001               	movlw	1
  2240  0414                     u1455:	
  2241  0414  36CC               	lsrf	___fttol@lval+3,f
  2242  0415  0CCB               	rrf	___fttol@lval+2,f
  2243  0416  0CCA               	rrf	___fttol@lval+1,f
  2244  0417  0CC9               	rrf	___fttol@lval,f
  2245  0418  0B89               	decfsz	9,f
  2246  0419  2C14               	goto	u1455
  2247  041A  3001               	movlw	1
  2248  041B  00C4               	movwf	??___fttol
  2249  041C  0844               	movf	??___fttol,w
  2250  041D  07CD               	addwf	___fttol@exp1,f
  2251  041E  1903               	btfsc	3,2
  2252  041F  2C3A               	goto	l1448
  2253  0420  2C13               	goto	l1438
  2254  0421                     l1440:	
  2255  0421  3018               	movlw	24
  2256  0422  024D               	subwf	___fttol@exp1,w
  2257  0423  1C03               	skipc
  2258  0424  2C37               	goto	l484
  2259  0425  3000               	movlw	0
  2260  0426  00C3               	movwf	?___fttol+3
  2261  0427  3000               	movlw	0
  2262  0428  00C2               	movwf	?___fttol+2
  2263  0429  3000               	movlw	0
  2264  042A  00C1               	movwf	?___fttol+1
  2265  042B  3000               	movlw	0
  2266  042C  00C0               	movwf	?___fttol
  2267  042D  0008               	return
  2268  042E                     l1446:	
  2269  042E  3001               	movlw	1
  2270  042F                     u1485:	
  2271  042F  35C9               	lslf	___fttol@lval,f
  2272  0430  0DCA               	rlf	___fttol@lval+1,f
  2273  0431  0DCB               	rlf	___fttol@lval+2,f
  2274  0432  0DCC               	rlf	___fttol@lval+3,f
  2275  0433  0B89               	decfsz	9,f
  2276  0434  2C2F               	goto	u1485
  2277  0435  3001               	movlw	1
  2278  0436  02CD               	subwf	___fttol@exp1,f
  2279  0437                     l484:	
  2280  0437  084D               	movf	___fttol@exp1,w
  2281  0438  1D03               	btfss	3,2
  2282  0439  2C2E               	goto	l1446
  2283  043A                     l1448:	
  2284  043A  0848               	movf	___fttol@sign1,w
  2285  043B  1903               	btfsc	3,2
  2286  043C  2C48               	goto	l1452
  2287  043D  09C9               	comf	___fttol@lval,f
  2288  043E  09CA               	comf	___fttol@lval+1,f
  2289  043F  09CB               	comf	___fttol@lval+2,f
  2290  0440  09CC               	comf	___fttol@lval+3,f
  2291  0441  0AC9               	incf	___fttol@lval,f
  2292  0442  1903               	skipnz
  2293  0443  0ACA               	incf	___fttol@lval+1,f
  2294  0444  1903               	skipnz
  2295  0445  0ACB               	incf	___fttol@lval+2,f
  2296  0446  1903               	skipnz
  2297  0447  0ACC               	incf	___fttol@lval+3,f
  2298  0448                     l1452:	
  2299  0448  084C               	movf	___fttol@lval+3,w
  2300  0449  00C3               	movwf	?___fttol+3
  2301  044A  084B               	movf	___fttol@lval+2,w
  2302  044B  00C2               	movwf	?___fttol+2
  2303  044C  084A               	movf	___fttol@lval+1,w
  2304  044D  00C1               	movwf	?___fttol+1
  2305  044E  0849               	movf	___fttol@lval,w
  2306  044F  00C0               	movwf	?___fttol
  2307  0450  0008               	return
  2308  0451                     __end_of___fttol:	
  2309                           
  2310                           	psect	text8
  2311  0585                     __ptext8:	
  2312 ;; *************** function ___ftmul *****************
  2313 ;; Defined at:
  2314 ;;		line 62 in file "/Applications/microchip/xc8/v1.45/sources/common/ftmul.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;  f1              3   16[BANK0 ] float 
  2317 ;;  f2              3   19[BANK0 ] float 
  2318 ;; Auto vars:     Size  Location     Type
  2319 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  2320 ;;  sign            1   31[BANK0 ] unsigned char 
  2321 ;;  cntr            1   30[BANK0 ] unsigned char 
  2322 ;;  exp             1   26[BANK0 ] unsigned char 
  2323 ;; Return value:  Size  Location     Type
  2324 ;;                  3   16[BANK0 ] float 
  2325 ;; Registers used:
  2326 ;;		wreg, status,2, status,0, pclath, cstack
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2332 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2333 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2334 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2335 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2336 ;;Total ram usage:       16 bytes
  2337 ;; Hardware stack levels used:    1
  2338 ;; Hardware stack levels required when called:    1
  2339 ;; This function calls:
  2340 ;;		___ftpack
  2341 ;; This function is called by:
  2342 ;;		_echo
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           
  2347                           ;psect for function ___ftmul
  2348  0585                     ___ftmul:	
  2349                           
  2350                           ;incstack = 0
  2351                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2352  0585  0020               	movlb	0	; select bank0
  2353  0586  0830               	movf	___ftmul@f1,w
  2354  0587  00B6               	movwf	??___ftmul
  2355  0588  0831               	movf	___ftmul@f1+1,w
  2356  0589  00B7               	movwf	??___ftmul+1
  2357  058A  0832               	movf	___ftmul@f1+2,w
  2358  058B  00B8               	movwf	??___ftmul+2
  2359  058C  1003               	clrc
  2360  058D  0D37               	rlf	??___ftmul+1,w
  2361  058E  0D38               	rlf	??___ftmul+2,w
  2362  058F  00B9               	movwf	??___ftmul+3
  2363  0590  0839               	movf	??___ftmul+3,w
  2364  0591  00BA               	movwf	___ftmul@exp
  2365  0592  083A               	movf	___ftmul@exp,w
  2366  0593  1D03               	btfss	3,2
  2367  0594  2D9C               	goto	l1370
  2368  0595  3000               	movlw	0
  2369  0596  00B0               	movwf	?___ftmul
  2370  0597  3000               	movlw	0
  2371  0598  00B1               	movwf	?___ftmul+1
  2372  0599  3000               	movlw	0
  2373  059A  00B2               	movwf	?___ftmul+2
  2374  059B  0008               	return
  2375  059C                     l1370:	
  2376  059C  0833               	movf	___ftmul@f2,w
  2377  059D  00B6               	movwf	??___ftmul
  2378  059E  0834               	movf	___ftmul@f2+1,w
  2379  059F  00B7               	movwf	??___ftmul+1
  2380  05A0  0835               	movf	___ftmul@f2+2,w
  2381  05A1  00B8               	movwf	??___ftmul+2
  2382  05A2  1003               	clrc
  2383  05A3  0D37               	rlf	??___ftmul+1,w
  2384  05A4  0D38               	rlf	??___ftmul+2,w
  2385  05A5  00B9               	movwf	??___ftmul+3
  2386  05A6  0839               	movf	??___ftmul+3,w
  2387  05A7  00BF               	movwf	___ftmul@sign
  2388  05A8  083F               	movf	___ftmul@sign,w
  2389  05A9  1D03               	btfss	3,2
  2390  05AA  2DB2               	goto	l1376
  2391  05AB  3000               	movlw	0
  2392  05AC  00B0               	movwf	?___ftmul
  2393  05AD  3000               	movlw	0
  2394  05AE  00B1               	movwf	?___ftmul+1
  2395  05AF  3000               	movlw	0
  2396  05B0  00B2               	movwf	?___ftmul+2
  2397  05B1  0008               	return
  2398  05B2                     l1376:	
  2399  05B2  083F               	movf	___ftmul@sign,w
  2400  05B3  3E7B               	addlw	123
  2401  05B4  00B6               	movwf	??___ftmul
  2402  05B5  0836               	movf	??___ftmul,w
  2403  05B6  07BA               	addwf	___ftmul@exp,f
  2404  05B7  0830               	movf	___ftmul@f1,w
  2405  05B8  00B6               	movwf	??___ftmul
  2406  05B9  0831               	movf	___ftmul@f1+1,w
  2407  05BA  00B7               	movwf	??___ftmul+1
  2408  05BB  0832               	movf	___ftmul@f1+2,w
  2409  05BC  00B8               	movwf	??___ftmul+2
  2410  05BD  3010               	movlw	16
  2411  05BE                     u1315:	
  2412  05BE  36B8               	lsrf	??___ftmul+2,f
  2413  05BF  0CB7               	rrf	??___ftmul+1,f
  2414  05C0  0CB6               	rrf	??___ftmul,f
  2415  05C1  0B89               	decfsz	9,f
  2416  05C2  2DBE               	goto	u1315
  2417  05C3  0836               	movf	??___ftmul,w
  2418  05C4  00B9               	movwf	??___ftmul+3
  2419  05C5  0839               	movf	??___ftmul+3,w
  2420  05C6  00BF               	movwf	___ftmul@sign
  2421  05C7  0833               	movf	___ftmul@f2,w
  2422  05C8  00B6               	movwf	??___ftmul
  2423  05C9  0834               	movf	___ftmul@f2+1,w
  2424  05CA  00B7               	movwf	??___ftmul+1
  2425  05CB  0835               	movf	___ftmul@f2+2,w
  2426  05CC  00B8               	movwf	??___ftmul+2
  2427  05CD  3010               	movlw	16
  2428  05CE                     u1325:	
  2429  05CE  36B8               	lsrf	??___ftmul+2,f
  2430  05CF  0CB7               	rrf	??___ftmul+1,f
  2431  05D0  0CB6               	rrf	??___ftmul,f
  2432  05D1  0B89               	decfsz	9,f
  2433  05D2  2DCE               	goto	u1325
  2434  05D3  0836               	movf	??___ftmul,w
  2435  05D4  00B9               	movwf	??___ftmul+3
  2436  05D5  0839               	movf	??___ftmul+3,w
  2437  05D6  06BF               	xorwf	___ftmul@sign,f
  2438  05D7  3080               	movlw	128
  2439  05D8  00B6               	movwf	??___ftmul
  2440  05D9  0836               	movf	??___ftmul,w
  2441  05DA  05BF               	andwf	___ftmul@sign,f
  2442  05DB  17B1               	bsf	___ftmul@f1+1,7
  2443  05DC  17B4               	bsf	___ftmul@f2+1,7
  2444  05DD  30FF               	movlw	255
  2445  05DE  05B3               	andwf	___ftmul@f2,f
  2446  05DF  30FF               	movlw	255
  2447  05E0  05B4               	andwf	___ftmul@f2+1,f
  2448  05E1  3000               	movlw	0
  2449  05E2  05B5               	andwf	___ftmul@f2+2,f
  2450  05E3  3000               	movlw	0
  2451  05E4  00BB               	movwf	___ftmul@f3_as_product
  2452  05E5  3000               	movlw	0
  2453  05E6  00BC               	movwf	___ftmul@f3_as_product+1
  2454  05E7  3000               	movlw	0
  2455  05E8  00BD               	movwf	___ftmul@f3_as_product+2
  2456  05E9  3007               	movlw	7
  2457  05EA  00B6               	movwf	??___ftmul
  2458  05EB  0836               	movf	??___ftmul,w
  2459  05EC  00BE               	movwf	___ftmul@cntr
  2460  05ED                     l1388:	
  2461  05ED  1C30               	btfss	___ftmul@f1,0
  2462  05EE  2DF5               	goto	l1392
  2463  05EF  0833               	movf	___ftmul@f2,w
  2464  05F0  07BB               	addwf	___ftmul@f3_as_product,f
  2465  05F1  0834               	movf	___ftmul@f2+1,w
  2466  05F2  3DBC               	addwfc	___ftmul@f3_as_product+1,f
  2467  05F3  0835               	movf	___ftmul@f2+2,w
  2468  05F4  3DBD               	addwfc	___ftmul@f3_as_product+2,f
  2469  05F5                     l1392:	
  2470  05F5  3001               	movlw	1
  2471  05F6                     u1345:	
  2472  05F6  36B2               	lsrf	___ftmul@f1+2,f
  2473  05F7  0CB1               	rrf	___ftmul@f1+1,f
  2474  05F8  0CB0               	rrf	___ftmul@f1,f
  2475  05F9  0B89               	decfsz	9,f
  2476  05FA  2DF6               	goto	u1345
  2477  05FB  3001               	movlw	1
  2478  05FC                     u1355:	
  2479  05FC  35B3               	lslf	___ftmul@f2,f
  2480  05FD  0DB4               	rlf	___ftmul@f2+1,f
  2481  05FE  0DB5               	rlf	___ftmul@f2+2,f
  2482  05FF  0B89               	decfsz	9,f
  2483  0600  2DFC               	goto	u1355
  2484  0601  3001               	movlw	1
  2485  0602  02BE               	subwf	___ftmul@cntr,f
  2486  0603  1D03               	btfss	3,2
  2487  0604  2DED               	goto	l1388
  2488  0605  3009               	movlw	9
  2489  0606  00B6               	movwf	??___ftmul
  2490  0607  0836               	movf	??___ftmul,w
  2491  0608  00BE               	movwf	___ftmul@cntr
  2492  0609                     l1400:	
  2493  0609  1C30               	btfss	___ftmul@f1,0
  2494  060A  2E11               	goto	l1404
  2495  060B  0833               	movf	___ftmul@f2,w
  2496  060C  07BB               	addwf	___ftmul@f3_as_product,f
  2497  060D  0834               	movf	___ftmul@f2+1,w
  2498  060E  3DBC               	addwfc	___ftmul@f3_as_product+1,f
  2499  060F  0835               	movf	___ftmul@f2+2,w
  2500  0610  3DBD               	addwfc	___ftmul@f3_as_product+2,f
  2501  0611                     l1404:	
  2502  0611  3001               	movlw	1
  2503  0612                     u1385:	
  2504  0612  36B2               	lsrf	___ftmul@f1+2,f
  2505  0613  0CB1               	rrf	___ftmul@f1+1,f
  2506  0614  0CB0               	rrf	___ftmul@f1,f
  2507  0615  0B89               	decfsz	9,f
  2508  0616  2E12               	goto	u1385
  2509  0617  3001               	movlw	1
  2510  0618                     u1395:	
  2511  0618  36BD               	lsrf	___ftmul@f3_as_product+2,f
  2512  0619  0CBC               	rrf	___ftmul@f3_as_product+1,f
  2513  061A  0CBB               	rrf	___ftmul@f3_as_product,f
  2514  061B  0B89               	decfsz	9,f
  2515  061C  2E18               	goto	u1395
  2516  061D  3001               	movlw	1
  2517  061E  02BE               	subwf	___ftmul@cntr,f
  2518  061F  1D03               	btfss	3,2
  2519  0620  2E09               	goto	l1400
  2520  0621  083B               	movf	___ftmul@f3_as_product,w
  2521  0622  00F0               	movwf	___ftpack@arg
  2522  0623  083C               	movf	___ftmul@f3_as_product+1,w
  2523  0624  00F1               	movwf	___ftpack@arg+1
  2524  0625  083D               	movf	___ftmul@f3_as_product+2,w
  2525  0626  00F2               	movwf	___ftpack@arg+2
  2526  0627  083A               	movf	___ftmul@exp,w
  2527  0628  00B6               	movwf	??___ftmul
  2528  0629  0836               	movf	??___ftmul,w
  2529  062A  00F3               	movwf	___ftpack@exp
  2530  062B  083F               	movf	___ftmul@sign,w
  2531  062C  00B7               	movwf	??___ftmul+1
  2532  062D  0837               	movf	??___ftmul+1,w
  2533  062E  00F4               	movwf	___ftpack@sign
  2534  062F  3183  2366         	fcall	___ftpack
  2535  0631  0870               	movf	?___ftpack,w
  2536  0632  0020               	movlb	0	; select bank0
  2537  0633  00B0               	movwf	?___ftmul
  2538  0634  0871               	movf	?___ftpack+1,w
  2539  0635  00B1               	movwf	?___ftmul+1
  2540  0636  0872               	movf	?___ftpack+2,w
  2541  0637  00B2               	movwf	?___ftmul+2
  2542  0638  0008               	return
  2543  0639                     __end_of___ftmul:	
  2544                           
  2545                           	psect	text9
  2546  04DC                     __ptext9:	
  2547 ;; *************** function ___ftdiv *****************
  2548 ;; Defined at:
  2549 ;;		line 56 in file "/Applications/microchip/xc8/v1.45/sources/common/ftdiv.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;  f2              3    0[BANK0 ] float 
  2552 ;;  f1              3    3[BANK0 ] float 
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;  f3              3   11[BANK0 ] float 
  2555 ;;  sign            1   15[BANK0 ] unsigned char 
  2556 ;;  exp             1   14[BANK0 ] unsigned char 
  2557 ;;  cntr            1   10[BANK0 ] unsigned char 
  2558 ;; Return value:  Size  Location     Type
  2559 ;;                  3    0[BANK0 ] float 
  2560 ;; Registers used:
  2561 ;;		wreg, status,2, status,0, pclath, cstack
  2562 ;; Tracked objects:
  2563 ;;		On entry : 0/0
  2564 ;;		On exit  : 0/0
  2565 ;;		Unchanged: 0/0
  2566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2567 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2568 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2569 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2570 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2571 ;;Total ram usage:       16 bytes
  2572 ;; Hardware stack levels used:    1
  2573 ;; Hardware stack levels required when called:    1
  2574 ;; This function calls:
  2575 ;;		___ftpack
  2576 ;; This function is called by:
  2577 ;;		_echo
  2578 ;; This function uses a non-reentrant model
  2579 ;;
  2580                           
  2581                           
  2582                           ;psect for function ___ftdiv
  2583  04DC                     ___ftdiv:	
  2584                           
  2585                           ;incstack = 0
  2586                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2587  04DC  0020               	movlb	0	; select bank0
  2588  04DD  0823               	movf	___ftdiv@f1,w
  2589  04DE  00A6               	movwf	??___ftdiv
  2590  04DF  0824               	movf	___ftdiv@f1+1,w
  2591  04E0  00A7               	movwf	??___ftdiv+1
  2592  04E1  0825               	movf	___ftdiv@f1+2,w
  2593  04E2  00A8               	movwf	??___ftdiv+2
  2594  04E3  1003               	clrc
  2595  04E4  0D27               	rlf	??___ftdiv+1,w
  2596  04E5  0D28               	rlf	??___ftdiv+2,w
  2597  04E6  00A9               	movwf	??___ftdiv+3
  2598  04E7  0829               	movf	??___ftdiv+3,w
  2599  04E8  00AE               	movwf	___ftdiv@exp
  2600  04E9  082E               	movf	___ftdiv@exp,w
  2601  04EA  1D03               	btfss	3,2
  2602  04EB  2CF3               	goto	l1328
  2603  04EC  3000               	movlw	0
  2604  04ED  00A0               	movwf	?___ftdiv
  2605  04EE  3000               	movlw	0
  2606  04EF  00A1               	movwf	?___ftdiv+1
  2607  04F0  3000               	movlw	0
  2608  04F1  00A2               	movwf	?___ftdiv+2
  2609  04F2  0008               	return
  2610  04F3                     l1328:	
  2611  04F3  0820               	movf	___ftdiv@f2,w
  2612  04F4  00A6               	movwf	??___ftdiv
  2613  04F5  0821               	movf	___ftdiv@f2+1,w
  2614  04F6  00A7               	movwf	??___ftdiv+1
  2615  04F7  0822               	movf	___ftdiv@f2+2,w
  2616  04F8  00A8               	movwf	??___ftdiv+2
  2617  04F9  1003               	clrc
  2618  04FA  0D27               	rlf	??___ftdiv+1,w
  2619  04FB  0D28               	rlf	??___ftdiv+2,w
  2620  04FC  00A9               	movwf	??___ftdiv+3
  2621  04FD  0829               	movf	??___ftdiv+3,w
  2622  04FE  00AF               	movwf	___ftdiv@sign
  2623  04FF  082F               	movf	___ftdiv@sign,w
  2624  0500  1D03               	btfss	3,2
  2625  0501  2D09               	goto	l1334
  2626  0502  3000               	movlw	0
  2627  0503  00A0               	movwf	?___ftdiv
  2628  0504  3000               	movlw	0
  2629  0505  00A1               	movwf	?___ftdiv+1
  2630  0506  3000               	movlw	0
  2631  0507  00A2               	movwf	?___ftdiv+2
  2632  0508  0008               	return
  2633  0509                     l1334:	
  2634  0509  3000               	movlw	0
  2635  050A  00AB               	movwf	___ftdiv@f3
  2636  050B  3000               	movlw	0
  2637  050C  00AC               	movwf	___ftdiv@f3+1
  2638  050D  3000               	movlw	0
  2639  050E  00AD               	movwf	___ftdiv@f3+2
  2640  050F  3089               	movlw	137
  2641  0510  072F               	addwf	___ftdiv@sign,w
  2642  0511  00A6               	movwf	??___ftdiv
  2643  0512  0826               	movf	??___ftdiv,w
  2644  0513  02AE               	subwf	___ftdiv@exp,f
  2645  0514  0823               	movf	___ftdiv@f1,w
  2646  0515  00A6               	movwf	??___ftdiv
  2647  0516  0824               	movf	___ftdiv@f1+1,w
  2648  0517  00A7               	movwf	??___ftdiv+1
  2649  0518  0825               	movf	___ftdiv@f1+2,w
  2650  0519  00A8               	movwf	??___ftdiv+2
  2651  051A  3010               	movlw	16
  2652  051B                     u1235:	
  2653  051B  36A8               	lsrf	??___ftdiv+2,f
  2654  051C  0CA7               	rrf	??___ftdiv+1,f
  2655  051D  0CA6               	rrf	??___ftdiv,f
  2656  051E  0B89               	decfsz	9,f
  2657  051F  2D1B               	goto	u1235
  2658  0520  0826               	movf	??___ftdiv,w
  2659  0521  00A9               	movwf	??___ftdiv+3
  2660  0522  0829               	movf	??___ftdiv+3,w
  2661  0523  00AF               	movwf	___ftdiv@sign
  2662  0524  0820               	movf	___ftdiv@f2,w
  2663  0525  00A6               	movwf	??___ftdiv
  2664  0526  0821               	movf	___ftdiv@f2+1,w
  2665  0527  00A7               	movwf	??___ftdiv+1
  2666  0528  0822               	movf	___ftdiv@f2+2,w
  2667  0529  00A8               	movwf	??___ftdiv+2
  2668  052A  3010               	movlw	16
  2669  052B                     u1245:	
  2670  052B  36A8               	lsrf	??___ftdiv+2,f
  2671  052C  0CA7               	rrf	??___ftdiv+1,f
  2672  052D  0CA6               	rrf	??___ftdiv,f
  2673  052E  0B89               	decfsz	9,f
  2674  052F  2D2B               	goto	u1245
  2675  0530  0826               	movf	??___ftdiv,w
  2676  0531  00A9               	movwf	??___ftdiv+3
  2677  0532  0829               	movf	??___ftdiv+3,w
  2678  0533  06AF               	xorwf	___ftdiv@sign,f
  2679  0534  3080               	movlw	128
  2680  0535  00A6               	movwf	??___ftdiv
  2681  0536  0826               	movf	??___ftdiv,w
  2682  0537  05AF               	andwf	___ftdiv@sign,f
  2683  0538  17A4               	bsf	___ftdiv@f1+1,7
  2684  0539  30FF               	movlw	255
  2685  053A  05A3               	andwf	___ftdiv@f1,f
  2686  053B  30FF               	movlw	255
  2687  053C  05A4               	andwf	___ftdiv@f1+1,f
  2688  053D  3000               	movlw	0
  2689  053E  05A5               	andwf	___ftdiv@f1+2,f
  2690  053F  17A1               	bsf	___ftdiv@f2+1,7
  2691  0540  30FF               	movlw	255
  2692  0541  05A0               	andwf	___ftdiv@f2,f
  2693  0542  30FF               	movlw	255
  2694  0543  05A1               	andwf	___ftdiv@f2+1,f
  2695  0544  3000               	movlw	0
  2696  0545  05A2               	andwf	___ftdiv@f2+2,f
  2697  0546  3018               	movlw	24
  2698  0547  00A6               	movwf	??___ftdiv
  2699  0548  0826               	movf	??___ftdiv,w
  2700  0549  00AA               	movwf	___ftdiv@cntr
  2701  054A                     l1348:	
  2702  054A  3001               	movlw	1
  2703  054B                     u1255:	
  2704  054B  35AB               	lslf	___ftdiv@f3,f
  2705  054C  0DAC               	rlf	___ftdiv@f3+1,f
  2706  054D  0DAD               	rlf	___ftdiv@f3+2,f
  2707  054E  0B89               	decfsz	9,f
  2708  054F  2D4B               	goto	u1255
  2709  0550  0822               	movf	___ftdiv@f2+2,w
  2710  0551  0225               	subwf	___ftdiv@f1+2,w
  2711  0552  1D03               	skipz
  2712  0553  2D5A               	goto	u1265
  2713  0554  0821               	movf	___ftdiv@f2+1,w
  2714  0555  0224               	subwf	___ftdiv@f1+1,w
  2715  0556  1D03               	skipz
  2716  0557  2D5A               	goto	u1265
  2717  0558  0820               	movf	___ftdiv@f2,w
  2718  0559  0223               	subwf	___ftdiv@f1,w
  2719  055A                     u1265:	
  2720  055A  1C03               	skipc
  2721  055B  2D63               	goto	l1356
  2722  055C  0820               	movf	___ftdiv@f2,w
  2723  055D  02A3               	subwf	___ftdiv@f1,f
  2724  055E  0821               	movf	___ftdiv@f2+1,w
  2725  055F  3BA4               	subwfb	___ftdiv@f1+1,f
  2726  0560  0822               	movf	___ftdiv@f2+2,w
  2727  0561  3BA5               	subwfb	___ftdiv@f1+2,f
  2728  0562  142B               	bsf	___ftdiv@f3,0
  2729  0563                     l1356:	
  2730  0563  3001               	movlw	1
  2731  0564                     u1275:	
  2732  0564  35A3               	lslf	___ftdiv@f1,f
  2733  0565  0DA4               	rlf	___ftdiv@f1+1,f
  2734  0566  0DA5               	rlf	___ftdiv@f1+2,f
  2735  0567  0B89               	decfsz	9,f
  2736  0568  2D64               	goto	u1275
  2737  0569  3001               	movlw	1
  2738  056A  02AA               	subwf	___ftdiv@cntr,f
  2739  056B  1D03               	btfss	3,2
  2740  056C  2D4A               	goto	l1348
  2741  056D  082B               	movf	___ftdiv@f3,w
  2742  056E  00F0               	movwf	___ftpack@arg
  2743  056F  082C               	movf	___ftdiv@f3+1,w
  2744  0570  00F1               	movwf	___ftpack@arg+1
  2745  0571  082D               	movf	___ftdiv@f3+2,w
  2746  0572  00F2               	movwf	___ftpack@arg+2
  2747  0573  082E               	movf	___ftdiv@exp,w
  2748  0574  00A6               	movwf	??___ftdiv
  2749  0575  0826               	movf	??___ftdiv,w
  2750  0576  00F3               	movwf	___ftpack@exp
  2751  0577  082F               	movf	___ftdiv@sign,w
  2752  0578  00A7               	movwf	??___ftdiv+1
  2753  0579  0827               	movf	??___ftdiv+1,w
  2754  057A  00F4               	movwf	___ftpack@sign
  2755  057B  3183  2366         	fcall	___ftpack
  2756  057D  0870               	movf	?___ftpack,w
  2757  057E  0020               	movlb	0	; select bank0
  2758  057F  00A0               	movwf	?___ftdiv
  2759  0580  0871               	movf	?___ftpack+1,w
  2760  0581  00A1               	movwf	?___ftdiv+1
  2761  0582  0872               	movf	?___ftpack+2,w
  2762  0583  00A2               	movwf	?___ftdiv+2
  2763  0584  0008               	return
  2764  0585                     __end_of___ftdiv:	
  2765                           
  2766                           	psect	text10
  2767  0182                     __ptext10:	
  2768 ;; *************** function ___awtoft *****************
  2769 ;; Defined at:
  2770 ;;		line 32 in file "/Applications/microchip/xc8/v1.45/sources/common/awtoft.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  c               2    8[COMMON] int 
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;  sign            1   13[COMMON] unsigned char 
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  3    8[COMMON] float 
  2777 ;; Registers used:
  2778 ;;		wreg, status,2, status,0, pclath, cstack
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2784 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2785 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2786 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2787 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2788 ;;Total ram usage:        6 bytes
  2789 ;; Hardware stack levels used:    1
  2790 ;; Hardware stack levels required when called:    1
  2791 ;; This function calls:
  2792 ;;		___ftpack
  2793 ;; This function is called by:
  2794 ;;		_echo
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           
  2799                           ;psect for function ___awtoft
  2800  0182                     ___awtoft:	
  2801                           
  2802                           ;incstack = 0
  2803                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  2804  0182  01FD               	clrf	___awtoft@sign
  2805  0183  1FF9               	btfss	___awtoft@c+1,7
  2806  0184  298C               	goto	l1318
  2807  0185  09F8               	comf	___awtoft@c,f
  2808  0186  09F9               	comf	___awtoft@c+1,f
  2809  0187  0AF8               	incf	___awtoft@c,f
  2810  0188  1903               	skipnz
  2811  0189  0AF9               	incf	___awtoft@c+1,f
  2812  018A  01FD               	clrf	___awtoft@sign
  2813  018B  0AFD               	incf	___awtoft@sign,f
  2814  018C                     l1318:	
  2815  018C  0878               	movf	___awtoft@c,w
  2816  018D  00F0               	movwf	___ftpack@arg
  2817  018E  0879               	movf	___awtoft@c+1,w
  2818  018F  00F1               	movwf	___ftpack@arg+1
  2819  0190  01F2               	clrf	___ftpack@arg+2
  2820  0191  308E               	movlw	142
  2821  0192  00FB               	movwf	??___awtoft
  2822  0193  087B               	movf	??___awtoft,w
  2823  0194  00F3               	movwf	___ftpack@exp
  2824  0195  087D               	movf	___awtoft@sign,w
  2825  0196  00FC               	movwf	??___awtoft+1
  2826  0197  087C               	movf	??___awtoft+1,w
  2827  0198  00F4               	movwf	___ftpack@sign
  2828  0199  3183  2366         	fcall	___ftpack
  2829  019B  0870               	movf	?___ftpack,w
  2830  019C  00F8               	movwf	?___awtoft
  2831  019D  0871               	movf	?___ftpack+1,w
  2832  019E  00F9               	movwf	?___awtoft+1
  2833  019F  0872               	movf	?___ftpack+2,w
  2834  01A0  00FA               	movwf	?___awtoft+2
  2835  01A1  0008               	return
  2836  01A2                     __end_of___awtoft:	
  2837                           
  2838                           	psect	text11
  2839  0366                     __ptext11:	
  2840 ;; *************** function ___ftpack *****************
  2841 ;; Defined at:
  2842 ;;		line 62 in file "/Applications/microchip/xc8/v1.45/sources/common/float.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;  arg             3    0[COMMON] unsigned um
  2845 ;;  exp             1    3[COMMON] unsigned char 
  2846 ;;  sign            1    4[COMMON] unsigned char 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;		None
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  3    0[COMMON] float 
  2851 ;; Registers used:
  2852 ;;		wreg, status,2, status,0
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2858 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2860 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2861 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2862 ;;Total ram usage:        8 bytes
  2863 ;; Hardware stack levels used:    1
  2864 ;; This function calls:
  2865 ;;		Nothing
  2866 ;; This function is called by:
  2867 ;;		___awtoft
  2868 ;;		___ftdiv
  2869 ;;		___ftmul
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           
  2874                           ;psect for function ___ftpack
  2875  0366                     ___ftpack:	
  2876                           
  2877                           ;incstack = 0
  2878                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2879  0366  0873               	movf	___ftpack@exp,w
  2880  0367  1903               	btfsc	3,2
  2881  0368  2B6E               	goto	l1198
  2882  0369  0872               	movf	___ftpack@arg+2,w
  2883  036A  0471               	iorwf	___ftpack@arg+1,w
  2884  036B  0470               	iorwf	___ftpack@arg,w
  2885  036C  1D03               	skipz
  2886  036D  2B7F               	goto	l1204
  2887  036E                     l1198:	
  2888  036E  3000               	movlw	0
  2889  036F  00F0               	movwf	?___ftpack
  2890  0370  3000               	movlw	0
  2891  0371  00F1               	movwf	?___ftpack+1
  2892  0372  3000               	movlw	0
  2893  0373  00F2               	movwf	?___ftpack+2
  2894  0374  0008               	return
  2895  0375                     l1202:	
  2896  0375  3001               	movlw	1
  2897  0376  00F5               	movwf	??___ftpack
  2898  0377  0875               	movf	??___ftpack,w
  2899  0378  07F3               	addwf	___ftpack@exp,f
  2900  0379  3001               	movlw	1
  2901  037A                     u965:	
  2902  037A  36F2               	lsrf	___ftpack@arg+2,f
  2903  037B  0CF1               	rrf	___ftpack@arg+1,f
  2904  037C  0CF0               	rrf	___ftpack@arg,f
  2905  037D  0B89               	decfsz	9,f
  2906  037E  2B7A               	goto	u965
  2907  037F                     l1204:	
  2908  037F  30FE               	movlw	254
  2909  0380  0572               	andwf	___ftpack@arg+2,w
  2910  0381  1903               	btfsc	3,2
  2911  0382  2B98               	goto	l393
  2912  0383  2B75               	goto	l1202
  2913  0384                     l1206:	
  2914  0384  3001               	movlw	1
  2915  0385  00F5               	movwf	??___ftpack
  2916  0386  0875               	movf	??___ftpack,w
  2917  0387  07F3               	addwf	___ftpack@exp,f
  2918  0388  3001               	movlw	1
  2919  0389  07F0               	addwf	___ftpack@arg,f
  2920  038A  3000               	movlw	0
  2921  038B  1803               	skipnc
  2922  038C  3001               	movlw	1
  2923  038D  07F1               	addwf	___ftpack@arg+1,f
  2924  038E  3000               	movlw	0
  2925  038F  1803               	skipnc
  2926  0390  3001               	movlw	1
  2927  0391  07F2               	addwf	___ftpack@arg+2,f
  2928  0392  3001               	movlw	1
  2929  0393                     u985:	
  2930  0393  36F2               	lsrf	___ftpack@arg+2,f
  2931  0394  0CF1               	rrf	___ftpack@arg+1,f
  2932  0395  0CF0               	rrf	___ftpack@arg,f
  2933  0396  0B89               	decfsz	9,f
  2934  0397  2B93               	goto	u985
  2935  0398                     l393:	
  2936  0398  30FF               	movlw	255
  2937  0399  0572               	andwf	___ftpack@arg+2,w
  2938  039A  1903               	btfsc	3,2
  2939  039B  2BA5               	goto	l1214
  2940  039C  2B84               	goto	l1206
  2941  039D                     l1212:	
  2942  039D  3001               	movlw	1
  2943  039E  02F3               	subwf	___ftpack@exp,f
  2944  039F  3001               	movlw	1
  2945  03A0                     u1005:	
  2946  03A0  35F0               	lslf	___ftpack@arg,f
  2947  03A1  0DF1               	rlf	___ftpack@arg+1,f
  2948  03A2  0DF2               	rlf	___ftpack@arg+2,f
  2949  03A3  0B89               	decfsz	9,f
  2950  03A4  2BA0               	goto	u1005
  2951  03A5                     l1214:	
  2952  03A5  1BF1               	btfsc	___ftpack@arg+1,7
  2953  03A6  2BAB               	goto	l400
  2954  03A7  3002               	movlw	2
  2955  03A8  0273               	subwf	___ftpack@exp,w
  2956  03A9  1803               	skipnc
  2957  03AA  2B9D               	goto	l1212
  2958  03AB                     l400:	
  2959  03AB  1873               	btfsc	___ftpack@exp,0
  2960  03AC  2BB3               	goto	l401
  2961  03AD  30FF               	movlw	255
  2962  03AE  05F0               	andwf	___ftpack@arg,f
  2963  03AF  307F               	movlw	127
  2964  03B0  05F1               	andwf	___ftpack@arg+1,f
  2965  03B1  30FF               	movlw	255
  2966  03B2  05F2               	andwf	___ftpack@arg+2,f
  2967  03B3                     l401:	
  2968  03B3  1003               	clrc
  2969  03B4  0CF3               	rrf	___ftpack@exp,f
  2970  03B5  0873               	movf	___ftpack@exp,w
  2971  03B6  00F5               	movwf	??___ftpack
  2972  03B7  01F6               	clrf	??___ftpack+1
  2973  03B8  01F7               	clrf	??___ftpack+2
  2974  03B9  3010               	movlw	16
  2975  03BA                     u1045:	
  2976  03BA  35F5               	lslf	??___ftpack,f
  2977  03BB  0DF6               	rlf	??___ftpack+1,f
  2978  03BC  0DF7               	rlf	??___ftpack+2,f
  2979  03BD  0B89               	decfsz	9,f
  2980  03BE  2BBA               	goto	u1045
  2981  03BF  0875               	movf	??___ftpack,w
  2982  03C0  04F0               	iorwf	___ftpack@arg,f
  2983  03C1  0876               	movf	??___ftpack+1,w
  2984  03C2  04F1               	iorwf	___ftpack@arg+1,f
  2985  03C3  0877               	movf	??___ftpack+2,w
  2986  03C4  04F2               	iorwf	___ftpack@arg+2,f
  2987  03C5  0874               	movf	___ftpack@sign,w
  2988  03C6  1903               	btfsc	3,2
  2989  03C7  0008               	return
  2990  03C8  17F2               	bsf	___ftpack@arg+2,7
  2991  03C9  0008               	return
  2992  03CA                     __end_of___ftpack:	
  2993                           
  2994                           	psect	text12
  2995  0168                     __ptext12:	
  2996 ;; *************** function _Lcd_Write_String *****************
  2997 ;; Defined at:
  2998 ;;		line 117 in file "lcd.h"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;  a               2    5[COMMON] PTR unsigned char 
  3001 ;;		 -> STR_10(4), STR_9(6), STR_8(11), STR_7(4), 
  3002 ;;		 -> STR_6(6), STR_5(15), STR_4(4), STR_3(6), 
  3003 ;;		 -> STR_2(11), main@bufB(8), main@bufA(8), STR_1(16), 
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;  i               2    8[COMMON] int 
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  1    wreg      void 
  3008 ;; Registers used:
  3009 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3015 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3016 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3017 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3018 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3019 ;;Total ram usage:        5 bytes
  3020 ;; Hardware stack levels used:    1
  3021 ;; Hardware stack levels required when called:    2
  3022 ;; This function calls:
  3023 ;;		_Lcd_Write_Char
  3024 ;; This function is called by:
  3025 ;;		_main
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           
  3030                           ;psect for function _Lcd_Write_String
  3031  0168                     _Lcd_Write_String:	
  3032                           
  3033                           ;lcd.h: 118: int i;
  3034                           ;lcd.h: 119: for(i=0;a[i]!='\0';i++)
  3035                           
  3036                           ;incstack = 0
  3037                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3038  0168  01F8               	clrf	Lcd_Write_String@i
  3039  0169  01F9               	clrf	Lcd_Write_String@i+1
  3040  016A                     l1524:	
  3041  016A  0875               	movf	Lcd_Write_String@a,w
  3042  016B  0778               	addwf	Lcd_Write_String@i,w
  3043  016C  0084               	movwf	4
  3044  016D  0876               	movf	Lcd_Write_String@a+1,w
  3045  016E  3D79               	addwfc	Lcd_Write_String@i+1,w
  3046  016F  0085               	movwf	5
  3047  0170  0012               	moviw fsr0++
  3048  0171  1903               	btfsc	3,2
  3049  0172  0008               	return
  3050                           
  3051                           ;lcd.h: 120: Lcd_Write_Char(a[i]);
  3052  0173  0875               	movf	Lcd_Write_String@a,w
  3053  0174  0778               	addwf	Lcd_Write_String@i,w
  3054  0175  0084               	movwf	4
  3055  0176  0876               	movf	Lcd_Write_String@a+1,w
  3056  0177  3D79               	addwfc	Lcd_Write_String@i+1,w
  3057  0178  0085               	movwf	5
  3058  0179  0800               	movf	0,w	;code access
  3059  017A  3181  21F2  3181   	fcall	_Lcd_Write_Char
  3060  017D  3001               	movlw	1
  3061  017E  07F8               	addwf	Lcd_Write_String@i,f
  3062  017F  3000               	movlw	0
  3063  0180  3DF9               	addwfc	Lcd_Write_String@i+1,f
  3064  0181  296A               	goto	l1524
  3065  0182                     __end_of_Lcd_Write_String:	
  3066                           
  3067                           	psect	text13
  3068  01F2                     __ptext13:	
  3069 ;; *************** function _Lcd_Write_Char *****************
  3070 ;; Defined at:
  3071 ;;		line 100 in file "lcd.h"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;  a               1    wreg     unsigned char 
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  a               1    4[COMMON] unsigned char 
  3076 ;;  y               1    3[COMMON] unsigned char 
  3077 ;;  temp            1    2[COMMON] unsigned char 
  3078 ;; Return value:  Size  Location     Type
  3079 ;;                  1    wreg      void 
  3080 ;; Registers used:
  3081 ;;		wreg, status,2, status,0, pclath, cstack
  3082 ;; Tracked objects:
  3083 ;;		On entry : 0/0
  3084 ;;		On exit  : 0/0
  3085 ;;		Unchanged: 0/0
  3086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3088 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3089 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3090 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3091 ;;Total ram usage:        4 bytes
  3092 ;; Hardware stack levels used:    1
  3093 ;; Hardware stack levels required when called:    1
  3094 ;; This function calls:
  3095 ;;		_Lcd_Port
  3096 ;; This function is called by:
  3097 ;;		_Lcd_Write_String
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100                           
  3101                           
  3102                           ;psect for function _Lcd_Write_Char
  3103  01F2                     _Lcd_Write_Char:	
  3104                           
  3105                           ;incstack = 0
  3106                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3107                           ;Lcd_Write_Char@a stored from wreg
  3108  01F2  00F4               	movwf	Lcd_Write_Char@a
  3109                           
  3110                           ;lcd.h: 101: RC6 = 0;
  3111  01F3  0020               	movlb	0	; select bank0
  3112  01F4  130E               	bcf	14,6	;volatile
  3113                           
  3114                           ;lcd.h: 102: char temp,y;
  3115                           ;lcd.h: 103: temp = a&0x0F;
  3116  01F5  0874               	movf	Lcd_Write_Char@a,w
  3117  01F6  390F               	andlw	15
  3118  01F7  00F1               	movwf	??_Lcd_Write_Char
  3119  01F8  0871               	movf	??_Lcd_Write_Char,w
  3120  01F9  00F2               	movwf	Lcd_Write_Char@temp
  3121                           
  3122                           ;lcd.h: 104: y = a&0xF0;
  3123  01FA  0874               	movf	Lcd_Write_Char@a,w
  3124  01FB  39F0               	andlw	240
  3125  01FC  00F1               	movwf	??_Lcd_Write_Char
  3126  01FD  0871               	movf	??_Lcd_Write_Char,w
  3127  01FE  00F3               	movwf	Lcd_Write_Char@y
  3128                           
  3129                           ;lcd.h: 105: RC0 = 1;
  3130  01FF  140E               	bsf	14,0	;volatile
  3131                           
  3132                           ;lcd.h: 106: Lcd_Port(y>>4);
  3133  0200  0873               	movf	Lcd_Write_Char@y,w
  3134  0201  00F1               	movwf	??_Lcd_Write_Char
  3135  0202  3004               	movlw	4
  3136  0203                     u1195:	
  3137  0203  36F1               	lsrf	??_Lcd_Write_Char,f
  3138  0204  0B89               	decfsz	9,f
  3139  0205  2A03               	goto	u1195
  3140  0206  0871               	movf	??_Lcd_Write_Char,w
  3141  0207  3181  2150  3181   	fcall	_Lcd_Port
  3142                           
  3143                           ;lcd.h: 107: RC3 = 1;
  3144  020A  0020               	movlb	0	; select bank0
  3145  020B  158E               	bsf	14,3	;volatile
  3146                           
  3147                           ;lcd.h: 108: _delay((unsigned long)((40)*(8000000/4000000.0)));
  3148  020C  301A               	movlw	26
  3149  020D                     u1837:	
  3150  020D  0B89               	decfsz	9,f
  3151  020E  2A0D               	goto	u1837
  3152  020F  3200               	nop2
  3153                           
  3154                           ;lcd.h: 109: RC3 = 0;
  3155  0210  0020               	movlb	0	; select bank0
  3156  0211  118E               	bcf	14,3	;volatile
  3157                           
  3158                           ;lcd.h: 110: Lcd_Port(temp);
  3159  0212  0872               	movf	Lcd_Write_Char@temp,w
  3160  0213  3181  2150  3181   	fcall	_Lcd_Port
  3161                           
  3162                           ;lcd.h: 111: RC3 = 1;
  3163  0216  0020               	movlb	0	; select bank0
  3164  0217  158E               	bsf	14,3	;volatile
  3165                           
  3166                           ;lcd.h: 112: _delay((unsigned long)((40)*(8000000/4000000.0)));
  3167  0218  301A               	movlw	26
  3168  0219                     u1847:	
  3169  0219  0B89               	decfsz	9,f
  3170  021A  2A19               	goto	u1847
  3171  021B  3200               	nop2
  3172                           
  3173                           ;lcd.h: 113: RC3 = 0;
  3174  021C  0020               	movlb	0	; select bank0
  3175  021D  118E               	bcf	14,3	;volatile
  3176                           
  3177                           ;lcd.h: 114: RC6 = 1;
  3178  021E  170E               	bsf	14,6	;volatile
  3179  021F  0008               	return
  3180  0220                     __end_of_Lcd_Write_Char:	
  3181                           
  3182                           	psect	text14
  3183  0282                     __ptext14:	
  3184 ;; *************** function _Lcd_Set_Cursor *****************
  3185 ;; Defined at:
  3186 ;;		line 62 in file "lcd.h"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;  a               1    wreg     unsigned char 
  3189 ;;  b               1    3[COMMON] unsigned char 
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;  a               1    6[COMMON] unsigned char 
  3192 ;;  temp            1    9[COMMON] unsigned char 
  3193 ;;  y               1    8[COMMON] unsigned char 
  3194 ;;  z               1    7[COMMON] unsigned char 
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  1    wreg      void 
  3197 ;; Registers used:
  3198 ;;		wreg, status,2, status,0, pclath, cstack
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3204 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3205 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3206 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3207 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3208 ;;Total ram usage:        7 bytes
  3209 ;; Hardware stack levels used:    1
  3210 ;; Hardware stack levels required when called:    2
  3211 ;; This function calls:
  3212 ;;		_Lcd_Cmd
  3213 ;; This function is called by:
  3214 ;;		_main
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           
  3219                           ;psect for function _Lcd_Set_Cursor
  3220  0282                     _Lcd_Set_Cursor:	
  3221                           
  3222                           ;incstack = 0
  3223                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3224                           ;Lcd_Set_Cursor@a stored from wreg
  3225  0282  00F6               	movwf	Lcd_Set_Cursor@a
  3226                           
  3227                           ;lcd.h: 63: char temp,z,y;
  3228                           ;lcd.h: 64: if(a == 1)
  3229  0283  0376               	decf	Lcd_Set_Cursor@a,w
  3230  0284  1D03               	btfss	3,2
  3231  0285  2AA2               	goto	l1498
  3232                           
  3233                           ;lcd.h: 65: {
  3234                           ;lcd.h: 66: temp = 0x80 + b - 1;
  3235  0286  0873               	movf	Lcd_Set_Cursor@b,w
  3236  0287  3E7F               	addlw	127
  3237  0288  00F4               	movwf	??_Lcd_Set_Cursor
  3238  0289  0874               	movf	??_Lcd_Set_Cursor,w
  3239  028A  00F9               	movwf	Lcd_Set_Cursor@temp
  3240                           
  3241                           ;lcd.h: 67: z = temp>>4;
  3242  028B  0879               	movf	Lcd_Set_Cursor@temp,w
  3243  028C  00F4               	movwf	??_Lcd_Set_Cursor
  3244  028D  3004               	movlw	4
  3245  028E                     u1555:	
  3246  028E  36F4               	lsrf	??_Lcd_Set_Cursor,f
  3247  028F  0B89               	decfsz	9,f
  3248  0290  2A8E               	goto	u1555
  3249  0291  0874               	movf	??_Lcd_Set_Cursor,w
  3250  0292  00F5               	movwf	??_Lcd_Set_Cursor+1
  3251  0293  0875               	movf	??_Lcd_Set_Cursor+1,w
  3252  0294  00F7               	movwf	Lcd_Set_Cursor@z
  3253                           
  3254                           ;lcd.h: 68: y = temp & 0x0F;
  3255  0295  0879               	movf	Lcd_Set_Cursor@temp,w
  3256  0296  390F               	andlw	15
  3257  0297  00F4               	movwf	??_Lcd_Set_Cursor
  3258  0298  0874               	movf	??_Lcd_Set_Cursor,w
  3259  0299  00F8               	movwf	Lcd_Set_Cursor@y
  3260                           
  3261                           ;lcd.h: 69: Lcd_Cmd(z);
  3262  029A  0877               	movf	Lcd_Set_Cursor@z,w
  3263  029B  3181  213A  3182   	fcall	_Lcd_Cmd
  3264                           
  3265                           ;lcd.h: 70: Lcd_Cmd(y);
  3266  029E  0878               	movf	Lcd_Set_Cursor@y,w
  3267  029F  3181  213A         	fcall	_Lcd_Cmd
  3268                           
  3269                           ;lcd.h: 71: }
  3270  02A1  0008               	return
  3271  02A2                     l1498:	
  3272                           
  3273                           ;lcd.h: 72: else if(a == 2)
  3274  02A2  3002               	movlw	2
  3275  02A3  0676               	xorwf	Lcd_Set_Cursor@a,w
  3276  02A4  1D03               	btfss	3,2
  3277  02A5  0008               	return
  3278                           
  3279                           ;lcd.h: 73: {
  3280                           ;lcd.h: 74: temp = 0xC0 + b - 1;
  3281  02A6  0873               	movf	Lcd_Set_Cursor@b,w
  3282  02A7  3EBF               	addlw	191
  3283  02A8  00F4               	movwf	??_Lcd_Set_Cursor
  3284  02A9  0874               	movf	??_Lcd_Set_Cursor,w
  3285  02AA  00F9               	movwf	Lcd_Set_Cursor@temp
  3286                           
  3287                           ;lcd.h: 75: z = temp>>4;
  3288  02AB  0879               	movf	Lcd_Set_Cursor@temp,w
  3289  02AC  00F4               	movwf	??_Lcd_Set_Cursor
  3290  02AD  3004               	movlw	4
  3291  02AE                     u1575:	
  3292  02AE  36F4               	lsrf	??_Lcd_Set_Cursor,f
  3293  02AF  0B89               	decfsz	9,f
  3294  02B0  2AAE               	goto	u1575
  3295  02B1  0874               	movf	??_Lcd_Set_Cursor,w
  3296  02B2  00F5               	movwf	??_Lcd_Set_Cursor+1
  3297  02B3  0875               	movf	??_Lcd_Set_Cursor+1,w
  3298  02B4  00F7               	movwf	Lcd_Set_Cursor@z
  3299                           
  3300                           ;lcd.h: 76: y = temp & 0x0F;
  3301  02B5  0879               	movf	Lcd_Set_Cursor@temp,w
  3302  02B6  390F               	andlw	15
  3303  02B7  00F4               	movwf	??_Lcd_Set_Cursor
  3304  02B8  0874               	movf	??_Lcd_Set_Cursor,w
  3305  02B9  00F8               	movwf	Lcd_Set_Cursor@y
  3306                           
  3307                           ;lcd.h: 77: Lcd_Cmd(z);
  3308  02BA  0877               	movf	Lcd_Set_Cursor@z,w
  3309  02BB  3181  213A  3182   	fcall	_Lcd_Cmd
  3310                           
  3311                           ;lcd.h: 78: Lcd_Cmd(y);
  3312  02BE  0878               	movf	Lcd_Set_Cursor@y,w
  3313  02BF  3181  213A         	fcall	_Lcd_Cmd
  3314  02C1  0008               	return
  3315  02C2                     __end_of_Lcd_Set_Cursor:	
  3316                           
  3317                           	psect	text15
  3318  02C2                     __ptext15:	
  3319 ;; *************** function _Lcd_Init *****************
  3320 ;; Defined at:
  3321 ;;		line 82 in file "lcd.h"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;		None
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;		None
  3326 ;; Return value:  Size  Location     Type
  3327 ;;                  1    wreg      void 
  3328 ;; Registers used:
  3329 ;;		wreg, status,2, status,0, pclath, cstack
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3337 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3338 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3339 ;;Total ram usage:        1 bytes
  3340 ;; Hardware stack levels used:    1
  3341 ;; Hardware stack levels required when called:    2
  3342 ;; This function calls:
  3343 ;;		_Lcd_Cmd
  3344 ;;		_Lcd_Port
  3345 ;; This function is called by:
  3346 ;;		_main
  3347 ;; This function uses a non-reentrant model
  3348 ;;
  3349                           
  3350                           
  3351                           ;psect for function _Lcd_Init
  3352  02C2                     _Lcd_Init:	
  3353                           
  3354                           ;lcd.h: 83: Lcd_Port(0x00);
  3355                           
  3356                           ;incstack = 0
  3357                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3358  02C2  3000               	movlw	0
  3359  02C3  3181  2150  3182   	fcall	_Lcd_Port
  3360                           
  3361                           ;lcd.h: 84: _delay((unsigned long)((20)*(8000000/4000.0)));
  3362  02C6  3034               	movlw	52
  3363  02C7  00F3               	movwf	??_Lcd_Init
  3364  02C8  30F2               	movlw	242
  3365  02C9                     u1857:	
  3366  02C9  0B89               	decfsz	9,f
  3367  02CA  2AC9               	goto	u1857
  3368  02CB  0BF3               	decfsz	??_Lcd_Init,f
  3369  02CC  2AC9               	goto	u1857
  3370                           
  3371                           ;lcd.h: 85: Lcd_Cmd(0x03);
  3372  02CD  3003               	movlw	3
  3373  02CE  3181  213A  3182   	fcall	_Lcd_Cmd
  3374                           
  3375                           ;lcd.h: 86: _delay((unsigned long)((5)*(8000000/4000.0)));
  3376  02D1  300D               	movlw	13
  3377  02D2  00F3               	movwf	??_Lcd_Init
  3378  02D3  30FC               	movlw	252
  3379  02D4                     u1867:	
  3380  02D4  0B89               	decfsz	9,f
  3381  02D5  2AD4               	goto	u1867
  3382  02D6  0BF3               	decfsz	??_Lcd_Init,f
  3383  02D7  2AD4               	goto	u1867
  3384                           
  3385                           ;lcd.h: 87: Lcd_Cmd(0x03);
  3386  02D8  3003               	movlw	3
  3387  02D9  3181  213A  3182   	fcall	_Lcd_Cmd
  3388                           
  3389                           ;lcd.h: 88: _delay((unsigned long)((11)*(8000000/4000.0)));
  3390  02DC  301D               	movlw	29
  3391  02DD  00F3               	movwf	??_Lcd_Init
  3392  02DE  3091               	movlw	145
  3393  02DF                     u1877:	
  3394  02DF  0B89               	decfsz	9,f
  3395  02E0  2ADF               	goto	u1877
  3396  02E1  0BF3               	decfsz	??_Lcd_Init,f
  3397  02E2  2ADF               	goto	u1877
  3398  02E3  0000               	nop
  3399                           
  3400                           ;lcd.h: 89: Lcd_Cmd(0x03);
  3401  02E4  3003               	movlw	3
  3402  02E5  3181  213A  3182   	fcall	_Lcd_Cmd
  3403                           
  3404                           ;lcd.h: 91: Lcd_Cmd(0x02);
  3405  02E8  3002               	movlw	2
  3406  02E9  3181  213A  3182   	fcall	_Lcd_Cmd
  3407                           
  3408                           ;lcd.h: 92: Lcd_Cmd(0x02);
  3409  02EC  3002               	movlw	2
  3410  02ED  3181  213A  3182   	fcall	_Lcd_Cmd
  3411                           
  3412                           ;lcd.h: 93: Lcd_Cmd(0x08);
  3413  02F0  3008               	movlw	8
  3414  02F1  3181  213A  3182   	fcall	_Lcd_Cmd
  3415                           
  3416                           ;lcd.h: 94: Lcd_Cmd(0x00);
  3417  02F4  3000               	movlw	0
  3418  02F5  3181  213A  3182   	fcall	_Lcd_Cmd
  3419                           
  3420                           ;lcd.h: 95: Lcd_Cmd(0x0C);
  3421  02F8  300C               	movlw	12
  3422  02F9  3181  213A  3182   	fcall	_Lcd_Cmd
  3423                           
  3424                           ;lcd.h: 96: Lcd_Cmd(0x00);
  3425  02FC  3000               	movlw	0
  3426  02FD  3181  213A  3182   	fcall	_Lcd_Cmd
  3427                           
  3428                           ;lcd.h: 97: Lcd_Cmd(0x06);
  3429  0300  3006               	movlw	6
  3430  0301  3181  213A         	fcall	_Lcd_Cmd
  3431  0303  0008               	return
  3432  0304                     __end_of_Lcd_Init:	
  3433                           
  3434                           	psect	text16
  3435  0132                     __ptext16:	
  3436 ;; *************** function _Lcd_Clear *****************
  3437 ;; Defined at:
  3438 ;;		line 57 in file "lcd.h"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;		None
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;		None
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  1    wreg      void 
  3445 ;; Registers used:
  3446 ;;		wreg, status,2, status,0, pclath, cstack
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3456 ;;Total ram usage:        0 bytes
  3457 ;; Hardware stack levels used:    1
  3458 ;; Hardware stack levels required when called:    2
  3459 ;; This function calls:
  3460 ;;		_Lcd_Cmd
  3461 ;; This function is called by:
  3462 ;;		_main
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           
  3467                           ;psect for function _Lcd_Clear
  3468  0132                     _Lcd_Clear:	
  3469                           
  3470                           ;lcd.h: 58: Lcd_Cmd(0);
  3471                           
  3472                           ;incstack = 0
  3473                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3474  0132  3000               	movlw	0
  3475  0133  3181  213A  3181   	fcall	_Lcd_Cmd
  3476                           
  3477                           ;lcd.h: 59: Lcd_Cmd(1);
  3478  0136  3001               	movlw	1
  3479  0137  3181  213A         	fcall	_Lcd_Cmd
  3480  0139  0008               	return
  3481  013A                     __end_of_Lcd_Clear:	
  3482                           
  3483                           	psect	text17
  3484  013A                     __ptext17:	
  3485 ;; *************** function _Lcd_Cmd *****************
  3486 ;; Defined at:
  3487 ;;		line 47 in file "lcd.h"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;  a               1    wreg     unsigned char 
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;  a               1    2[COMMON] unsigned char 
  3492 ;; Return value:  Size  Location     Type
  3493 ;;                  1    wreg      void 
  3494 ;; Registers used:
  3495 ;;		wreg, status,2, status,0, pclath, cstack
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3502 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3503 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3504 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3505 ;;Total ram usage:        2 bytes
  3506 ;; Hardware stack levels used:    1
  3507 ;; Hardware stack levels required when called:    1
  3508 ;; This function calls:
  3509 ;;		_Lcd_Port
  3510 ;; This function is called by:
  3511 ;;		_Lcd_Clear
  3512 ;;		_Lcd_Set_Cursor
  3513 ;;		_Lcd_Init
  3514 ;;		_Lcd_Shift_Right
  3515 ;;		_Lcd_Shift_Left
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518                           
  3519                           
  3520                           ;psect for function _Lcd_Cmd
  3521  013A                     _Lcd_Cmd:	
  3522                           
  3523                           ;incstack = 0
  3524                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3525                           ;Lcd_Cmd@a stored from wreg
  3526  013A  00F2               	movwf	Lcd_Cmd@a
  3527                           
  3528                           ;lcd.h: 48: RC6 = 0;
  3529  013B  0020               	movlb	0	; select bank0
  3530  013C  130E               	bcf	14,6	;volatile
  3531                           
  3532                           ;lcd.h: 49: RC0 = 0;
  3533  013D  100E               	bcf	14,0	;volatile
  3534                           
  3535                           ;lcd.h: 50: Lcd_Port(a);
  3536  013E  0872               	movf	Lcd_Cmd@a,w
  3537  013F  3181  2150  3181   	fcall	_Lcd_Port
  3538                           
  3539                           ;lcd.h: 51: RC3 = 1;
  3540  0142  0020               	movlb	0	; select bank0
  3541  0143  158E               	bsf	14,3	;volatile
  3542                           
  3543                           ;lcd.h: 52: _delay((unsigned long)((4)*(8000000/4000.0)));
  3544  0144  300B               	movlw	11
  3545  0145  00F1               	movwf	??_Lcd_Cmd
  3546  0146  3062               	movlw	98
  3547  0147                     u1887:	
  3548  0147  0B89               	decfsz	9,f
  3549  0148  2947               	goto	u1887
  3550  0149  0BF1               	decfsz	??_Lcd_Cmd,f
  3551  014A  2947               	goto	u1887
  3552  014B  3200               	nop2
  3553                           
  3554                           ;lcd.h: 53: RC3 = 0;
  3555  014C  0020               	movlb	0	; select bank0
  3556  014D  118E               	bcf	14,3	;volatile
  3557                           
  3558                           ;lcd.h: 54: RC6 = 1;
  3559  014E  170E               	bsf	14,6	;volatile
  3560  014F  0008               	return
  3561  0150                     __end_of_Lcd_Cmd:	
  3562                           
  3563                           	psect	text18
  3564  0150                     __ptext18:	
  3565 ;; *************** function _Lcd_Port *****************
  3566 ;; Defined at:
  3567 ;;		line 26 in file "lcd.h"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;  a               1    wreg     unsigned char 
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;  a               1    0[COMMON] unsigned char 
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  1    wreg      void 
  3574 ;; Registers used:
  3575 ;;		wreg
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3582 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3584 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3585 ;;Total ram usage:        1 bytes
  3586 ;; Hardware stack levels used:    1
  3587 ;; This function calls:
  3588 ;;		Nothing
  3589 ;; This function is called by:
  3590 ;;		_Lcd_Cmd
  3591 ;;		_Lcd_Init
  3592 ;;		_Lcd_Write_Char
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           
  3597                           ;psect for function _Lcd_Port
  3598  0150                     _Lcd_Port:	
  3599                           
  3600                           ;incstack = 0
  3601                           ; Regs used in _Lcd_Port: [wreg]
  3602                           ;Lcd_Port@a stored from wreg
  3603  0150  00F0               	movwf	Lcd_Port@a
  3604                           
  3605                           ;lcd.h: 27: if(a & 1)
  3606  0151  1C70               	btfss	Lcd_Port@a,0
  3607  0152  2956               	goto	l61
  3608                           
  3609                           ;lcd.h: 28: RB4 = 1;
  3610  0153  0020               	movlb	0	; select bank0
  3611  0154  160D               	bsf	13,4	;volatile
  3612  0155  2958               	goto	l1182
  3613  0156                     l61:	
  3614                           
  3615                           ;lcd.h: 29: else
  3616                           ;lcd.h: 30: RB4 = 0;
  3617  0156  0020               	movlb	0	; select bank0
  3618  0157  120D               	bcf	13,4	;volatile
  3619  0158                     l1182:	
  3620                           
  3621                           ;lcd.h: 32: if(a & 2)
  3622  0158  1CF0               	btfss	Lcd_Port@a,1
  3623  0159  295C               	goto	l63
  3624                           
  3625                           ;lcd.h: 33: RB5 = 1;
  3626  015A  168D               	bsf	13,5	;volatile
  3627  015B  295D               	goto	l1186
  3628  015C                     l63:	
  3629                           
  3630                           ;lcd.h: 34: else
  3631                           ;lcd.h: 35: RB5 = 0;
  3632  015C  128D               	bcf	13,5	;volatile
  3633  015D                     l1186:	
  3634                           
  3635                           ;lcd.h: 37: if(a & 4)
  3636  015D  1D70               	btfss	Lcd_Port@a,2
  3637  015E  2961               	goto	l65
  3638                           
  3639                           ;lcd.h: 38: RB6 = 1;
  3640  015F  170D               	bsf	13,6	;volatile
  3641  0160  2962               	goto	l1190
  3642  0161                     l65:	
  3643                           
  3644                           ;lcd.h: 39: else
  3645                           ;lcd.h: 40: RB6 = 0;
  3646  0161  130D               	bcf	13,6	;volatile
  3647  0162                     l1190:	
  3648                           
  3649                           ;lcd.h: 42: if(a & 8)
  3650  0162  1DF0               	btfss	Lcd_Port@a,3
  3651  0163  2966               	goto	l67
  3652                           
  3653                           ;lcd.h: 43: RB7 = 1;
  3654  0164  178D               	bsf	13,7	;volatile
  3655  0165  0008               	return
  3656  0166                     l67:	
  3657                           
  3658                           ;lcd.h: 44: else
  3659                           ;lcd.h: 45: RB7 = 0;
  3660  0166  138D               	bcf	13,7	;volatile
  3661  0167  0008               	return
  3662  0168                     __end_of_Lcd_Port:	
  3663  007E                     btemp	set	126	;btemp
  3664  007E                     wtemp0	set	126


Data Sizes:
    Strings     63
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     61      61
    BANK1            80     28      28
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> main@bufB(BANK1[8]), main@bufA(BANK1[8]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 8
		 -> main@bufB(BANK1[8]), main@bufA(BANK1[8]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> main@bufB(BANK1[8]), main@bufA(BANK1[8]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 8
		 -> main@bufB(BANK1[8]), main@bufA(BANK1[8]), 

    echo@sfrdev	PTR unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), PORTB(SFR0[1]), PORTA(SFR0[1]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 8
		 -> main@bufB(BANK1[8]), main@bufA(BANK1[8]), 

    main@pdelay_counter	PTR int  size(1) Largest target is 2
		 -> main@delay_counter(BANK1[2]), 

    main@pinitialize	PTR int  size(1) Largest target is 2
		 -> main@initialize(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[4]), STR_9(CODE[6]), STR_8(CODE[11]), STR_7(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[15]), STR_4(CODE[4]), STR_3(CODE[6]), 
		 -> STR_2(CODE[11]), main@bufB(BANK1[8]), main@bufA(BANK1[8]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _echo->___awtoft
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_echo
    _itoa->_utoa
    _echo->___fttol
    ___fttol->___ftmul
    ___ftmul->___ftdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                35    31      4   10937
                                             54 BANK0      7     3      4
                                              0 BANK1     28    28      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                               _echo
                               _itoa
                          _pinConfig
 ---------------------------------------------------------------------------------
 (1) _pinConfig                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    1503
                                             13 COMMON     1     1      0
                                              4 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1074
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _echo                                                 8     6      2    6718
                                             46 BANK0      8     6      2
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     305
                                             32 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2100
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2054
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1812
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     5     3      2    1116
                                              5 COMMON     5     3      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     751
                                              3 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                              3 COMMON     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _echo
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
   _pinConfig

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3D      3D       5       76.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1C      1C       7       35.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Apr 14 19:50:52 2018

              __CFG_CP$OFF 0000                         l61 0156                         l63 015C  
                       l65 0161                         l67 0166                        l120 045C  
                      l108 079B                        l117 0454                        l119 0458  
                      l400 03AB                        l401 03B3                        l393 0398  
                      l484 0437                        l499 0350                        _RA0 0060  
                      _RC0 0070                        _RA5 0065                        _RB4 006C  
                      _RB5 006D                        _RC3 0073                        _RB6 006E  
                      _RB7 006F                        _RC6 0076               __CFG_CPD$OFF 0000  
                      u965 037A                        u985 0393               __CFG_BORV$LO 0000  
                      wreg 0009               __CFG_LVP$OFF 0000               ___ftdiv@cntr 002A  
             ___ftdiv@sign 002F                       l1202 0375                       l1212 039D  
                     l1204 037F                       l1214 03A5                       l1206 0384  
                     l1400 0609                       l1404 0611                       l1420 03E3  
                     l1244 0274                       l1236 0256                       l1260 01CC  
                     l1190 0162                       l1182 0158                       l1318 018C  
                     l1334 0509                       l1238 0262                       l1262 01D8  
                     l1270 01ED                       l1328 04F3                       l1440 0421  
                     l1248 027D                       l1186 015D                       l1370 059C  
                     l1266 01E4                       l1524 016A                       l1356 0563  
                     l1348 054A                       l1452 0448                       l1620 067F  
                     l1198 036E                       l1446 042E                       l1438 0413  
                     l1392 05F5                       l1376 05B2                       l1448 043A  
                     l1544 0461                       l1546 046C                       l1458 030A  
                     l1388 05ED                       l1556 0477                       l1468 0328  
                     l1558 0487                       l1582 01BA                       l1680 07DC  
                     l1648 0732                       l1498 02A2                       STR_1 0800  
                     STR_2 082A                       STR_3 0835                       STR_4 083B  
                     STR_5 0810                       STR_6 0835                       STR_7 083B  
                     STR_8 081F                       STR_9 0835                       u1005 03A0  
                     u1105 026D                       u1115 0275                       u1045 03BA  
                     u1145 01CF                       u1235 051B                       u1315 05BE  
                     u1075 0259                       u1245 052B                       u1325 05CE  
                     u1165 01DE                       u1255 054B                       u1095 0263  
                     u1175 01E5                       u1265 055A                       u1345 05F6  
                     u1425 03EA                       u1195 0203                       u1275 0564  
                     u1355 05FC                       u1614 0490                       u1455 0414  
                     u1615 048F                       u1385 0612                       u1555 028E  
                     u1395 0618                       u1485 042F                       u1645 06CD  
                     u1575 02AE                       u1807 0793                       u1655 06DB  
                     u1817 07D5                       u1594 0480                       u1595 047F  
                     u1827 0472                       u1675 073E                       u1837 020D  
                     u1685 074C                       u1847 0219                       u1695 07F0  
                     u1857 02C9                       u1777 0640                       u1867 02D4  
                     u1787 0678                       u1877 02DF                       u1797 0722  
                     u1887 0147               __CFG_WRT$OFF 0000          ?_Lcd_Write_String 0075  
                     _echo 0451                       _main 0639               ___ftpack@arg 0070  
                     _itoa 01A2               ___ftpack@exp 0073                       fsr0h 0005  
                     fsr1h 0007                       indf0 0000                       fsr0l 0004  
                     indf1 0001                       fsr1l 0006                       btemp 007E  
                     _utoa 0304                       start 0003         ??_Lcd_Write_String 0077  
            __CFG_IESO$OFF 0000            __end_of_Lcd_Cmd 0150              __CFG_MCLRE$ON 0000  
             ___ftmul@cntr 003E               ___ftmul@sign 003F               ___fttol@exp1 004D  
             ___fttol@lval 0049                      ?_echo 004E                      ?_main 0056  
                    ?_itoa 0024                      STR_10 083B              __CFG_WDTE$OFF 0000  
          __end_of___ftdiv 0585                      ?_utoa 0078            __end_of___ftmul 0639  
                    _T1CON 0018            __end_of___fttol 0451            __end_of___lwdiv 0282  
          __end_of___lwmod 01F2                      _TMR1H 0017                      _TMR1L 0016  
                    _PORTA 000C                      _PORTB 000D                      _PORTC 000E  
  __size_of_Lcd_Set_Cursor 0040                      _TRISA 008C                      _TRISB 008D  
                    _TRISC 008E             __CFG_FCMEN$OFF 0000              ___awtoft@sign 007D  
                    echo@a 0054              ___ftpack@sign 0074             __CFG_BOREN$OFF 0000  
                    utoa@c 0022                      utoa@v 0020                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 0304           __end_of_Lcd_Port 0168  
          __initialization 07FD         main@pdelay_counter 00B4               __end_of_echo 04DC  
             __end_of_main 07FD               __end_of_itoa 01C6               __end_of_utoa 0366  
                   ??_echo 0050                     ??_main 005A              ___fttol@sign1 0048  
                   ??_itoa 007D                     ??_utoa 007C         __size_of_Lcd_Clear 0008  
           __CFG_PLLEN$OFF 0000           __end_of___awtoft 01A2                     _ANSELA 018C  
                   _ANSELB 018D                     _ANSELC 018E           __end_of___ftpack 03CA  
                   _OSCCON 0099                  ??_Lcd_Cmd 0071                     _TMR1ON 00C0  
  __size_of_Lcd_Write_Char 002E             __CFG_PWRTE$OFF 0000             __CFG_STVREN$ON 0000  
            main@ping_val1 00B7              main@ping_val2 00B9                  ??___ftdiv 0026  
                ??___ftmul 0036                  ??___fttol 0044                  ??___lwdiv 0074  
                ??___lwmod 0074      ___ftmul@f3_as_product 003B                     itoa@cp 0028  
          Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0073            Lcd_Set_Cursor@y 0078  
          Lcd_Set_Cursor@z 0077    __end_of__initialization 07FD          __end_of_Lcd_Clear 013A  
               ___ftdiv@f1 0023                 ___ftdiv@f2 0020                 ___ftdiv@f3 002B  
               ___awtoft@c 0078                 ___ftmul@f1 0030                 ___ftmul@f2 0033  
               ___fttol@f1 0040             __pcstackCOMMON 0070             _Lcd_Set_Cursor 0282  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070         __size_of_pinConfig 002E  
               __pmaintext 0639  __size_of_Lcd_Write_String 001A                  ?___awtoft 0078  
                ?___ftpack 0070     __end_of_Lcd_Set_Cursor 02C2                 ??_Lcd_Init 0073  
               ??_Lcd_Port 0070          main@delay_counter 00B2                    _RXDTSEL 08EF  
                  _TXCKSEL 08EA             main@initialize 00B5             _Lcd_Write_Char 01F2  
                  _Lcd_Cmd 013A                 echo@sfrdev 0052                    ___ftdiv 04DC  
                  ___ftmul 0585                    ___fttol 03CA                    ___lwdiv 024E  
                  ___lwmod 01C6                 ??___awtoft 007B                 ??___ftpack 0075  
          ?_Lcd_Set_Cursor 0073                    __ptext1 0220                    __ptext2 01A2  
                  __ptext3 0304                    __ptext4 01C6                    __ptext5 024E  
                  __ptext6 0451                    __ptext7 03CA                    __ptext8 0585  
                  __ptext9 04DC                    echo@pin 004E          __end_of_pinConfig 024E  
   __end_of_Lcd_Write_Char 0220       end_of_initialization 07FD                    itoa@buf 0029  
                  itoa@val 0024                  Lcd_Port@a 0070                    utoa@buf 0023  
                  utoa@val 0078           __CFG_FOSC$INTOSC 0000            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0075          Lcd_Write_String@i 0078                ___ftdiv@exp 002E  
               main@toggle 00B0                ___ftmul@exp 003A                  _Lcd_Clear 0132  
         _Lcd_Write_String 0168        start_initialization 07FD          __size_of_Lcd_Init 0042  
        __size_of_Lcd_Port 0018                 ?_Lcd_Clear 0070            Lcd_Write_Char@a 0074  
          Lcd_Write_Char@y 0073          __size_of___awtoft 0020          __size_of___ftpack 0064  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
                 ?_Lcd_Cmd 0070           ___lwdiv@dividend 0072           ??_Lcd_Set_Cursor 0074  
                 ?___ftdiv 0020                   ?___ftmul 0030                   ?___fttol 0040  
                 ?___lwdiv 0070                   ?___lwmod 0070           ___lwdiv@quotient 0075  
                _pinConfig 0220                   Lcd_Cmd@a 0072                ??_Lcd_Clear 0073  
         ??_Lcd_Write_Char 0071                   _Lcd_Init 02C2                   _Lcd_Port 0150  
               ?_pinConfig 0070   __end_of_Lcd_Write_String 0182           __size_of_Lcd_Cmd 0016  
         __size_of___ftdiv 00A9           __size_of___ftmul 00B4           __size_of___fttol 0087  
         __size_of___lwdiv 0034           __size_of___lwmod 002C                   ___awtoft 0182  
                 ___ftpack 0366            ___lwdiv@divisor 0070            ___lwdiv@counter 0077  
                 __ptext10 0182                   __ptext11 0366                   __ptext12 0168  
                 __ptext13 01F2                   __ptext14 0282                   __ptext15 02C2  
                 __ptext16 0132                   __ptext17 013A                   __ptext18 0150  
                 echo@port 0051              __size_of_echo 008B              __size_of_main 01C4  
          main@pinitialize 00BB              __size_of_itoa 0024              __size_of_utoa 0062  
                 main@bufA 00A0                   main@bufB 00A8                   main@argc 0056  
                 main@argv 0058                   itoa@base 0026                ??_pinConfig 0070  
       Lcd_Write_Char@temp 0072           ___lwmod@dividend 0072          __CFG_CLKOUTEN$OFF 0000  
       Lcd_Set_Cursor@temp 0079              __pstringtext1 0800              __pstringtext2 0810  
            __pstringtext3 081F              __pstringtext4 082A              __pstringtext5 0835  
            __pstringtext6 083B              __pstringtext7 0000                   utoa@base 007A  
          ___lwmod@divisor 0070            ___lwmod@counter 0075  
