

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Apr 14 17:08:27 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 1.45
    37                           ; Generated 16/11/2017 GMT
    38                           ; 
    39                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F1829 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  0111                     	;# 
   122  0112                     	;# 
   123  0113                     	;# 
   124  0114                     	;# 
   125  0115                     	;# 
   126  0116                     	;# 
   127  0117                     	;# 
   128  0118                     	;# 
   129  0119                     	;# 
   130  011A                     	;# 
   131  011B                     	;# 
   132  011D                     	;# 
   133  011E                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  018E                     	;# 
   137  0191                     	;# 
   138  0191                     	;# 
   139  0192                     	;# 
   140  0193                     	;# 
   141  0193                     	;# 
   142  0193                     	;# 
   143  0194                     	;# 
   144  0195                     	;# 
   145  0196                     	;# 
   146  0199                     	;# 
   147  019A                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019C                     	;# 
   151  019D                     	;# 
   152  019E                     	;# 
   153  019F                     	;# 
   154  020C                     	;# 
   155  020D                     	;# 
   156  020E                     	;# 
   157  0211                     	;# 
   158  0211                     	;# 
   159  0212                     	;# 
   160  0212                     	;# 
   161  0213                     	;# 
   162  0213                     	;# 
   163  0214                     	;# 
   164  0214                     	;# 
   165  0215                     	;# 
   166  0215                     	;# 
   167  0215                     	;# 
   168  0216                     	;# 
   169  0216                     	;# 
   170  0217                     	;# 
   171  0217                     	;# 
   172  0219                     	;# 
   173  021A                     	;# 
   174  021B                     	;# 
   175  021C                     	;# 
   176  021D                     	;# 
   177  021E                     	;# 
   178  021F                     	;# 
   179  0291                     	;# 
   180  0291                     	;# 
   181  0292                     	;# 
   182  0293                     	;# 
   183  0294                     	;# 
   184  0295                     	;# 
   185  0295                     	;# 
   186  0296                     	;# 
   187  0298                     	;# 
   188  0298                     	;# 
   189  0299                     	;# 
   190  029A                     	;# 
   191  029B                     	;# 
   192  029C                     	;# 
   193  029D                     	;# 
   194  029E                     	;# 
   195  0311                     	;# 
   196  0311                     	;# 
   197  0312                     	;# 
   198  0313                     	;# 
   199  0318                     	;# 
   200  0318                     	;# 
   201  0319                     	;# 
   202  031A                     	;# 
   203  038C                     	;# 
   204  038D                     	;# 
   205  038E                     	;# 
   206  0391                     	;# 
   207  0392                     	;# 
   208  0393                     	;# 
   209  0394                     	;# 
   210  0395                     	;# 
   211  0396                     	;# 
   212  039A                     	;# 
   213  039C                     	;# 
   214  039D                     	;# 
   215  039E                     	;# 
   216  039F                     	;# 
   217  0415                     	;# 
   218  0416                     	;# 
   219  0417                     	;# 
   220  041C                     	;# 
   221  041D                     	;# 
   222  041E                     	;# 
   223  0FE4                     	;# 
   224  0FE5                     	;# 
   225  0FE6                     	;# 
   226  0FE7                     	;# 
   227  0FE8                     	;# 
   228  0FE9                     	;# 
   229  0FEA                     	;# 
   230  0FEB                     	;# 
   231  0FED                     	;# 
   232  0FEE                     	;# 
   233  0FEF                     	;# 
   234  0016                     _TMR1L	set	22
   235  0017                     _TMR1H	set	23
   236  0018                     _T1CON	set	24
   237  000E                     _PORTC	set	14
   238  000D                     _PORTB	set	13
   239  000C                     _PORTA	set	12
   240  00C0                     _TMR1ON	set	192
   241  0060                     _RA0	set	96
   242  0065                     _RA5	set	101
   243  0073                     _RC3	set	115
   244  0070                     _RC0	set	112
   245  0076                     _RC6	set	118
   246  006F                     _RB7	set	111
   247  006E                     _RB6	set	110
   248  006D                     _RB5	set	109
   249  006C                     _RB4	set	108
   250  008E                     _TRISC	set	142
   251  008D                     _TRISB	set	141
   252  008C                     _TRISA	set	140
   253  0099                     _OSCCON	set	153
   254  08EF                     _RXDTSEL	set	2287
   255  08EA                     _TXCKSEL	set	2282
   256  018D                     _ANSELB	set	397
   257  018C                     _ANSELA	set	396
   258  018E                     _ANSELC	set	398
   259                           
   260                           	psect	stringtext1
   261  0800                     __pstringtext1:	
   262  0800                     STR_1:	
   263  0800  3457               	retlw	87	;'W'
   264  0801  3445               	retlw	69	;'E'
   265  0802  344C               	retlw	76	;'L'
   266  0803  3443               	retlw	67	;'C'
   267  0804  344F               	retlw	79	;'O'
   268  0805  344D               	retlw	77	;'M'
   269  0806  3445               	retlw	69	;'E'
   270  0807  3420               	retlw	32	;' '
   271  0808  3454               	retlw	84	;'T'
   272  0809  344F               	retlw	79	;'O'
   273  080A  3420               	retlw	32	;' '
   274  080B  3455               	retlw	85	;'U'
   275  080C  3454               	retlw	84	;'T'
   276  080D  3453               	retlw	83	;'S'
   277  080E  3441               	retlw	65	;'A'
   278  080F  3400               	retlw	0
   279                           
   280                           	psect	stringtext2
   281  0810                     __pstringtext2:	
   282  0810                     STR_5:	
   283  0810  344F               	retlw	79	;'O'
   284  0811  3475               	retlw	117	;'u'
   285  0812  3474               	retlw	116	;'t'
   286  0813  3420               	retlw	32	;' '
   287  0814  346F               	retlw	111	;'o'
   288  0815  3466               	retlw	102	;'f'
   289  0816  3420               	retlw	32	;' '
   290  0817  3452               	retlw	82	;'R'
   291  0818  3461               	retlw	97	;'a'
   292  0819  346E               	retlw	110	;'n'
   293  081A  3467               	retlw	103	;'g'
   294  081B  3465               	retlw	101	;'e'
   295  081C  343A               	retlw	58	;':'
   296  081D  3420               	retlw	32	;' '
   297  081E  3400               	retlw	0
   298                           
   299                           	psect	stringtext3
   300  081F                     __pstringtext3:	
   301  081F                     STR_8:	
   302  081F  3444               	retlw	68	;'D'
   303  0820  3469               	retlw	105	;'i'
   304  0821  3473               	retlw	115	;'s'
   305  0822  3474               	retlw	116	;'t'
   306  0823  3461               	retlw	97	;'a'
   307  0824  346E               	retlw	110	;'n'
   308  0825  3463               	retlw	99	;'c'
   309  0826  3465               	retlw	101	;'e'
   310  0827  343A               	retlw	58	;':'
   311  0828  3420               	retlw	32	;' '
   312  0829  3400               	retlw	0
   313                           
   314                           	psect	stringtext4
   315  082A                     __pstringtext4:	
   316  082A                     STR_2:	
   317  082A  3449               	retlw	73	;'I'
   318  082B  346E               	retlw	110	;'n'
   319  082C  3420               	retlw	32	;' '
   320  082D  3472               	retlw	114	;'r'
   321  082E  3461               	retlw	97	;'a'
   322  082F  346E               	retlw	110	;'n'
   323  0830  3467               	retlw	103	;'g'
   324  0831  3465               	retlw	101	;'e'
   325  0832  343A               	retlw	58	;':'
   326  0833  3420               	retlw	32	;' '
   327  0834  3400               	retlw	0
   328                           
   329                           	psect	stringtext5
   330  0835                     __pstringtext5:	
   331  0835                     STR_3:	
   332  0835  3420               	retlw	32	;' '
   333  0836  3463               	retlw	99	;'c'
   334  0837  346D               	retlw	109	;'m'
   335  0838  342C               	retlw	44	;','
   336  0839  3420               	retlw	32	;' '
   337  083A  3400               	retlw	0
   338                           
   339                           	psect	stringtext6
   340  083B                     __pstringtext6:	
   341  083B                     STR_4:	
   342  083B  3420               	retlw	32	;' '
   343  083C  3463               	retlw	99	;'c'
   344  083D  346D               	retlw	109	;'m'
   345  083E  3400               	retlw	0
   346                           
   347                           	psect	stringtext7
   348  0000                     __pstringtext7:	
   349  0835                     
   350                           ; #config settings
   351  0000                     
   352                           	psect	cinit
   353  07FD                     start_initialization:	
   354  07FD                     __initialization:	
   355  07FD                     end_of_initialization:	
   356                           ;End of C runtime variable initialization code
   357                           
   358  07FD                     __end_of__initialization:	
   359  07FD  0020               	movlb	0
   360  07FE  3186  2E28         	ljmp	_main	;jump to C main() function
   361                           
   362                           	psect	cstackBANK1
   363  00A0                     __pcstackBANK1:	
   364  00A0                     main@delay:	
   365                           
   366                           ; 2 bytes @ 0x0
   367  00A0                     	ds	2
   368  00A2                     main@LCD_count:	
   369                           
   370                           ; 2 bytes @ 0x2
   371  00A2                     	ds	2
   372  00A4                     main@bufA:	
   373                           
   374                           ; 8 bytes @ 0x4
   375  00A4                     	ds	8
   376  00AC                     main@bufB:	
   377                           
   378                           ; 8 bytes @ 0xC
   379  00AC                     	ds	8
   380  00B4                     main@Delay_counter:	
   381                           
   382                           ; 2 bytes @ 0x14
   383  00B4                     	ds	2
   384  00B6                     main@initialize:	
   385                           
   386                           ; 2 bytes @ 0x16
   387  00B6                     	ds	2
   388  00B8                     main@toggle:	
   389                           
   390                           ; 2 bytes @ 0x18
   391  00B8                     	ds	2
   392  00BA                     main@ping_val1:	
   393                           
   394                           ; 2 bytes @ 0x1A
   395  00BA                     	ds	2
   396  00BC                     main@ping_val2:	
   397                           
   398                           ; 2 bytes @ 0x1C
   399  00BC                     	ds	2
   400                           
   401                           	psect	cstackCOMMON
   402  0070                     __pcstackCOMMON:	
   403  0070                     ?_pinConfig:	
   404  0070                     ??_pinConfig:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ?_Lcd_Port:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ??_Lcd_Port:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ?_Lcd_Cmd:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_Lcd_Clear:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ?_Lcd_Init:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_Lcd_Write_Char:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?___lwdiv:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?___lwmod:	
   429                           ; 2 bytes @ 0x0
   430                           
   431  0070                     ?___ftpack:	
   432                           ; 2 bytes @ 0x0
   433                           
   434  0070                     Lcd_Port@a:	
   435                           ; 3 bytes @ 0x0
   436                           
   437  0070                     ___lwdiv@divisor:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ___lwmod@divisor:	
   441                           ; 2 bytes @ 0x0
   442                           
   443  0070                     ___ftpack@arg:	
   444                           ; 2 bytes @ 0x0
   445                           
   446                           
   447                           ; 3 bytes @ 0x0
   448  0070                     	ds	1
   449  0071                     ??_Lcd_Cmd:	
   450  0071                     ??_Lcd_Write_Char:	
   451                           ; 1 bytes @ 0x1
   452                           
   453                           
   454                           ; 1 bytes @ 0x1
   455  0071                     	ds	1
   456  0072                     Lcd_Cmd@a:	
   457  0072                     Lcd_Write_Char@temp:	
   458                           ; 1 bytes @ 0x2
   459                           
   460  0072                     ___lwdiv@dividend:	
   461                           ; 1 bytes @ 0x2
   462                           
   463  0072                     ___lwmod@dividend:	
   464                           ; 2 bytes @ 0x2
   465                           
   466                           
   467                           ; 2 bytes @ 0x2
   468  0072                     	ds	1
   469  0073                     ??_Lcd_Clear:	
   470  0073                     ?_Lcd_Set_Cursor:	
   471                           ; 1 bytes @ 0x3
   472                           
   473  0073                     ??_Lcd_Init:	
   474                           ; 1 bytes @ 0x3
   475                           
   476  0073                     Lcd_Set_Cursor@b:	
   477                           ; 1 bytes @ 0x3
   478                           
   479  0073                     Lcd_Write_Char@y:	
   480                           ; 1 bytes @ 0x3
   481                           
   482  0073                     ___ftpack@exp:	
   483                           ; 1 bytes @ 0x3
   484                           
   485                           
   486                           ; 1 bytes @ 0x3
   487  0073                     	ds	1
   488  0074                     ??_Lcd_Set_Cursor:	
   489  0074                     ??___lwdiv:	
   490                           ; 1 bytes @ 0x4
   491                           
   492  0074                     ??___lwmod:	
   493                           ; 1 bytes @ 0x4
   494                           
   495  0074                     Lcd_Write_Char@a:	
   496                           ; 1 bytes @ 0x4
   497                           
   498  0074                     ___ftpack@sign:	
   499                           ; 1 bytes @ 0x4
   500                           
   501                           
   502                           ; 1 bytes @ 0x4
   503  0074                     	ds	1
   504  0075                     ??___ftpack:	
   505  0075                     ?_Lcd_Write_String:	
   506                           ; 1 bytes @ 0x5
   507                           
   508  0075                     ___lwmod@counter:	
   509                           ; 1 bytes @ 0x5
   510                           
   511  0075                     Lcd_Write_String@a:	
   512                           ; 1 bytes @ 0x5
   513                           
   514  0075                     ___lwdiv@quotient:	
   515                           ; 2 bytes @ 0x5
   516                           
   517                           
   518                           ; 2 bytes @ 0x5
   519  0075                     	ds	1
   520  0076                     Lcd_Set_Cursor@a:	
   521                           
   522                           ; 1 bytes @ 0x6
   523  0076                     	ds	1
   524  0077                     ??_Lcd_Write_String:	
   525  0077                     Lcd_Set_Cursor@z:	
   526                           ; 1 bytes @ 0x7
   527                           
   528  0077                     ___lwdiv@counter:	
   529                           ; 1 bytes @ 0x7
   530                           
   531                           
   532                           ; 1 bytes @ 0x7
   533  0077                     	ds	1
   534  0078                     ?_utoa:	
   535  0078                     ?___awtoft:	
   536                           ; 1 bytes @ 0x8
   537                           
   538  0078                     Lcd_Set_Cursor@y:	
   539                           ; 3 bytes @ 0x8
   540                           
   541  0078                     Lcd_Write_String@i:	
   542                           ; 1 bytes @ 0x8
   543                           
   544  0078                     ___awtoft@c:	
   545                           ; 2 bytes @ 0x8
   546                           
   547  0078                     utoa@val:	
   548                           ; 2 bytes @ 0x8
   549                           
   550                           
   551                           ; 2 bytes @ 0x8
   552  0078                     	ds	1
   553  0079                     Lcd_Set_Cursor@temp:	
   554                           
   555                           ; 1 bytes @ 0x9
   556  0079                     	ds	1
   557  007A                     utoa@base:	
   558                           
   559                           ; 2 bytes @ 0xA
   560  007A                     	ds	1
   561  007B                     ??___awtoft:	
   562                           
   563                           ; 1 bytes @ 0xB
   564  007B                     	ds	1
   565  007C                     ??_utoa:	
   566                           
   567                           ; 1 bytes @ 0xC
   568  007C                     	ds	1
   569  007D                     ??_itoa:	
   570  007D                     ___awtoft@sign:	
   571                           ; 1 bytes @ 0xD
   572                           
   573                           
   574                           ; 1 bytes @ 0xD
   575  007D                     	ds	1
   576                           
   577                           	psect	cstackBANK0
   578  0020                     __pcstackBANK0:	
   579  0020                     ?___ftdiv:	
   580  0020                     utoa@v:	
   581                           ; 3 bytes @ 0x0
   582                           
   583  0020                     ___ftdiv@f2:	
   584                           ; 2 bytes @ 0x0
   585                           
   586                           
   587                           ; 3 bytes @ 0x0
   588  0020                     	ds	2
   589  0022                     utoa@c:	
   590                           
   591                           ; 1 bytes @ 0x2
   592  0022                     	ds	1
   593  0023                     utoa@buf:	
   594  0023                     ___ftdiv@f1:	
   595                           ; 1 bytes @ 0x3
   596                           
   597                           
   598                           ; 3 bytes @ 0x3
   599  0023                     	ds	1
   600  0024                     ?_itoa:	
   601  0024                     itoa@val:	
   602                           ; 1 bytes @ 0x4
   603                           
   604                           
   605                           ; 2 bytes @ 0x4
   606  0024                     	ds	2
   607  0026                     ??___ftdiv:	
   608  0026                     itoa@base:	
   609                           ; 1 bytes @ 0x6
   610                           
   611                           
   612                           ; 2 bytes @ 0x6
   613  0026                     	ds	2
   614  0028                     itoa@cp:	
   615                           
   616                           ; 1 bytes @ 0x8
   617  0028                     	ds	1
   618  0029                     itoa@buf:	
   619                           
   620                           ; 1 bytes @ 0x9
   621  0029                     	ds	1
   622  002A                     ___ftdiv@cntr:	
   623                           
   624                           ; 1 bytes @ 0xA
   625  002A                     	ds	1
   626  002B                     ___ftdiv@f3:	
   627                           
   628                           ; 3 bytes @ 0xB
   629  002B                     	ds	3
   630  002E                     ___ftdiv@exp:	
   631                           
   632                           ; 1 bytes @ 0xE
   633  002E                     	ds	1
   634  002F                     ___ftdiv@sign:	
   635                           
   636                           ; 1 bytes @ 0xF
   637  002F                     	ds	1
   638  0030                     ?___ftmul:	
   639  0030                     ___ftmul@f1:	
   640                           ; 3 bytes @ 0x10
   641                           
   642                           
   643                           ; 3 bytes @ 0x10
   644  0030                     	ds	3
   645  0033                     ___ftmul@f2:	
   646                           
   647                           ; 3 bytes @ 0x13
   648  0033                     	ds	3
   649  0036                     ??___ftmul:	
   650                           
   651                           ; 1 bytes @ 0x16
   652  0036                     	ds	4
   653  003A                     ___ftmul@exp:	
   654                           
   655                           ; 1 bytes @ 0x1A
   656  003A                     	ds	1
   657  003B                     ___ftmul@f3_as_product:	
   658                           
   659                           ; 3 bytes @ 0x1B
   660  003B                     	ds	3
   661  003E                     ___ftmul@cntr:	
   662                           
   663                           ; 1 bytes @ 0x1E
   664  003E                     	ds	1
   665  003F                     ___ftmul@sign:	
   666                           
   667                           ; 1 bytes @ 0x1F
   668  003F                     	ds	1
   669  0040                     ?___fttol:	
   670  0040                     ___fttol@f1:	
   671                           ; 4 bytes @ 0x20
   672                           
   673                           
   674                           ; 3 bytes @ 0x20
   675  0040                     	ds	4
   676  0044                     ??___fttol:	
   677                           
   678                           ; 1 bytes @ 0x24
   679  0044                     	ds	4
   680  0048                     ___fttol@sign1:	
   681                           
   682                           ; 1 bytes @ 0x28
   683  0048                     	ds	1
   684  0049                     ___fttol@lval:	
   685                           
   686                           ; 4 bytes @ 0x29
   687  0049                     	ds	4
   688  004D                     ___fttol@exp1:	
   689                           
   690                           ; 1 bytes @ 0x2D
   691  004D                     	ds	1
   692  004E                     ?_echo:	
   693  004E                     echo@pin:	
   694                           ; 2 bytes @ 0x2E
   695                           
   696                           
   697                           ; 2 bytes @ 0x2E
   698  004E                     	ds	2
   699  0050                     ??_echo:	
   700                           
   701                           ; 1 bytes @ 0x30
   702  0050                     	ds	1
   703  0051                     echo@port:	
   704                           
   705                           ; 1 bytes @ 0x31
   706  0051                     	ds	1
   707  0052                     echo@sfrdev:	
   708                           
   709                           ; 2 bytes @ 0x32
   710  0052                     	ds	2
   711  0054                     echo@a:	
   712                           
   713                           ; 2 bytes @ 0x34
   714  0054                     	ds	2
   715  0056                     ?_main:	
   716  0056                     main@argc:	
   717                           ; 2 bytes @ 0x36
   718                           
   719                           
   720                           ; 2 bytes @ 0x36
   721  0056                     	ds	2
   722  0058                     main@argv:	
   723                           
   724                           ; 2 bytes @ 0x38
   725  0058                     	ds	2
   726  005A                     ??_main:	
   727                           
   728                           ; 1 bytes @ 0x3A
   729  005A                     	ds	2
   730                           
   731                           	psect	maintext
   732  0628                     __pmaintext:	
   733 ;;
   734 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   735 ;;
   736 ;; *************** function _main *****************
   737 ;; Defined at:
   738 ;;		line 94 in file "FinalProject3.c"
   739 ;; Parameters:    Size  Location     Type
   740 ;;  argc            2   54[BANK0 ] int 
   741 ;;  argv            2   56[BANK0 ] PTR PTR unsigned char 
   742 ;; Auto vars:     Size  Location     Type
   743 ;;  bufB            8   12[BANK1 ] unsigned char [8]
   744 ;;  bufA            8    4[BANK1 ] unsigned char [8]
   745 ;;  ping_val2       2   28[BANK1 ] int 
   746 ;;  ping_val1       2   26[BANK1 ] int 
   747 ;;  toggle          2   24[BANK1 ] int 
   748 ;;  initialize      2   22[BANK1 ] int 
   749 ;;  Delay_counte    2   20[BANK1 ] int 
   750 ;;  LCD_count       2    2[BANK1 ] int 
   751 ;;  delay           2    0[BANK1 ] int 
   752 ;; Return value:  Size  Location     Type
   753 ;;                  2   54[BANK0 ] int 
   754 ;; Registers used:
   755 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   756 ;; Tracked objects:
   757 ;;		On entry : B1F/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   761 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   762 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0
   763 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   764 ;;      Totals:         0       6      30       0       0       0       0       0       0       0       0       0       
      +0       0
   765 ;;Total ram usage:       36 bytes
   766 ;; Hardware stack levels required when called:    3
   767 ;; This function calls:
   768 ;;		_Lcd_Clear
   769 ;;		_Lcd_Init
   770 ;;		_Lcd_Set_Cursor
   771 ;;		_Lcd_Write_String
   772 ;;		_echo
   773 ;;		_itoa
   774 ;;		_pinConfig
   775 ;; This function is called by:
   776 ;;		Startup code after reset
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           
   781                           ;psect for function _main
   782  0628                     _main:	
   783                           
   784                           ;FinalProject3.c: 96: pinConfig();
   785                           
   786                           ;incstack = 0
   787                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   788  0628  3182  220F  3186   	fcall	_pinConfig
   789                           
   790                           ;FinalProject3.c: 97: _delay((unsigned long)((30)*(8000000/4000.0)));
   791  062B  304E               	movlw	78
   792  062C  0020               	movlb	0	; select bank0
   793  062D  00DA               	movwf	??_main
   794  062E  30EB               	movlw	235
   795  062F                     u1797:	
   796  062F  0B89               	decfsz	9,f
   797  0630  2E2F               	goto	u1797
   798  0631  0BDA               	decfsz	??_main,f
   799  0632  2E2F               	goto	u1797
   800                           
   801                           ;FinalProject3.c: 100: OSCCON = 0X6A;
   802  0633  306A               	movlw	106
   803  0634  0021               	movlb	1	; select bank1
   804  0635  0099               	movwf	25	;volatile
   805                           
   806                           ;FinalProject3.c: 101: ANSELC=0x20;
   807  0636  3020               	movlw	32
   808  0637  0023               	movlb	3	; select bank3
   809  0638  008E               	movwf	14	;volatile
   810                           
   811                           ;FinalProject3.c: 103: RA5 ^= 1;
   812  0639  0020               	movlb	0	; select bank0
   813  063A  3020               	movlw	32
   814  063B  068C               	xorwf	12,f
   815                           
   816                           ;FinalProject3.c: 104: RC6 = 0;
   817  063C  130E               	bcf	14,6	;volatile
   818                           
   819                           ;FinalProject3.c: 108: int delay = 0;
   820  063D  0021               	movlb	1	; select bank1
   821  063E  01A0               	clrf	main@delay^(0+128)
   822  063F  01A1               	clrf	(main@delay+1)^(0+128)
   823                           
   824                           ;FinalProject3.c: 109: int initialize = 0;
   825  0640  01B6               	clrf	main@initialize^(0+128)
   826  0641  01B7               	clrf	(main@initialize+1)^(0+128)
   827                           
   828                           ;FinalProject3.c: 110: int Delay_counter = 0;
   829  0642  01B4               	clrf	main@Delay_counter^(0+128)
   830  0643  01B5               	clrf	(main@Delay_counter+1)^(0+128)
   831                           
   832                           ;FinalProject3.c: 111: int toggle = 0;
   833  0644  01B8               	clrf	main@toggle^(0+128)
   834  0645  01B9               	clrf	(main@toggle+1)^(0+128)
   835                           
   836                           ;FinalProject3.c: 114: int LCD_count = 10000;
   837  0646  3010               	movlw	16
   838  0647  00A2               	movwf	main@LCD_count^(0+128)
   839  0648  3027               	movlw	39
   840  0649  00A3               	movwf	(main@LCD_count^(0+128)+1)
   841                           
   842                           ;FinalProject3.c: 116: Lcd_Init();
   843  064A  3182  22B1  3186   	fcall	_Lcd_Init
   844                           
   845                           ;FinalProject3.c: 117: Lcd_Clear();
   846  064D  3181  2121  3186   	fcall	_Lcd_Clear
   847                           
   848                           ;FinalProject3.c: 118: Lcd_Set_Cursor(1,1);
   849  0650  01F3               	clrf	Lcd_Set_Cursor@b
   850  0651  0AF3               	incf	Lcd_Set_Cursor@b,f
   851  0652  3001               	movlw	1
   852  0653  3182  2271  3186   	fcall	_Lcd_Set_Cursor
   853                           
   854                           ;FinalProject3.c: 119: Lcd_Write_String("WELCOME TO UTSA");
   855  0656  3000               	movlw	low (STR_1| (0+32768))
   856  0657  00F5               	movwf	Lcd_Write_String@a
   857  0658  3088               	movlw	high (STR_1| (0+32768))
   858  0659  00F6               	movwf	Lcd_Write_String@a+1
   859  065A  3181  2157  3186   	fcall	_Lcd_Write_String
   860                           
   861                           ;FinalProject3.c: 120: _delay((unsigned long)((1000)*(8000000/4000.0)));
   862  065D  300B               	movlw	11
   863  065E  0020               	movlb	0	; select bank0
   864  065F  00DB               	movwf	??_main+1
   865  0660  3026               	movlw	38
   866  0661  00DA               	movwf	??_main
   867  0662  305D               	movlw	93
   868  0663                     u1807:	
   869  0663  0B89               	decfsz	9,f
   870  0664  2E63               	goto	u1807
   871  0665  0BDA               	decfsz	??_main,f
   872  0666  2E63               	goto	u1807
   873  0667  0BDB               	decfsz	??_main+1,f
   874  0668  2E63               	goto	u1807
   875  0669  3200               	nop2
   876                           
   877                           ;FinalProject3.c: 158: }
   878  066A  2F0D               	goto	l1636
   879  066B                     l1668:	
   880                           
   881                           ;FinalProject3.c: 161: else if(ping_val1 > 100 && ping_val2 > 100)
   882  066B  0021               	movlb	1	; select bank1
   883  066C  083B               	movf	(main@ping_val1+1)^(0+128),w
   884  066D  3A80               	xorlw	128
   885  066E  0020               	movlb	0	; select bank0
   886  066F  00DA               	movwf	??_main
   887  0670  3080               	movlw	128
   888  0671  025A               	subwf	??_main,w
   889  0672  1D03               	skipz
   890  0673  2E77               	goto	u1685
   891  0674  3065               	movlw	101
   892  0675  0021               	movlb	1	; select bank1
   893  0676  023A               	subwf	main@ping_val1^(0+128),w
   894  0677                     u1685:	
   895  0677  1C03               	skipc
   896  0678  2ECC               	goto	l108
   897  0679  0021               	movlb	1	; select bank1
   898  067A  083D               	movf	(main@ping_val2+1)^(0+128),w
   899  067B  3A80               	xorlw	128
   900  067C  0020               	movlb	0	; select bank0
   901  067D  00DA               	movwf	??_main
   902  067E  3080               	movlw	128
   903  067F  025A               	subwf	??_main,w
   904  0680  1D03               	skipz
   905  0681  2E85               	goto	u1695
   906  0682  3065               	movlw	101
   907  0683  0021               	movlb	1	; select bank1
   908  0684  023C               	subwf	main@ping_val2^(0+128),w
   909  0685                     u1695:	
   910  0685  1C03               	skipc
   911  0686  2ECC               	goto	l108
   912                           
   913                           ;FinalProject3.c: 162: {
   914                           ;FinalProject3.c: 163: Delay_counter = 0;
   915  0687  0021               	movlb	1	; select bank1
   916  0688  01B4               	clrf	main@Delay_counter^(0+128)
   917  0689  01B5               	clrf	(main@Delay_counter+1)^(0+128)
   918                           
   919                           ;FinalProject3.c: 164: initialize = 0;
   920  068A  01B6               	clrf	main@initialize^(0+128)
   921  068B  01B7               	clrf	(main@initialize+1)^(0+128)
   922                           
   923                           ;FinalProject3.c: 165: Lcd_Clear();
   924  068C  3181  2121  3186   	fcall	_Lcd_Clear
   925                           
   926                           ;FinalProject3.c: 166: Lcd_Set_Cursor(1,1);
   927  068F  01F3               	clrf	Lcd_Set_Cursor@b
   928  0690  0AF3               	incf	Lcd_Set_Cursor@b,f
   929  0691  3001               	movlw	1
   930  0692  3182  2271  3186   	fcall	_Lcd_Set_Cursor
   931                           
   932                           ;FinalProject3.c: 167: Lcd_Write_String("Out of Range: ");
   933  0695  3010               	movlw	low (STR_5| (0+32768))
   934  0696  00F5               	movwf	Lcd_Write_String@a
   935  0697  3088               	movlw	high (STR_5| (0+32768))
   936  0698  00F6               	movwf	Lcd_Write_String@a+1
   937  0699  3181  2157  3186   	fcall	_Lcd_Write_String
   938                           
   939                           ;FinalProject3.c: 168: Lcd_Set_Cursor(2,1);
   940  069C  01F3               	clrf	Lcd_Set_Cursor@b
   941  069D  0AF3               	incf	Lcd_Set_Cursor@b,f
   942  069E  3002               	movlw	2
   943  069F  3182  2271  3186   	fcall	_Lcd_Set_Cursor
   944                           
   945                           ;FinalProject3.c: 169: Lcd_Write_String(bufA);
   946  06A2  30A4               	movlw	low main@bufA
   947  06A3  00F5               	movwf	Lcd_Write_String@a
   948  06A4  3000               	movlw	high main@bufA
   949  06A5  00F6               	movwf	Lcd_Write_String@a+1
   950  06A6  3181  2157  3186   	fcall	_Lcd_Write_String
   951                           
   952                           ;FinalProject3.c: 170: Lcd_Write_String(" cm, ");
   953  06A9  3035               	movlw	low (STR_3| (0+32768))
   954  06AA  00F5               	movwf	Lcd_Write_String@a
   955  06AB  3088               	movlw	high (STR_3| (0+32768))
   956  06AC  00F6               	movwf	Lcd_Write_String@a+1
   957  06AD  3181  2157  3186   	fcall	_Lcd_Write_String
   958                           
   959                           ;FinalProject3.c: 171: Lcd_Write_String(bufB);
   960  06B0  30AC               	movlw	low main@bufB
   961  06B1  00F5               	movwf	Lcd_Write_String@a
   962  06B2  3000               	movlw	high main@bufB
   963  06B3  00F6               	movwf	Lcd_Write_String@a+1
   964  06B4  3181  2157  3186   	fcall	_Lcd_Write_String
   965                           
   966                           ;FinalProject3.c: 172: Lcd_Write_String(" cm");
   967  06B7  303B               	movlw	low (STR_4| (0+32768))
   968  06B8  00F5               	movwf	Lcd_Write_String@a
   969  06B9  3088               	movlw	high (STR_4| (0+32768))
   970  06BA  00F6               	movwf	Lcd_Write_String@a+1
   971  06BB  3181  2157  3186   	fcall	_Lcd_Write_String
   972                           
   973                           ;FinalProject3.c: 173: _delay((unsigned long)((100)*(8000000/4000.0)));
   974  06BE  3002               	movlw	2
   975  06BF  0020               	movlb	0	; select bank0
   976  06C0  00DB               	movwf	??_main+1
   977  06C1  3004               	movlw	4
   978  06C2  00DA               	movwf	??_main
   979  06C3  30BA               	movlw	186
   980  06C4                     u1827:	
   981  06C4  0B89               	decfsz	9,f
   982  06C5  2EC4               	goto	u1827
   983  06C6  0BDA               	decfsz	??_main,f
   984  06C7  2EC4               	goto	u1827
   985  06C8  0BDB               	decfsz	??_main+1,f
   986  06C9  2EC4               	goto	u1827
   987  06CA  0000               	nop
   988                           
   989                           ;FinalProject3.c: 175: }
   990  06CB  2FBD               	goto	l1700
   991  06CC                     l108:	
   992                           
   993                           ;FinalProject3.c: 177: else
   994                           ;FinalProject3.c: 178: {
   995                           ;FinalProject3.c: 179: RA5 = 0;
   996  06CC  0020               	movlb	0	; select bank0
   997  06CD  128C               	bcf	12,5	;volatile
   998                           
   999                           ;FinalProject3.c: 180: Lcd_Clear();
  1000  06CE  3181  2121  3186   	fcall	_Lcd_Clear
  1001                           
  1002                           ;FinalProject3.c: 181: Lcd_Set_Cursor(1,1);
  1003  06D1  01F3               	clrf	Lcd_Set_Cursor@b
  1004  06D2  0AF3               	incf	Lcd_Set_Cursor@b,f
  1005  06D3  3001               	movlw	1
  1006  06D4  3182  2271  3186   	fcall	_Lcd_Set_Cursor
  1007                           
  1008                           ;FinalProject3.c: 182: Lcd_Write_String("Distance: ");
  1009  06D7  301F               	movlw	low (STR_8| (0+32768))
  1010  06D8  00F5               	movwf	Lcd_Write_String@a
  1011  06D9  3088               	movlw	high (STR_8| (0+32768))
  1012  06DA  00F6               	movwf	Lcd_Write_String@a+1
  1013  06DB  3181  2157  3186   	fcall	_Lcd_Write_String
  1014                           
  1015                           ;FinalProject3.c: 183: Lcd_Set_Cursor(2,1);
  1016  06DE  01F3               	clrf	Lcd_Set_Cursor@b
  1017  06DF  0AF3               	incf	Lcd_Set_Cursor@b,f
  1018  06E0  3002               	movlw	2
  1019  06E1  3182  2271  3186   	fcall	_Lcd_Set_Cursor
  1020                           
  1021                           ;FinalProject3.c: 184: Lcd_Write_String(bufA);
  1022  06E4  30A4               	movlw	low main@bufA
  1023  06E5  00F5               	movwf	Lcd_Write_String@a
  1024  06E6  3000               	movlw	high main@bufA
  1025  06E7  00F6               	movwf	Lcd_Write_String@a+1
  1026  06E8  3181  2157  3186   	fcall	_Lcd_Write_String
  1027                           
  1028                           ;FinalProject3.c: 185: Lcd_Write_String(" cm, ");
  1029  06EB  3035               	movlw	low (STR_3| (0+32768))
  1030  06EC  00F5               	movwf	Lcd_Write_String@a
  1031  06ED  3088               	movlw	high (STR_3| (0+32768))
  1032  06EE  00F6               	movwf	Lcd_Write_String@a+1
  1033  06EF  3181  2157  3186   	fcall	_Lcd_Write_String
  1034                           
  1035                           ;FinalProject3.c: 186: Lcd_Write_String(bufB);
  1036  06F2  30AC               	movlw	low main@bufB
  1037  06F3  00F5               	movwf	Lcd_Write_String@a
  1038  06F4  3000               	movlw	high main@bufB
  1039  06F5  00F6               	movwf	Lcd_Write_String@a+1
  1040  06F6  3181  2157  3186   	fcall	_Lcd_Write_String
  1041                           
  1042                           ;FinalProject3.c: 187: Lcd_Write_String(" cm");
  1043  06F9  303B               	movlw	low (STR_4| (0+32768))
  1044  06FA  00F5               	movwf	Lcd_Write_String@a
  1045  06FB  3088               	movlw	high (STR_4| (0+32768))
  1046  06FC  00F6               	movwf	Lcd_Write_String@a+1
  1047  06FD  3181  2157  3186   	fcall	_Lcd_Write_String
  1048                           
  1049                           ;FinalProject3.c: 188: _delay((unsigned long)((100)*(8000000/4000.0)));
  1050  0700  3002               	movlw	2
  1051  0701  0020               	movlb	0	; select bank0
  1052  0702  00DB               	movwf	??_main+1
  1053  0703  3004               	movlw	4
  1054  0704  00DA               	movwf	??_main
  1055  0705  30BA               	movlw	186
  1056  0706                     u1837:	
  1057  0706  0B89               	decfsz	9,f
  1058  0707  2F06               	goto	u1837
  1059  0708  0BDA               	decfsz	??_main,f
  1060  0709  2F06               	goto	u1837
  1061  070A  0BDB               	decfsz	??_main+1,f
  1062  070B  2F06               	goto	u1837
  1063  070C  0000               	nop
  1064  070D                     l1636:	
  1065                           ;FinalProject3.c: 122: while(1)
  1066                           
  1067                           ;FinalProject3.c: 189: continue;
  1068                           
  1069                           
  1070                           ;FinalProject3.c: 123: {
  1071                           ;FinalProject3.c: 124: RA5 = 1;
  1072  070D  0020               	movlb	0	; select bank0
  1073  070E  168C               	bsf	12,5	;volatile
  1074                           
  1075                           ;FinalProject3.c: 125: RC6=0;
  1076  070F  130E               	bcf	14,6	;volatile
  1077                           
  1078                           ;FinalProject3.c: 126: int ping_val1 = echo('A',1);
  1079  0710  3001               	movlw	1
  1080  0711  00CE               	movwf	echo@pin
  1081  0712  3000               	movlw	0
  1082  0713  00CF               	movwf	echo@pin+1
  1083  0714  3041               	movlw	65
  1084  0715  3184  2440  3186   	fcall	_echo
  1085  0718  0020               	movlb	0	; select bank0
  1086  0719  084F               	movf	?_echo+1,w
  1087  071A  0021               	movlb	1	; select bank1
  1088  071B  00BB               	movwf	(main@ping_val1+1)^(0+128)
  1089  071C  0020               	movlb	0	; select bank0
  1090  071D  084E               	movf	?_echo,w
  1091  071E  0021               	movlb	1	; select bank1
  1092  071F  00BA               	movwf	main@ping_val1^(0+128)
  1093                           
  1094                           ;FinalProject3.c: 127: int ping_val2 = echo('A',2);
  1095  0720  3002               	movlw	2
  1096  0721  0020               	movlb	0	; select bank0
  1097  0722  00CE               	movwf	echo@pin
  1098  0723  3000               	movlw	0
  1099  0724  00CF               	movwf	echo@pin+1
  1100  0725  3041               	movlw	65
  1101  0726  3184  2440  3186   	fcall	_echo
  1102  0729  0020               	movlb	0	; select bank0
  1103  072A  084F               	movf	?_echo+1,w
  1104  072B  0021               	movlb	1	; select bank1
  1105  072C  00BD               	movwf	(main@ping_val2+1)^(0+128)
  1106  072D  0020               	movlb	0	; select bank0
  1107  072E  084E               	movf	?_echo,w
  1108  072F  0021               	movlb	1	; select bank1
  1109  0730  00BC               	movwf	main@ping_val2^(0+128)
  1110                           
  1111                           ;FinalProject3.c: 129: char bufA[8];
  1112                           ;FinalProject3.c: 130: itoa(bufA,ping_val1,10);
  1113  0731  083B               	movf	(main@ping_val1+1)^(0+128),w
  1114  0732  0020               	movlb	0	; select bank0
  1115  0733  00A5               	movwf	itoa@val+1
  1116  0734  0021               	movlb	1	; select bank1
  1117  0735  083A               	movf	main@ping_val1^(0+128),w
  1118  0736  0020               	movlb	0	; select bank0
  1119  0737  00A4               	movwf	itoa@val
  1120  0738  300A               	movlw	10
  1121  0739  00A6               	movwf	itoa@base
  1122  073A  3000               	movlw	0
  1123  073B  00A7               	movwf	itoa@base+1
  1124  073C  30A4               	movlw	(low (main@bufA| 0))& (0+255)
  1125  073D  3181  2191  3186   	fcall	_itoa
  1126                           
  1127                           ;FinalProject3.c: 131: char bufB[8];
  1128                           ;FinalProject3.c: 132: itoa(bufB,ping_val2,10);
  1129  0740  0021               	movlb	1	; select bank1
  1130  0741  083D               	movf	(main@ping_val2+1)^(0+128),w
  1131  0742  0020               	movlb	0	; select bank0
  1132  0743  00A5               	movwf	itoa@val+1
  1133  0744  0021               	movlb	1	; select bank1
  1134  0745  083C               	movf	main@ping_val2^(0+128),w
  1135  0746  0020               	movlb	0	; select bank0
  1136  0747  00A4               	movwf	itoa@val
  1137  0748  300A               	movlw	10
  1138  0749  00A6               	movwf	itoa@base
  1139  074A  3000               	movlw	0
  1140  074B  00A7               	movwf	itoa@base+1
  1141  074C  30AC               	movlw	(low (main@bufB| 0))& (0+255)
  1142  074D  3181  2191  3186   	fcall	_itoa
  1143                           
  1144                           ;FinalProject3.c: 137: if(ping_val1 < 100 && ping_val2 < 100)
  1145  0750  0021               	movlb	1	; select bank1
  1146  0751  083B               	movf	(main@ping_val1+1)^(0+128),w
  1147  0752  3A80               	xorlw	128
  1148  0753  0020               	movlb	0	; select bank0
  1149  0754  00DA               	movwf	??_main
  1150  0755  3080               	movlw	128
  1151  0756  025A               	subwf	??_main,w
  1152  0757  1D03               	skipz
  1153  0758  2F5C               	goto	u1655
  1154  0759  3064               	movlw	100
  1155  075A  0021               	movlb	1	; select bank1
  1156  075B  023A               	subwf	main@ping_val1^(0+128),w
  1157  075C                     u1655:	
  1158  075C  1803               	skipnc
  1159  075D  2E6B               	goto	l1668
  1160  075E  0021               	movlb	1	; select bank1
  1161  075F  083D               	movf	(main@ping_val2+1)^(0+128),w
  1162  0760  3A80               	xorlw	128
  1163  0761  0020               	movlb	0	; select bank0
  1164  0762  00DA               	movwf	??_main
  1165  0763  3080               	movlw	128
  1166  0764  025A               	subwf	??_main,w
  1167  0765  1D03               	skipz
  1168  0766  2F6A               	goto	u1665
  1169  0767  3064               	movlw	100
  1170  0768  0021               	movlb	1	; select bank1
  1171  0769  023C               	subwf	main@ping_val2^(0+128),w
  1172  076A                     u1665:	
  1173  076A  1803               	skipnc
  1174  076B  2E6B               	goto	l1668
  1175                           
  1176                           ;FinalProject3.c: 138: {
  1177                           ;FinalProject3.c: 139: if (initialize == 0)
  1178  076C  0021               	movlb	1	; select bank1
  1179  076D  0836               	movf	main@initialize^(0+128),w
  1180  076E  0437               	iorwf	(main@initialize+1)^(0+128),w
  1181  076F  1D03               	btfss	3,2
  1182  0770  2FB9               	goto	l1666
  1183                           
  1184                           ;FinalProject3.c: 140: {
  1185                           ;FinalProject3.c: 142: Lcd_Clear();
  1186  0771  3181  2121  3186   	fcall	_Lcd_Clear
  1187                           
  1188                           ;FinalProject3.c: 143: Lcd_Set_Cursor(1,1);
  1189  0774  01F3               	clrf	Lcd_Set_Cursor@b
  1190  0775  0AF3               	incf	Lcd_Set_Cursor@b,f
  1191  0776  3001               	movlw	1
  1192  0777  3182  2271  3186   	fcall	_Lcd_Set_Cursor
  1193                           
  1194                           ;FinalProject3.c: 144: Lcd_Write_String("In range: ");
  1195  077A  302A               	movlw	low (STR_2| (0+32768))
  1196  077B  00F5               	movwf	Lcd_Write_String@a
  1197  077C  3088               	movlw	high (STR_2| (0+32768))
  1198  077D  00F6               	movwf	Lcd_Write_String@a+1
  1199  077E  3181  2157  3186   	fcall	_Lcd_Write_String
  1200                           
  1201                           ;FinalProject3.c: 145: Lcd_Set_Cursor(2,1);
  1202  0781  01F3               	clrf	Lcd_Set_Cursor@b
  1203  0782  0AF3               	incf	Lcd_Set_Cursor@b,f
  1204  0783  3002               	movlw	2
  1205  0784  3182  2271  3186   	fcall	_Lcd_Set_Cursor
  1206                           
  1207                           ;FinalProject3.c: 146: Lcd_Write_String(bufA);
  1208  0787  30A4               	movlw	low main@bufA
  1209  0788  00F5               	movwf	Lcd_Write_String@a
  1210  0789  3000               	movlw	high main@bufA
  1211  078A  00F6               	movwf	Lcd_Write_String@a+1
  1212  078B  3181  2157  3186   	fcall	_Lcd_Write_String
  1213                           
  1214                           ;FinalProject3.c: 147: Lcd_Write_String(" cm, ");
  1215  078E  3035               	movlw	low (STR_3| (0+32768))
  1216  078F  00F5               	movwf	Lcd_Write_String@a
  1217  0790  3088               	movlw	high (STR_3| (0+32768))
  1218  0791  00F6               	movwf	Lcd_Write_String@a+1
  1219  0792  3181  2157  3186   	fcall	_Lcd_Write_String
  1220                           
  1221                           ;FinalProject3.c: 148: Lcd_Write_String(bufB);
  1222  0795  30AC               	movlw	low main@bufB
  1223  0796  00F5               	movwf	Lcd_Write_String@a
  1224  0797  3000               	movlw	high main@bufB
  1225  0798  00F6               	movwf	Lcd_Write_String@a+1
  1226  0799  3181  2157  3186   	fcall	_Lcd_Write_String
  1227                           
  1228                           ;FinalProject3.c: 149: Lcd_Write_String(" cm");
  1229  079C  303B               	movlw	low (STR_4| (0+32768))
  1230  079D  00F5               	movwf	Lcd_Write_String@a
  1231  079E  3088               	movlw	high (STR_4| (0+32768))
  1232  079F  00F6               	movwf	Lcd_Write_String@a+1
  1233  07A0  3181  2157  3186   	fcall	_Lcd_Write_String
  1234                           
  1235                           ;FinalProject3.c: 150: _delay((unsigned long)((100)*(8000000/4000.0)));
  1236  07A3  3002               	movlw	2
  1237  07A4  0020               	movlb	0	; select bank0
  1238  07A5  00DB               	movwf	??_main+1
  1239  07A6  3004               	movlw	4
  1240  07A7  00DA               	movwf	??_main
  1241  07A8  30BA               	movlw	186
  1242  07A9                     u1817:	
  1243  07A9  0B89               	decfsz	9,f
  1244  07AA  2FA9               	goto	u1817
  1245  07AB  0BDA               	decfsz	??_main,f
  1246  07AC  2FA9               	goto	u1817
  1247  07AD  0BDB               	decfsz	??_main+1,f
  1248  07AE  2FA9               	goto	u1817
  1249  07AF  0000               	nop
  1250                           
  1251                           ;FinalProject3.c: 152: LCD_count = 10000;
  1252  07B0  3010               	movlw	16
  1253  07B1  0021               	movlb	1	; select bank1
  1254  07B2  00A2               	movwf	main@LCD_count^(0+128)
  1255  07B3  3027               	movlw	39
  1256  07B4  00A3               	movwf	(main@LCD_count^(0+128)+1)
  1257                           
  1258                           ;FinalProject3.c: 153: initialize = 1;
  1259  07B5  3001               	movlw	1
  1260  07B6  00B6               	movwf	main@initialize^(0+128)
  1261  07B7  3000               	movlw	0
  1262  07B8  00B7               	movwf	(main@initialize^(0+128)+1)
  1263  07B9                     l1666:	
  1264                           
  1265                           ;FinalProject3.c: 155: }
  1266                           ;FinalProject3.c: 157: Delay_counter++;
  1267  07B9  3001               	movlw	1
  1268  07BA  07B4               	addwf	main@Delay_counter^(0+128),f
  1269  07BB  3000               	movlw	0
  1270  07BC  3DB5               	addwfc	(main@Delay_counter+1)^(0+128),f
  1271  07BD                     l1700:	
  1272                           
  1273                           ;FinalProject3.c: 190: }
  1274                           ;FinalProject3.c: 192: if(toggle == 0)
  1275  07BD  0021               	movlb	1	; select bank1
  1276  07BE  0838               	movf	main@toggle^(0+128),w
  1277  07BF  0439               	iorwf	(main@toggle+1)^(0+128),w
  1278  07C0  1D03               	btfss	3,2
  1279  07C1  2FD4               	goto	l1704
  1280                           
  1281                           ;FinalProject3.c: 193: {
  1282                           ;FinalProject3.c: 194: ping_val1 = echo('A',1);
  1283  07C2  3001               	movlw	1
  1284  07C3  0020               	movlb	0	; select bank0
  1285  07C4  00CE               	movwf	echo@pin
  1286  07C5  3000               	movlw	0
  1287  07C6  00CF               	movwf	echo@pin+1
  1288  07C7  3041               	movlw	65
  1289  07C8  3184  2440  3186   	fcall	_echo
  1290  07CB  0020               	movlb	0	; select bank0
  1291  07CC  084F               	movf	?_echo+1,w
  1292  07CD  0021               	movlb	1	; select bank1
  1293  07CE  00BB               	movwf	(main@ping_val1+1)^(0+128)
  1294  07CF  0020               	movlb	0	; select bank0
  1295  07D0  084E               	movf	?_echo,w
  1296  07D1  0021               	movlb	1	; select bank1
  1297  07D2  00BA               	movwf	main@ping_val1^(0+128)
  1298                           
  1299                           ;FinalProject3.c: 195: }
  1300  07D3  2FE5               	goto	l1706
  1301  07D4                     l1704:	
  1302                           
  1303                           ;FinalProject3.c: 197: else
  1304                           ;FinalProject3.c: 198: {
  1305                           ;FinalProject3.c: 199: ping_val2 = echo('A',2);
  1306  07D4  3002               	movlw	2
  1307  07D5  0020               	movlb	0	; select bank0
  1308  07D6  00CE               	movwf	echo@pin
  1309  07D7  3000               	movlw	0
  1310  07D8  00CF               	movwf	echo@pin+1
  1311  07D9  3041               	movlw	65
  1312  07DA  3184  2440  3186   	fcall	_echo
  1313  07DD  0020               	movlb	0	; select bank0
  1314  07DE  084F               	movf	?_echo+1,w
  1315  07DF  0021               	movlb	1	; select bank1
  1316  07E0  00BD               	movwf	(main@ping_val2+1)^(0+128)
  1317  07E1  0020               	movlb	0	; select bank0
  1318  07E2  084E               	movf	?_echo,w
  1319  07E3  0021               	movlb	1	; select bank1
  1320  07E4  00BC               	movwf	main@ping_val2^(0+128)
  1321  07E5                     l1706:	
  1322                           
  1323                           ;FinalProject3.c: 200: }
  1324                           ;FinalProject3.c: 202: toggle = ~toggle;
  1325  07E5  09B8               	comf	main@toggle^(0+128),f
  1326  07E6  09B9               	comf	(main@toggle+1)^(0+128),f
  1327                           
  1328                           ;FinalProject3.c: 204: if(Delay_counter >= 60)
  1329  07E7  0835               	movf	(main@Delay_counter+1)^(0+128),w
  1330  07E8  3A80               	xorlw	128
  1331  07E9  0020               	movlb	0	; select bank0
  1332  07EA  00DA               	movwf	??_main
  1333  07EB  3080               	movlw	128
  1334  07EC  025A               	subwf	??_main,w
  1335  07ED  1D03               	skipz
  1336  07EE  2FF2               	goto	u1715
  1337  07EF  303C               	movlw	60
  1338  07F0  0021               	movlb	1	; select bank1
  1339  07F1  0234               	subwf	main@Delay_counter^(0+128),w
  1340  07F2                     u1715:	
  1341  07F2  1C03               	skipc
  1342  07F3  2FF7               	goto	l1712
  1343                           
  1344                           ;FinalProject3.c: 205: {
  1345                           ;FinalProject3.c: 208: initialize = 0;
  1346  07F4  0021               	movlb	1	; select bank1
  1347  07F5  01B6               	clrf	main@initialize^(0+128)
  1348  07F6  01B7               	clrf	(main@initialize+1)^(0+128)
  1349  07F7                     l1712:	
  1350                           
  1351                           ;FinalProject3.c: 209: }
  1352                           ;FinalProject3.c: 211: delay = 10;
  1353  07F7  300A               	movlw	10
  1354  07F8  0021               	movlb	1	; select bank1
  1355  07F9  00A0               	movwf	main@delay^(0+128)
  1356  07FA  3000               	movlw	0
  1357  07FB  00A1               	movwf	(main@delay^(0+128)+1)
  1358  07FC  2F0D               	goto	l1636
  1359  07FD                     __end_of_main:	
  1360                           ;FinalProject3.c: 213: }
  1361                           ;FinalProject3.c: 215: return 0;
  1362                           ;	Return value of _main is never used
  1363                           
  1364                           
  1365                           	psect	text1
  1366  020F                     __ptext1:	
  1367 ;; *************** function _pinConfig *****************
  1368 ;; Defined at:
  1369 ;;		line 300 in file "FinalProject3.c"
  1370 ;; Parameters:    Size  Location     Type
  1371 ;;		None
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;		None
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  1    wreg      void 
  1376 ;; Registers used:
  1377 ;;		wreg, status,2
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1387 ;;Total ram usage:        0 bytes
  1388 ;; Hardware stack levels used:    1
  1389 ;; This function calls:
  1390 ;;		Nothing
  1391 ;; This function is called by:
  1392 ;;		_main
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396                           
  1397                           ;psect for function _pinConfig
  1398  020F                     _pinConfig:	
  1399                           
  1400                           ;FinalProject3.c: 301: TRISA = ~(1<<0)&(1<<1)|(1<<2);
  1401                           
  1402                           ;incstack = 0
  1403                           ; Regs used in _pinConfig: [wreg+status,2]
  1404  020F  3006               	movlw	6
  1405  0210  0021               	movlb	1	; select bank1
  1406  0211  008C               	movwf	12	;volatile
  1407                           
  1408                           ;FinalProject3.c: 302: ANSELA = 0;
  1409  0212  0023               	movlb	3	; select bank3
  1410  0213  018C               	clrf	12	;volatile
  1411                           
  1412                           ;FinalProject3.c: 303: TRISB = (1<<4)|(1<<5)|(1<<6)|(1<<7);
  1413  0214  30F0               	movlw	240
  1414  0215  0021               	movlb	1	; select bank1
  1415  0216  008D               	movwf	13	;volatile
  1416                           
  1417                           ;FinalProject3.c: 304: ANSELB = 0;
  1418  0217  0023               	movlb	3	; select bank3
  1419  0218  018D               	clrf	13	;volatile
  1420                           
  1421                           ;FinalProject3.c: 305: TRISC = ~(1<<0)&~(1<<3)&~(1<<6)&~(1<<4)|(1<<5);
  1422  0219  30A6               	movlw	166
  1423  021A  0021               	movlb	1	; select bank1
  1424  021B  008E               	movwf	14	;volatile
  1425                           
  1426                           ;FinalProject3.c: 307: ANSELC = 0;
  1427  021C  0023               	movlb	3	; select bank3
  1428  021D  018E               	clrf	14	;volatile
  1429                           
  1430                           ;FinalProject3.c: 308: OSCCON = 0x6A;
  1431  021E  306A               	movlw	106
  1432  021F  0021               	movlb	1	; select bank1
  1433  0220  0099               	movwf	25	;volatile
  1434                           
  1435                           ;FinalProject3.c: 309: TXCKSEL = 1;
  1436  0221  0022               	movlb	2	; select bank2
  1437  0222  151D               	bsf	29,2	;volatile
  1438                           
  1439                           ;FinalProject3.c: 310: RXDTSEL = 1;
  1440  0223  179D               	bsf	29,7	;volatile
  1441                           
  1442                           ;FinalProject3.c: 312: ANSELC=0x20;
  1443  0224  3020               	movlw	32
  1444  0225  0023               	movlb	3	; select bank3
  1445  0226  008E               	movwf	14	;volatile
  1446                           
  1447                           ;FinalProject3.c: 314: TRISA = ~(1<<0)&(1<<1)|(1<<2);
  1448  0227  3006               	movlw	6
  1449  0228  0021               	movlb	1	; select bank1
  1450  0229  008C               	movwf	12	;volatile
  1451                           
  1452                           ;FinalProject3.c: 315: ANSELA = 0;
  1453  022A  0023               	movlb	3	; select bank3
  1454  022B  018C               	clrf	12	;volatile
  1455                           
  1456                           ;FinalProject3.c: 316: TRISB = TRISB & ~( (1<<4)|(1<<5)|(1<<6)|(1<<7) );
  1457  022C  0021               	movlb	1	; select bank1
  1458  022D  080D               	movf	13,w	;volatile
  1459  022E  390F               	andlw	15
  1460  022F  008D               	movwf	13	;volatile
  1461                           
  1462                           ;FinalProject3.c: 317: ANSELB = ANSELB & ~( (1<<4)|(1<<5)|(1<<6)|(1<<7) );
  1463  0230  0023               	movlb	3	; select bank3
  1464  0231  080D               	movf	13,w	;volatile
  1465  0232  390F               	andlw	15
  1466  0233  008D               	movwf	13	;volatile
  1467                           
  1468                           ;FinalProject3.c: 318: TRISC = TRISC & ~( (1<<0)|(1<<3)|(1<<6) );
  1469  0234  0021               	movlb	1	; select bank1
  1470  0235  080E               	movf	14,w	;volatile
  1471  0236  39B6               	andlw	182
  1472  0237  008E               	movwf	14	;volatile
  1473                           
  1474                           ;FinalProject3.c: 319: ANSELC = ANSELC & ~( (1<<0)|(1<<3)|(1<<6) );
  1475  0238  0023               	movlb	3	; select bank3
  1476  0239  080E               	movf	14,w	;volatile
  1477  023A  39B6               	andlw	182
  1478  023B  008E               	movwf	14	;volatile
  1479  023C  0008               	return
  1480  023D                     __end_of_pinConfig:	
  1481                           
  1482                           	psect	text2
  1483  0191                     __ptext2:	
  1484 ;; *************** function _itoa *****************
  1485 ;; Defined at:
  1486 ;;		line 4 in file "/Applications/microchip/xc8/v1.45/sources/common/itoa.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;  buf             1    wreg     PTR unsigned char 
  1489 ;;		 -> main@bufB(8), main@bufA(8), 
  1490 ;;  val             2    4[BANK0 ] int 
  1491 ;;  base            2    6[BANK0 ] int 
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;  buf             1    9[BANK0 ] PTR unsigned char 
  1494 ;;		 -> main@bufB(8), main@bufA(8), 
  1495 ;;  cp              1    8[BANK0 ] PTR unsigned char 
  1496 ;;		 -> main@bufB(8), main@bufA(8), 
  1497 ;; Return value:  Size  Location     Type
  1498 ;;                  1    wreg      PTR unsigned char 
  1499 ;; Registers used:
  1500 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1501 ;; Tracked objects:
  1502 ;;		On entry : 0/0
  1503 ;;		On exit  : 0/0
  1504 ;;		Unchanged: 0/0
  1505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1506 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1507 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1508 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1509 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1510 ;;Total ram usage:        7 bytes
  1511 ;; Hardware stack levels used:    1
  1512 ;; Hardware stack levels required when called:    2
  1513 ;; This function calls:
  1514 ;;		_utoa
  1515 ;; This function is called by:
  1516 ;;		_main
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520                           
  1521                           ;psect for function _itoa
  1522  0191                     _itoa:	
  1523                           
  1524                           ;incstack = 0
  1525                           ; Regs used in _itoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1526                           ;itoa@buf stored from wreg
  1527  0191  0020               	movlb	0	; select bank0
  1528  0192  00A9               	movwf	itoa@buf
  1529  0193  0829               	movf	itoa@buf,w
  1530  0194  00FD               	movwf	??_itoa
  1531  0195  087D               	movf	??_itoa,w
  1532  0196  00A8               	movwf	itoa@cp
  1533  0197  1FA5               	btfss	itoa@val+1,7
  1534  0198  29A9               	goto	l1596
  1535  0199  302D               	movlw	45
  1536  019A  00FD               	movwf	??_itoa
  1537  019B  0829               	movf	itoa@buf,w
  1538  019C  0086               	movwf	6
  1539  019D  0187               	clrf	7
  1540  019E  087D               	movf	??_itoa,w
  1541  019F  0081               	movwf	1
  1542  01A0  3001               	movlw	1
  1543  01A1  00FD               	movwf	??_itoa
  1544  01A2  087D               	movf	??_itoa,w
  1545  01A3  07A9               	addwf	itoa@buf,f
  1546  01A4  09A4               	comf	itoa@val,f
  1547  01A5  09A5               	comf	itoa@val+1,f
  1548  01A6  0AA4               	incf	itoa@val,f
  1549  01A7  1903               	skipnz
  1550  01A8  0AA5               	incf	itoa@val+1,f
  1551  01A9                     l1596:	
  1552  01A9  0825               	movf	itoa@val+1,w
  1553  01AA  00F9               	movwf	utoa@val+1
  1554  01AB  0824               	movf	itoa@val,w
  1555  01AC  00F8               	movwf	utoa@val
  1556  01AD  0827               	movf	itoa@base+1,w
  1557  01AE  00FB               	movwf	utoa@base+1
  1558  01AF  0826               	movf	itoa@base,w
  1559  01B0  00FA               	movwf	utoa@base
  1560  01B1  0829               	movf	itoa@buf,w
  1561  01B2  3182  22F3         	fcall	_utoa
  1562  01B4  0008               	return
  1563  01B5                     __end_of_itoa:	
  1564                           ;	Return value of _itoa is never used
  1565                           
  1566                           
  1567                           	psect	text3
  1568  02F3                     __ptext3:	
  1569 ;; *************** function _utoa *****************
  1570 ;; Defined at:
  1571 ;;		line 17 in file "/Applications/microchip/xc8/v1.45/sources/common/itoa.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;  buf             1    wreg     PTR unsigned char 
  1574 ;;		 -> main@bufB(8), main@bufA(8), 
  1575 ;;  val             2    8[COMMON] unsigned int 
  1576 ;;  base            2   10[COMMON] int 
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  1579 ;;		 -> main@bufB(8), main@bufA(8), 
  1580 ;;  v               2    0[BANK0 ] unsigned int 
  1581 ;;  c               1    2[BANK0 ] unsigned char 
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  1    wreg      PTR unsigned char 
  1584 ;; Registers used:
  1585 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1591 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1592 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1593 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1594 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1595 ;;Total ram usage:        9 bytes
  1596 ;; Hardware stack levels used:    1
  1597 ;; Hardware stack levels required when called:    1
  1598 ;; This function calls:
  1599 ;;		___lwdiv
  1600 ;;		___lwmod
  1601 ;; This function is called by:
  1602 ;;		_itoa
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           
  1607                           ;psect for function _utoa
  1608  02F3                     _utoa:	
  1609                           
  1610                           ;incstack = 0
  1611                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1612                           ;utoa@buf stored from wreg
  1613  02F3  0020               	movlb	0	; select bank0
  1614  02F4  00A3               	movwf	utoa@buf
  1615  02F5  0879               	movf	utoa@val+1,w
  1616  02F6  00A1               	movwf	utoa@v+1
  1617  02F7  0878               	movf	utoa@val,w
  1618  02F8  00A0               	movwf	utoa@v
  1619  02F9                     l1472:	
  1620  02F9  087B               	movf	utoa@base+1,w
  1621  02FA  00F1               	movwf	___lwdiv@divisor+1
  1622  02FB  087A               	movf	utoa@base,w
  1623  02FC  00F0               	movwf	___lwdiv@divisor
  1624  02FD  0821               	movf	utoa@v+1,w
  1625  02FE  00F3               	movwf	___lwdiv@dividend+1
  1626  02FF  0820               	movf	utoa@v,w
  1627  0300  00F2               	movwf	___lwdiv@dividend
  1628  0301  3182  223D  3182   	fcall	___lwdiv
  1629  0304  0871               	movf	?___lwdiv+1,w
  1630  0305  0020               	movlb	0	; select bank0
  1631  0306  00A1               	movwf	utoa@v+1
  1632  0307  0870               	movf	?___lwdiv,w
  1633  0308  00A0               	movwf	utoa@v
  1634  0309  3001               	movlw	1
  1635  030A  00FC               	movwf	??_utoa
  1636  030B  087C               	movf	??_utoa,w
  1637  030C  07A3               	addwf	utoa@buf,f
  1638  030D  0820               	movf	utoa@v,w
  1639  030E  0421               	iorwf	utoa@v+1,w
  1640  030F  1D03               	btfss	3,2
  1641  0310  2AF9               	goto	l1472
  1642  0311  0823               	movf	utoa@buf,w
  1643  0312  0086               	movwf	6
  1644  0313  0187               	clrf	7
  1645  0314  0181               	clrf	1
  1646  0315  3001               	movlw	1
  1647  0316  02A3               	subwf	utoa@buf,f
  1648  0317                     l1482:	
  1649  0317  087B               	movf	utoa@base+1,w
  1650  0318  00F1               	movwf	___lwmod@divisor+1
  1651  0319  087A               	movf	utoa@base,w
  1652  031A  00F0               	movwf	___lwmod@divisor
  1653  031B  0879               	movf	utoa@val+1,w
  1654  031C  00F3               	movwf	___lwmod@dividend+1
  1655  031D  0878               	movf	utoa@val,w
  1656  031E  00F2               	movwf	___lwmod@dividend
  1657  031F  3181  21B5  3182   	fcall	___lwmod
  1658  0322  0870               	movf	?___lwmod,w
  1659  0323  00FC               	movwf	??_utoa
  1660  0324  087C               	movf	??_utoa,w
  1661  0325  0020               	movlb	0	; select bank0
  1662  0326  00A2               	movwf	utoa@c
  1663  0327  087B               	movf	utoa@base+1,w
  1664  0328  00F1               	movwf	___lwdiv@divisor+1
  1665  0329  087A               	movf	utoa@base,w
  1666  032A  00F0               	movwf	___lwdiv@divisor
  1667  032B  0879               	movf	utoa@val+1,w
  1668  032C  00F3               	movwf	___lwdiv@dividend+1
  1669  032D  0878               	movf	utoa@val,w
  1670  032E  00F2               	movwf	___lwdiv@dividend
  1671  032F  3182  223D  3182   	fcall	___lwdiv
  1672  0332  0871               	movf	?___lwdiv+1,w
  1673  0333  00F9               	movwf	utoa@val+1
  1674  0334  0870               	movf	?___lwdiv,w
  1675  0335  00F8               	movwf	utoa@val
  1676  0336  300A               	movlw	10
  1677  0337  0020               	movlb	0	; select bank0
  1678  0338  0222               	subwf	utoa@c,w
  1679  0339  1C03               	skipc
  1680  033A  2B3F               	goto	l501
  1681  033B  3007               	movlw	7
  1682  033C  00FC               	movwf	??_utoa
  1683  033D  087C               	movf	??_utoa,w
  1684  033E  07A2               	addwf	utoa@c,f
  1685  033F                     l501:	
  1686  033F  3030               	movlw	48
  1687  0340  00FC               	movwf	??_utoa
  1688  0341  087C               	movf	??_utoa,w
  1689  0342  07A2               	addwf	utoa@c,f
  1690  0343  0822               	movf	utoa@c,w
  1691  0344  00FC               	movwf	??_utoa
  1692  0345  0823               	movf	utoa@buf,w
  1693  0346  0086               	movwf	6
  1694  0347  0187               	clrf	7
  1695  0348  087C               	movf	??_utoa,w
  1696  0349  0081               	movwf	1
  1697  034A  3001               	movlw	1
  1698  034B  02A3               	subwf	utoa@buf,f
  1699  034C  0878               	movf	utoa@val,w
  1700  034D  0479               	iorwf	utoa@val+1,w
  1701  034E  1D03               	btfss	3,2
  1702  034F  2B17               	goto	l1482
  1703                           
  1704                           ;	Return value of _utoa is never used
  1705  0350  3001               	movlw	1
  1706  0351  00FC               	movwf	??_utoa
  1707  0352  087C               	movf	??_utoa,w
  1708  0353  07A3               	addwf	utoa@buf,f
  1709  0354  0008               	return
  1710  0355                     __end_of_utoa:	
  1711                           
  1712                           	psect	text4
  1713  01B5                     __ptext4:	
  1714 ;; *************** function ___lwmod *****************
  1715 ;; Defined at:
  1716 ;;		line 6 in file "/Applications/microchip/xc8/v1.45/sources/common/lwmod.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;  divisor         2    0[COMMON] unsigned int 
  1719 ;;  dividend        2    2[COMMON] unsigned int 
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;  counter         1    5[COMMON] unsigned char 
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  2    0[COMMON] unsigned int 
  1724 ;; Registers used:
  1725 ;;		wreg, status,2, status,0
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1731 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1732 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1733 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1734 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1735 ;;Total ram usage:        6 bytes
  1736 ;; Hardware stack levels used:    1
  1737 ;; This function calls:
  1738 ;;		Nothing
  1739 ;; This function is called by:
  1740 ;;		_utoa
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           
  1745                           ;psect for function ___lwmod
  1746  01B5                     ___lwmod:	
  1747                           
  1748                           ;incstack = 0
  1749                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1750  01B5  0870               	movf	___lwmod@divisor,w
  1751  01B6  0471               	iorwf	___lwmod@divisor+1,w
  1752  01B7  1903               	btfsc	3,2
  1753  01B8  29DC               	goto	l1284
  1754  01B9  01F5               	clrf	___lwmod@counter
  1755  01BA  0AF5               	incf	___lwmod@counter,f
  1756  01BB                     l1274:	
  1757  01BB  1BF1               	btfsc	___lwmod@divisor+1,7
  1758  01BC  29C7               	goto	l1276
  1759  01BD  3001               	movlw	1
  1760  01BE                     u1155:	
  1761  01BE  35F0               	lslf	___lwmod@divisor,f
  1762  01BF  0DF1               	rlf	___lwmod@divisor+1,f
  1763  01C0  0B89               	decfsz	9,f
  1764  01C1  29BE               	goto	u1155
  1765  01C2  3001               	movlw	1
  1766  01C3  00F4               	movwf	??___lwmod
  1767  01C4  0874               	movf	??___lwmod,w
  1768  01C5  07F5               	addwf	___lwmod@counter,f
  1769  01C6  29BB               	goto	l1274
  1770  01C7                     l1276:	
  1771  01C7  0871               	movf	___lwmod@divisor+1,w
  1772  01C8  0273               	subwf	___lwmod@dividend+1,w
  1773  01C9  1D03               	skipz
  1774  01CA  29CD               	goto	u1175
  1775  01CB  0870               	movf	___lwmod@divisor,w
  1776  01CC  0272               	subwf	___lwmod@dividend,w
  1777  01CD                     u1175:	
  1778  01CD  1C03               	skipc
  1779  01CE  29D3               	goto	l1280
  1780  01CF  0870               	movf	___lwmod@divisor,w
  1781  01D0  02F2               	subwf	___lwmod@dividend,f
  1782  01D1  0871               	movf	___lwmod@divisor+1,w
  1783  01D2  3BF3               	subwfb	___lwmod@dividend+1,f
  1784  01D3                     l1280:	
  1785  01D3  3001               	movlw	1
  1786  01D4                     u1185:	
  1787  01D4  36F1               	lsrf	___lwmod@divisor+1,f
  1788  01D5  0CF0               	rrf	___lwmod@divisor,f
  1789  01D6  0B89               	decfsz	9,f
  1790  01D7  29D4               	goto	u1185
  1791  01D8  3001               	movlw	1
  1792  01D9  02F5               	subwf	___lwmod@counter,f
  1793  01DA  1D03               	btfss	3,2
  1794  01DB  29C7               	goto	l1276
  1795  01DC                     l1284:	
  1796  01DC  0873               	movf	___lwmod@dividend+1,w
  1797  01DD  00F1               	movwf	?___lwmod+1
  1798  01DE  0872               	movf	___lwmod@dividend,w
  1799  01DF  00F0               	movwf	?___lwmod
  1800  01E0  0008               	return
  1801  01E1                     __end_of___lwmod:	
  1802                           
  1803                           	psect	text5
  1804  023D                     __ptext5:	
  1805 ;; *************** function ___lwdiv *****************
  1806 ;; Defined at:
  1807 ;;		line 6 in file "/Applications/microchip/xc8/v1.45/sources/common/lwdiv.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;  divisor         2    0[COMMON] unsigned int 
  1810 ;;  dividend        2    2[COMMON] unsigned int 
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;  quotient        2    5[COMMON] unsigned int 
  1813 ;;  counter         1    7[COMMON] unsigned char 
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  2    0[COMMON] unsigned int 
  1816 ;; Registers used:
  1817 ;;		wreg, status,2, status,0
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1823 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1824 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1825 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1826 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1827 ;;Total ram usage:        8 bytes
  1828 ;; Hardware stack levels used:    1
  1829 ;; This function calls:
  1830 ;;		Nothing
  1831 ;; This function is called by:
  1832 ;;		_utoa
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           
  1837                           ;psect for function ___lwdiv
  1838  023D                     ___lwdiv:	
  1839                           
  1840                           ;incstack = 0
  1841                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1842  023D  01F5               	clrf	___lwdiv@quotient
  1843  023E  01F6               	clrf	___lwdiv@quotient+1
  1844  023F  0870               	movf	___lwdiv@divisor,w
  1845  0240  0471               	iorwf	___lwdiv@divisor+1,w
  1846  0241  1903               	btfsc	3,2
  1847  0242  2A6C               	goto	l1262
  1848  0243  01F7               	clrf	___lwdiv@counter
  1849  0244  0AF7               	incf	___lwdiv@counter,f
  1850  0245                     l1250:	
  1851  0245  1BF1               	btfsc	___lwdiv@divisor+1,7
  1852  0246  2A51               	goto	l1252
  1853  0247  3001               	movlw	1
  1854  0248                     u1085:	
  1855  0248  35F0               	lslf	___lwdiv@divisor,f
  1856  0249  0DF1               	rlf	___lwdiv@divisor+1,f
  1857  024A  0B89               	decfsz	9,f
  1858  024B  2A48               	goto	u1085
  1859  024C  3001               	movlw	1
  1860  024D  00F4               	movwf	??___lwdiv
  1861  024E  0874               	movf	??___lwdiv,w
  1862  024F  07F7               	addwf	___lwdiv@counter,f
  1863  0250  2A45               	goto	l1250
  1864  0251                     l1252:	
  1865  0251  3001               	movlw	1
  1866  0252                     u1105:	
  1867  0252  35F5               	lslf	___lwdiv@quotient,f
  1868  0253  0DF6               	rlf	___lwdiv@quotient+1,f
  1869  0254  0B89               	decfsz	9,f
  1870  0255  2A52               	goto	u1105
  1871  0256  0871               	movf	___lwdiv@divisor+1,w
  1872  0257  0273               	subwf	___lwdiv@dividend+1,w
  1873  0258  1D03               	skipz
  1874  0259  2A5C               	goto	u1115
  1875  025A  0870               	movf	___lwdiv@divisor,w
  1876  025B  0272               	subwf	___lwdiv@dividend,w
  1877  025C                     u1115:	
  1878  025C  1C03               	skipc
  1879  025D  2A63               	goto	l1258
  1880  025E  0870               	movf	___lwdiv@divisor,w
  1881  025F  02F2               	subwf	___lwdiv@dividend,f
  1882  0260  0871               	movf	___lwdiv@divisor+1,w
  1883  0261  3BF3               	subwfb	___lwdiv@dividend+1,f
  1884  0262  1475               	bsf	___lwdiv@quotient,0
  1885  0263                     l1258:	
  1886  0263  3001               	movlw	1
  1887  0264                     u1125:	
  1888  0264  36F1               	lsrf	___lwdiv@divisor+1,f
  1889  0265  0CF0               	rrf	___lwdiv@divisor,f
  1890  0266  0B89               	decfsz	9,f
  1891  0267  2A64               	goto	u1125
  1892  0268  3001               	movlw	1
  1893  0269  02F7               	subwf	___lwdiv@counter,f
  1894  026A  1D03               	btfss	3,2
  1895  026B  2A51               	goto	l1252
  1896  026C                     l1262:	
  1897  026C  0876               	movf	___lwdiv@quotient+1,w
  1898  026D  00F1               	movwf	?___lwdiv+1
  1899  026E  0875               	movf	___lwdiv@quotient,w
  1900  026F  00F0               	movwf	?___lwdiv
  1901  0270  0008               	return
  1902  0271                     __end_of___lwdiv:	
  1903                           
  1904                           	psect	text6
  1905  0440                     __ptext6:	
  1906 ;; *************** function _echo *****************
  1907 ;; Defined at:
  1908 ;;		line 218 in file "FinalProject3.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;  port            1    wreg     unsigned char 
  1911 ;;  pin             2   46[BANK0 ] int 
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;  port            1   49[BANK0 ] unsigned char 
  1914 ;;  a               2   52[BANK0 ] int 
  1915 ;;  sfrdev          2   50[BANK0 ] PTR unsigned char 
  1916 ;;		 -> PORTC(1), PORTB(1), PORTA(1), 
  1917 ;; Return value:  Size  Location     Type
  1918 ;;                  2   46[BANK0 ] int 
  1919 ;; Registers used:
  1920 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1926 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1927 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1928 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1929 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1930 ;;Total ram usage:        8 bytes
  1931 ;; Hardware stack levels used:    1
  1932 ;; Hardware stack levels required when called:    2
  1933 ;; This function calls:
  1934 ;;		___awtoft
  1935 ;;		___ftdiv
  1936 ;;		___ftmul
  1937 ;;		___fttol
  1938 ;; This function is called by:
  1939 ;;		_main
  1940 ;;		_ping
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           
  1945                           ;psect for function _echo
  1946  0440                     _echo:	
  1947                           
  1948                           ;incstack = 0
  1949                           ; Regs used in _echo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1950                           ;echo@port stored from wreg
  1951  0440  0020               	movlb	0	; select bank0
  1952  0441  00D1               	movwf	echo@port
  1953                           
  1954                           ;FinalProject3.c: 219: char* sfrdev;
  1955                           ;FinalProject3.c: 220: switch(port){
  1956  0442  2C50               	goto	l1558
  1957  0443                     l119:	
  1958                           ;FinalProject3.c: 221: case 'A' :
  1959                           
  1960                           
  1961                           ;FinalProject3.c: 222: sfrdev = &PORTA;
  1962  0443  3000               	movlw	0
  1963  0444  00D3               	movwf	echo@sfrdev+1
  1964  0445  300C               	movlw	12
  1965  0446  2C4E               	goto	L2
  1966  0447                     l121:	
  1967                           ;FinalProject3.c: 224: case 'B' :
  1968                           
  1969                           ;FinalProject3.c: 223: break;
  1970                           
  1971                           
  1972                           ;FinalProject3.c: 225: sfrdev = &PORTB;
  1973  0447  3000               	movlw	0
  1974  0448  00D3               	movwf	echo@sfrdev+1
  1975  0449  300D               	movlw	13
  1976  044A  2C4E               	goto	L2
  1977  044B                     l122:	
  1978                           ;FinalProject3.c: 227: case 'C' :
  1979                           
  1980                           ;FinalProject3.c: 226: break;
  1981                           
  1982                           
  1983                           ;FinalProject3.c: 228: sfrdev = &PORTC;
  1984  044B  3000               	movlw	0
  1985  044C  00D3               	movwf	echo@sfrdev+1
  1986  044D  300E               	movlw	14
  1987  044E                     L2:	
  1988  044E  00D2               	movwf	echo@sfrdev
  1989                           
  1990                           ;FinalProject3.c: 229: }
  1991  044F  2C5B               	goto	l1560
  1992  0450                     l1558:	
  1993  0450  0851               	movf	echo@port,w
  1994                           
  1995                           ; Switch size 1, requested type "space"
  1996                           ; Number of cases is 3, Range of values is 65 to 67
  1997                           ; switch strategies available:
  1998                           ; Name         Instructions Cycles
  1999                           ; simple_byte           10     6 (average)
  2000                           ; direct_byte           15     9 (fixed)
  2001                           ; jumptable            263     9 (fixed)
  2002                           ;	Chosen strategy is simple_byte
  2003  0451  3A41               	xorlw	65	; case 65
  2004  0452  1903               	skipnz
  2005  0453  2C43               	goto	l119
  2006  0454  3A03               	xorlw	3	; case 66
  2007  0455  1903               	skipnz
  2008  0456  2C47               	goto	l121
  2009  0457  3A01               	xorlw	1	; case 67
  2010  0458  1903               	skipnz
  2011  0459  2C4B               	goto	l122
  2012  045A  2C5B               	goto	l1560
  2013  045B                     l1560:	
  2014                           
  2015                           ;FinalProject3.c: 231: int a;
  2016                           ;FinalProject3.c: 233: T1CON = 0x10;
  2017  045B  3010               	movlw	16
  2018  045C  0098               	movwf	24	;volatile
  2019                           
  2020                           ;FinalProject3.c: 235: TMR1H = 0;
  2021  045D  0197               	clrf	23	;volatile
  2022                           
  2023                           ;FinalProject3.c: 236: TMR1L = 0;
  2024  045E  0196               	clrf	22	;volatile
  2025                           
  2026                           ;FinalProject3.c: 238: RA0 = 1;
  2027  045F  140C               	bsf	12,0	;volatile
  2028                           
  2029                           ;FinalProject3.c: 239: _delay((unsigned long)((10)*(8000000/4000000.0)));
  2030  0460  3006               	movlw	6
  2031  0461                     u1847:	
  2032  0461  0B89               	decfsz	9,f
  2033  0462  2C61               	goto	u1847
  2034  0463  3200               	nop2
  2035                           
  2036                           ;FinalProject3.c: 240: RA0 = 0;
  2037  0464  0020               	movlb	0	; select bank0
  2038  0465  100C               	bcf	12,0	;volatile
  2039  0466                     l1570:	
  2040                           ;FinalProject3.c: 242: while( !(*sfrdev & (1<<pin)) );
  2041                           
  2042  0466  0852               	movf	echo@sfrdev,w
  2043  0467  0086               	movwf	6
  2044  0468  0853               	movf	echo@sfrdev+1,w
  2045  0469  0087               	movwf	7
  2046  046A  3001               	movlw	1
  2047  046B  00D0               	movwf	??_echo
  2048  046C  0A4E               	incf	echo@pin,w
  2049  046D  2C6F               	goto	u1604
  2050  046E                     u1605:	
  2051  046E  35D0               	lslf	??_echo,f
  2052  046F                     u1604:	
  2053  046F  0B89               	decfsz	9,f
  2054  0470  2C6E               	goto	u1605
  2055  0471  0850               	movf	??_echo,w
  2056  0472  0501               	andwf	1,w
  2057  0473  1903               	btfsc	3,2
  2058  0474  2C66               	goto	l1570
  2059                           
  2060                           ;FinalProject3.c: 243: TMR1ON = 1;
  2061  0475  1418               	bsf	24,0	;volatile
  2062  0476                     l1572:	
  2063                           ;FinalProject3.c: 244: while( (*sfrdev & (1<<pin)) );
  2064                           
  2065  0476  0852               	movf	echo@sfrdev,w
  2066  0477  0086               	movwf	6
  2067  0478  0853               	movf	echo@sfrdev+1,w
  2068  0479  0087               	movwf	7
  2069  047A  3001               	movlw	1
  2070  047B  00D0               	movwf	??_echo
  2071  047C  0A4E               	incf	echo@pin,w
  2072  047D  2C7F               	goto	u1624
  2073  047E                     u1625:	
  2074  047E  35D0               	lslf	??_echo,f
  2075  047F                     u1624:	
  2076  047F  0B89               	decfsz	9,f
  2077  0480  2C7E               	goto	u1625
  2078  0481  0850               	movf	??_echo,w
  2079  0482  0501               	andwf	1,w
  2080  0483  1D03               	btfss	3,2
  2081  0484  2C76               	goto	l1572
  2082                           
  2083                           ;FinalProject3.c: 245: TMR1ON = 0;
  2084  0485  1018               	bcf	24,0	;volatile
  2085                           
  2086                           ;FinalProject3.c: 247: a = (TMR1L | (TMR1H<<8));
  2087  0486  0817               	movf	23,w	;volatile
  2088  0487  00D5               	movwf	echo@a+1
  2089  0488  0816               	movf	22,w	;volatile
  2090  0489  00D4               	movwf	echo@a
  2091                           
  2092                           ;FinalProject3.c: 248: a = (int)((float)a/58.82*2);
  2093  048A  0855               	movf	echo@a+1,w
  2094  048B  00F9               	movwf	___awtoft@c+1
  2095  048C  0854               	movf	echo@a,w
  2096  048D  00F8               	movwf	___awtoft@c
  2097  048E  3181  2171  3184   	fcall	___awtoft
  2098  0491  0878               	movf	?___awtoft,w
  2099  0492  0020               	movlb	0	; select bank0
  2100  0493  00A3               	movwf	___ftdiv@f1
  2101  0494  0879               	movf	?___awtoft+1,w
  2102  0495  00A4               	movwf	___ftdiv@f1+1
  2103  0496  087A               	movf	?___awtoft+2,w
  2104  0497  00A5               	movwf	___ftdiv@f1+2
  2105  0498  3048               	movlw	72
  2106  0499  00A0               	movwf	___ftdiv@f2
  2107  049A  306B               	movlw	107
  2108  049B  00A1               	movwf	___ftdiv@f2+1
  2109  049C  3042               	movlw	66
  2110  049D  00A2               	movwf	___ftdiv@f2+2
  2111  049E  3184  24CB  3184   	fcall	___ftdiv
  2112  04A1  0020               	movlb	0	; select bank0
  2113  04A2  0820               	movf	?___ftdiv,w
  2114  04A3  00B3               	movwf	___ftmul@f2
  2115  04A4  0821               	movf	?___ftdiv+1,w
  2116  04A5  00B4               	movwf	___ftmul@f2+1
  2117  04A6  0822               	movf	?___ftdiv+2,w
  2118  04A7  00B5               	movwf	___ftmul@f2+2
  2119  04A8  3000               	movlw	0
  2120  04A9  00B0               	movwf	___ftmul@f1
  2121  04AA  3000               	movlw	0
  2122  04AB  00B1               	movwf	___ftmul@f1+1
  2123  04AC  3040               	movlw	64
  2124  04AD  00B2               	movwf	___ftmul@f1+2
  2125  04AE  3185  2574  3184   	fcall	___ftmul
  2126  04B1  0020               	movlb	0	; select bank0
  2127  04B2  0830               	movf	?___ftmul,w
  2128  04B3  00C0               	movwf	___fttol@f1
  2129  04B4  0831               	movf	?___ftmul+1,w
  2130  04B5  00C1               	movwf	___fttol@f1+1
  2131  04B6  0832               	movf	?___ftmul+2,w
  2132  04B7  00C2               	movwf	___fttol@f1+2
  2133  04B8  3183  23B9         	fcall	___fttol
  2134  04BA  0020               	movlb	0	; select bank0
  2135  04BB  0841               	movf	?___fttol+1,w
  2136  04BC  00D5               	movwf	echo@a+1
  2137  04BD  0840               	movf	?___fttol,w
  2138  04BE  00D4               	movwf	echo@a
  2139                           
  2140                           ;FinalProject3.c: 249: a = a + 1;
  2141  04BF  0854               	movf	echo@a,w
  2142  04C0  3E01               	addlw	1
  2143  04C1  00D4               	movwf	echo@a
  2144  04C2  3000               	movlw	0
  2145  04C3  3D55               	addwfc	echo@a+1,w
  2146  04C4  00D5               	movwf	echo@a+1
  2147                           
  2148                           ;FinalProject3.c: 251: T1CON = 0x00;
  2149  04C5  0198               	clrf	24	;volatile
  2150                           
  2151                           ;FinalProject3.c: 252: return a;
  2152  04C6  0855               	movf	echo@a+1,w
  2153  04C7  00CF               	movwf	?_echo+1
  2154  04C8  0854               	movf	echo@a,w
  2155  04C9  00CE               	movwf	?_echo
  2156  04CA  0008               	return
  2157  04CB                     __end_of_echo:	
  2158                           
  2159                           	psect	text7
  2160  03B9                     __ptext7:	
  2161 ;; *************** function ___fttol *****************
  2162 ;; Defined at:
  2163 ;;		line 44 in file "/Applications/microchip/xc8/v1.45/sources/common/fttol.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;  f1              3   32[BANK0 ] float 
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;  lval            4   41[BANK0 ] unsigned long 
  2168 ;;  exp1            1   45[BANK0 ] unsigned char 
  2169 ;;  sign1           1   40[BANK0 ] unsigned char 
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  4   32[BANK0 ] long 
  2172 ;; Registers used:
  2173 ;;		wreg, status,2, status,0
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2179 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2180 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2181 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2182 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2183 ;;Total ram usage:       14 bytes
  2184 ;; Hardware stack levels used:    1
  2185 ;; This function calls:
  2186 ;;		Nothing
  2187 ;; This function is called by:
  2188 ;;		_echo
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           
  2193                           ;psect for function ___fttol
  2194  03B9                     ___fttol:	
  2195                           
  2196                           ;incstack = 0
  2197                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2198  03B9  0020               	movlb	0	; select bank0
  2199  03BA  0840               	movf	___fttol@f1,w
  2200  03BB  00C4               	movwf	??___fttol
  2201  03BC  0841               	movf	___fttol@f1+1,w
  2202  03BD  00C5               	movwf	??___fttol+1
  2203  03BE  0842               	movf	___fttol@f1+2,w
  2204  03BF  00C6               	movwf	??___fttol+2
  2205  03C0  1003               	clrc
  2206  03C1  0D45               	rlf	??___fttol+1,w
  2207  03C2  0D46               	rlf	??___fttol+2,w
  2208  03C3  00C7               	movwf	??___fttol+3
  2209  03C4  0847               	movf	??___fttol+3,w
  2210  03C5  00CD               	movwf	___fttol@exp1
  2211  03C6  084D               	movf	___fttol@exp1,w
  2212  03C7  1D03               	btfss	3,2
  2213  03C8  2BD2               	goto	l1434
  2214  03C9  3000               	movlw	0
  2215  03CA  00C3               	movwf	?___fttol+3
  2216  03CB  3000               	movlw	0
  2217  03CC  00C2               	movwf	?___fttol+2
  2218  03CD  3000               	movlw	0
  2219  03CE  00C1               	movwf	?___fttol+1
  2220  03CF  3000               	movlw	0
  2221  03D0  00C0               	movwf	?___fttol
  2222  03D1  0008               	return
  2223  03D2                     l1434:	
  2224  03D2  0840               	movf	___fttol@f1,w
  2225  03D3  00C4               	movwf	??___fttol
  2226  03D4  0841               	movf	___fttol@f1+1,w
  2227  03D5  00C5               	movwf	??___fttol+1
  2228  03D6  0842               	movf	___fttol@f1+2,w
  2229  03D7  00C6               	movwf	??___fttol+2
  2230  03D8  3017               	movlw	23
  2231  03D9                     u1435:	
  2232  03D9  36C6               	lsrf	??___fttol+2,f
  2233  03DA  0CC5               	rrf	??___fttol+1,f
  2234  03DB  0CC4               	rrf	??___fttol,f
  2235  03DC  0B89               	decfsz	9,f
  2236  03DD  2BD9               	goto	u1435
  2237  03DE  0844               	movf	??___fttol,w
  2238  03DF  00C7               	movwf	??___fttol+3
  2239  03E0  0847               	movf	??___fttol+3,w
  2240  03E1  00C8               	movwf	___fttol@sign1
  2241  03E2  17C1               	bsf	___fttol@f1+1,7
  2242  03E3  30FF               	movlw	255
  2243  03E4  05C0               	andwf	___fttol@f1,f
  2244  03E5  30FF               	movlw	255
  2245  03E6  05C1               	andwf	___fttol@f1+1,f
  2246  03E7  3000               	movlw	0
  2247  03E8  05C2               	andwf	___fttol@f1+2,f
  2248  03E9  0840               	movf	___fttol@f1,w
  2249  03EA  00C9               	movwf	___fttol@lval
  2250  03EB  0841               	movf	___fttol@f1+1,w
  2251  03EC  00CA               	movwf	___fttol@lval+1
  2252  03ED  0842               	movf	___fttol@f1+2,w
  2253  03EE  00CB               	movwf	___fttol@lval+2
  2254  03EF  01CC               	clrf	___fttol@lval+3
  2255  03F0  308E               	movlw	142
  2256  03F1  02CD               	subwf	___fttol@exp1,f
  2257  03F2  1FCD               	btfss	___fttol@exp1,7
  2258  03F3  2C10               	goto	l1454
  2259  03F4  084D               	movf	___fttol@exp1,w
  2260  03F5  3A80               	xorlw	128
  2261  03F6  3E8F               	addlw	143
  2262  03F7  1803               	skipnc
  2263  03F8  2C02               	goto	l1452
  2264  03F9  3000               	movlw	0
  2265  03FA  00C3               	movwf	?___fttol+3
  2266  03FB  3000               	movlw	0
  2267  03FC  00C2               	movwf	?___fttol+2
  2268  03FD  3000               	movlw	0
  2269  03FE  00C1               	movwf	?___fttol+1
  2270  03FF  3000               	movlw	0
  2271  0400  00C0               	movwf	?___fttol
  2272  0401  0008               	return
  2273  0402                     l1452:	
  2274  0402  3001               	movlw	1
  2275  0403                     u1465:	
  2276  0403  36CC               	lsrf	___fttol@lval+3,f
  2277  0404  0CCB               	rrf	___fttol@lval+2,f
  2278  0405  0CCA               	rrf	___fttol@lval+1,f
  2279  0406  0CC9               	rrf	___fttol@lval,f
  2280  0407  0B89               	decfsz	9,f
  2281  0408  2C03               	goto	u1465
  2282  0409  3001               	movlw	1
  2283  040A  00C4               	movwf	??___fttol
  2284  040B  0844               	movf	??___fttol,w
  2285  040C  07CD               	addwf	___fttol@exp1,f
  2286  040D  1903               	btfsc	3,2
  2287  040E  2C29               	goto	l1462
  2288  040F  2C02               	goto	l1452
  2289  0410                     l1454:	
  2290  0410  3018               	movlw	24
  2291  0411  024D               	subwf	___fttol@exp1,w
  2292  0412  1C03               	skipc
  2293  0413  2C26               	goto	l486
  2294  0414  3000               	movlw	0
  2295  0415  00C3               	movwf	?___fttol+3
  2296  0416  3000               	movlw	0
  2297  0417  00C2               	movwf	?___fttol+2
  2298  0418  3000               	movlw	0
  2299  0419  00C1               	movwf	?___fttol+1
  2300  041A  3000               	movlw	0
  2301  041B  00C0               	movwf	?___fttol
  2302  041C  0008               	return
  2303  041D                     l1460:	
  2304  041D  3001               	movlw	1
  2305  041E                     u1495:	
  2306  041E  35C9               	lslf	___fttol@lval,f
  2307  041F  0DCA               	rlf	___fttol@lval+1,f
  2308  0420  0DCB               	rlf	___fttol@lval+2,f
  2309  0421  0DCC               	rlf	___fttol@lval+3,f
  2310  0422  0B89               	decfsz	9,f
  2311  0423  2C1E               	goto	u1495
  2312  0424  3001               	movlw	1
  2313  0425  02CD               	subwf	___fttol@exp1,f
  2314  0426                     l486:	
  2315  0426  084D               	movf	___fttol@exp1,w
  2316  0427  1D03               	btfss	3,2
  2317  0428  2C1D               	goto	l1460
  2318  0429                     l1462:	
  2319  0429  0848               	movf	___fttol@sign1,w
  2320  042A  1903               	btfsc	3,2
  2321  042B  2C37               	goto	l1466
  2322  042C  09C9               	comf	___fttol@lval,f
  2323  042D  09CA               	comf	___fttol@lval+1,f
  2324  042E  09CB               	comf	___fttol@lval+2,f
  2325  042F  09CC               	comf	___fttol@lval+3,f
  2326  0430  0AC9               	incf	___fttol@lval,f
  2327  0431  1903               	skipnz
  2328  0432  0ACA               	incf	___fttol@lval+1,f
  2329  0433  1903               	skipnz
  2330  0434  0ACB               	incf	___fttol@lval+2,f
  2331  0435  1903               	skipnz
  2332  0436  0ACC               	incf	___fttol@lval+3,f
  2333  0437                     l1466:	
  2334  0437  084C               	movf	___fttol@lval+3,w
  2335  0438  00C3               	movwf	?___fttol+3
  2336  0439  084B               	movf	___fttol@lval+2,w
  2337  043A  00C2               	movwf	?___fttol+2
  2338  043B  084A               	movf	___fttol@lval+1,w
  2339  043C  00C1               	movwf	?___fttol+1
  2340  043D  0849               	movf	___fttol@lval,w
  2341  043E  00C0               	movwf	?___fttol
  2342  043F  0008               	return
  2343  0440                     __end_of___fttol:	
  2344                           
  2345                           	psect	text8
  2346  0574                     __ptext8:	
  2347 ;; *************** function ___ftmul *****************
  2348 ;; Defined at:
  2349 ;;		line 62 in file "/Applications/microchip/xc8/v1.45/sources/common/ftmul.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;  f1              3   16[BANK0 ] float 
  2352 ;;  f2              3   19[BANK0 ] float 
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  2355 ;;  sign            1   31[BANK0 ] unsigned char 
  2356 ;;  cntr            1   30[BANK0 ] unsigned char 
  2357 ;;  exp             1   26[BANK0 ] unsigned char 
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  3   16[BANK0 ] float 
  2360 ;; Registers used:
  2361 ;;		wreg, status,2, status,0, pclath, cstack
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2367 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2368 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2369 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2370 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2371 ;;Total ram usage:       16 bytes
  2372 ;; Hardware stack levels used:    1
  2373 ;; Hardware stack levels required when called:    1
  2374 ;; This function calls:
  2375 ;;		___ftpack
  2376 ;; This function is called by:
  2377 ;;		_echo
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           
  2382                           ;psect for function ___ftmul
  2383  0574                     ___ftmul:	
  2384                           
  2385                           ;incstack = 0
  2386                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2387  0574  0020               	movlb	0	; select bank0
  2388  0575  0830               	movf	___ftmul@f1,w
  2389  0576  00B6               	movwf	??___ftmul
  2390  0577  0831               	movf	___ftmul@f1+1,w
  2391  0578  00B7               	movwf	??___ftmul+1
  2392  0579  0832               	movf	___ftmul@f1+2,w
  2393  057A  00B8               	movwf	??___ftmul+2
  2394  057B  1003               	clrc
  2395  057C  0D37               	rlf	??___ftmul+1,w
  2396  057D  0D38               	rlf	??___ftmul+2,w
  2397  057E  00B9               	movwf	??___ftmul+3
  2398  057F  0839               	movf	??___ftmul+3,w
  2399  0580  00BA               	movwf	___ftmul@exp
  2400  0581  083A               	movf	___ftmul@exp,w
  2401  0582  1D03               	btfss	3,2
  2402  0583  2D8B               	goto	l1384
  2403  0584  3000               	movlw	0
  2404  0585  00B0               	movwf	?___ftmul
  2405  0586  3000               	movlw	0
  2406  0587  00B1               	movwf	?___ftmul+1
  2407  0588  3000               	movlw	0
  2408  0589  00B2               	movwf	?___ftmul+2
  2409  058A  0008               	return
  2410  058B                     l1384:	
  2411  058B  0833               	movf	___ftmul@f2,w
  2412  058C  00B6               	movwf	??___ftmul
  2413  058D  0834               	movf	___ftmul@f2+1,w
  2414  058E  00B7               	movwf	??___ftmul+1
  2415  058F  0835               	movf	___ftmul@f2+2,w
  2416  0590  00B8               	movwf	??___ftmul+2
  2417  0591  1003               	clrc
  2418  0592  0D37               	rlf	??___ftmul+1,w
  2419  0593  0D38               	rlf	??___ftmul+2,w
  2420  0594  00B9               	movwf	??___ftmul+3
  2421  0595  0839               	movf	??___ftmul+3,w
  2422  0596  00BF               	movwf	___ftmul@sign
  2423  0597  083F               	movf	___ftmul@sign,w
  2424  0598  1D03               	btfss	3,2
  2425  0599  2DA1               	goto	l1390
  2426  059A  3000               	movlw	0
  2427  059B  00B0               	movwf	?___ftmul
  2428  059C  3000               	movlw	0
  2429  059D  00B1               	movwf	?___ftmul+1
  2430  059E  3000               	movlw	0
  2431  059F  00B2               	movwf	?___ftmul+2
  2432  05A0  0008               	return
  2433  05A1                     l1390:	
  2434  05A1  083F               	movf	___ftmul@sign,w
  2435  05A2  3E7B               	addlw	123
  2436  05A3  00B6               	movwf	??___ftmul
  2437  05A4  0836               	movf	??___ftmul,w
  2438  05A5  07BA               	addwf	___ftmul@exp,f
  2439  05A6  0830               	movf	___ftmul@f1,w
  2440  05A7  00B6               	movwf	??___ftmul
  2441  05A8  0831               	movf	___ftmul@f1+1,w
  2442  05A9  00B7               	movwf	??___ftmul+1
  2443  05AA  0832               	movf	___ftmul@f1+2,w
  2444  05AB  00B8               	movwf	??___ftmul+2
  2445  05AC  3010               	movlw	16
  2446  05AD                     u1325:	
  2447  05AD  36B8               	lsrf	??___ftmul+2,f
  2448  05AE  0CB7               	rrf	??___ftmul+1,f
  2449  05AF  0CB6               	rrf	??___ftmul,f
  2450  05B0  0B89               	decfsz	9,f
  2451  05B1  2DAD               	goto	u1325
  2452  05B2  0836               	movf	??___ftmul,w
  2453  05B3  00B9               	movwf	??___ftmul+3
  2454  05B4  0839               	movf	??___ftmul+3,w
  2455  05B5  00BF               	movwf	___ftmul@sign
  2456  05B6  0833               	movf	___ftmul@f2,w
  2457  05B7  00B6               	movwf	??___ftmul
  2458  05B8  0834               	movf	___ftmul@f2+1,w
  2459  05B9  00B7               	movwf	??___ftmul+1
  2460  05BA  0835               	movf	___ftmul@f2+2,w
  2461  05BB  00B8               	movwf	??___ftmul+2
  2462  05BC  3010               	movlw	16
  2463  05BD                     u1335:	
  2464  05BD  36B8               	lsrf	??___ftmul+2,f
  2465  05BE  0CB7               	rrf	??___ftmul+1,f
  2466  05BF  0CB6               	rrf	??___ftmul,f
  2467  05C0  0B89               	decfsz	9,f
  2468  05C1  2DBD               	goto	u1335
  2469  05C2  0836               	movf	??___ftmul,w
  2470  05C3  00B9               	movwf	??___ftmul+3
  2471  05C4  0839               	movf	??___ftmul+3,w
  2472  05C5  06BF               	xorwf	___ftmul@sign,f
  2473  05C6  3080               	movlw	128
  2474  05C7  00B6               	movwf	??___ftmul
  2475  05C8  0836               	movf	??___ftmul,w
  2476  05C9  05BF               	andwf	___ftmul@sign,f
  2477  05CA  17B1               	bsf	___ftmul@f1+1,7
  2478  05CB  17B4               	bsf	___ftmul@f2+1,7
  2479  05CC  30FF               	movlw	255
  2480  05CD  05B3               	andwf	___ftmul@f2,f
  2481  05CE  30FF               	movlw	255
  2482  05CF  05B4               	andwf	___ftmul@f2+1,f
  2483  05D0  3000               	movlw	0
  2484  05D1  05B5               	andwf	___ftmul@f2+2,f
  2485  05D2  3000               	movlw	0
  2486  05D3  00BB               	movwf	___ftmul@f3_as_product
  2487  05D4  3000               	movlw	0
  2488  05D5  00BC               	movwf	___ftmul@f3_as_product+1
  2489  05D6  3000               	movlw	0
  2490  05D7  00BD               	movwf	___ftmul@f3_as_product+2
  2491  05D8  3007               	movlw	7
  2492  05D9  00B6               	movwf	??___ftmul
  2493  05DA  0836               	movf	??___ftmul,w
  2494  05DB  00BE               	movwf	___ftmul@cntr
  2495  05DC                     l1402:	
  2496  05DC  1C30               	btfss	___ftmul@f1,0
  2497  05DD  2DE4               	goto	l1406
  2498  05DE  0833               	movf	___ftmul@f2,w
  2499  05DF  07BB               	addwf	___ftmul@f3_as_product,f
  2500  05E0  0834               	movf	___ftmul@f2+1,w
  2501  05E1  3DBC               	addwfc	___ftmul@f3_as_product+1,f
  2502  05E2  0835               	movf	___ftmul@f2+2,w
  2503  05E3  3DBD               	addwfc	___ftmul@f3_as_product+2,f
  2504  05E4                     l1406:	
  2505  05E4  3001               	movlw	1
  2506  05E5                     u1355:	
  2507  05E5  36B2               	lsrf	___ftmul@f1+2,f
  2508  05E6  0CB1               	rrf	___ftmul@f1+1,f
  2509  05E7  0CB0               	rrf	___ftmul@f1,f
  2510  05E8  0B89               	decfsz	9,f
  2511  05E9  2DE5               	goto	u1355
  2512  05EA  3001               	movlw	1
  2513  05EB                     u1365:	
  2514  05EB  35B3               	lslf	___ftmul@f2,f
  2515  05EC  0DB4               	rlf	___ftmul@f2+1,f
  2516  05ED  0DB5               	rlf	___ftmul@f2+2,f
  2517  05EE  0B89               	decfsz	9,f
  2518  05EF  2DEB               	goto	u1365
  2519  05F0  3001               	movlw	1
  2520  05F1  02BE               	subwf	___ftmul@cntr,f
  2521  05F2  1D03               	btfss	3,2
  2522  05F3  2DDC               	goto	l1402
  2523  05F4  3009               	movlw	9
  2524  05F5  00B6               	movwf	??___ftmul
  2525  05F6  0836               	movf	??___ftmul,w
  2526  05F7  00BE               	movwf	___ftmul@cntr
  2527  05F8                     l1414:	
  2528  05F8  1C30               	btfss	___ftmul@f1,0
  2529  05F9  2E00               	goto	l1418
  2530  05FA  0833               	movf	___ftmul@f2,w
  2531  05FB  07BB               	addwf	___ftmul@f3_as_product,f
  2532  05FC  0834               	movf	___ftmul@f2+1,w
  2533  05FD  3DBC               	addwfc	___ftmul@f3_as_product+1,f
  2534  05FE  0835               	movf	___ftmul@f2+2,w
  2535  05FF  3DBD               	addwfc	___ftmul@f3_as_product+2,f
  2536  0600                     l1418:	
  2537  0600  3001               	movlw	1
  2538  0601                     u1395:	
  2539  0601  36B2               	lsrf	___ftmul@f1+2,f
  2540  0602  0CB1               	rrf	___ftmul@f1+1,f
  2541  0603  0CB0               	rrf	___ftmul@f1,f
  2542  0604  0B89               	decfsz	9,f
  2543  0605  2E01               	goto	u1395
  2544  0606  3001               	movlw	1
  2545  0607                     u1405:	
  2546  0607  36BD               	lsrf	___ftmul@f3_as_product+2,f
  2547  0608  0CBC               	rrf	___ftmul@f3_as_product+1,f
  2548  0609  0CBB               	rrf	___ftmul@f3_as_product,f
  2549  060A  0B89               	decfsz	9,f
  2550  060B  2E07               	goto	u1405
  2551  060C  3001               	movlw	1
  2552  060D  02BE               	subwf	___ftmul@cntr,f
  2553  060E  1D03               	btfss	3,2
  2554  060F  2DF8               	goto	l1414
  2555  0610  083B               	movf	___ftmul@f3_as_product,w
  2556  0611  00F0               	movwf	___ftpack@arg
  2557  0612  083C               	movf	___ftmul@f3_as_product+1,w
  2558  0613  00F1               	movwf	___ftpack@arg+1
  2559  0614  083D               	movf	___ftmul@f3_as_product+2,w
  2560  0615  00F2               	movwf	___ftpack@arg+2
  2561  0616  083A               	movf	___ftmul@exp,w
  2562  0617  00B6               	movwf	??___ftmul
  2563  0618  0836               	movf	??___ftmul,w
  2564  0619  00F3               	movwf	___ftpack@exp
  2565  061A  083F               	movf	___ftmul@sign,w
  2566  061B  00B7               	movwf	??___ftmul+1
  2567  061C  0837               	movf	??___ftmul+1,w
  2568  061D  00F4               	movwf	___ftpack@sign
  2569  061E  3183  2355         	fcall	___ftpack
  2570  0620  0870               	movf	?___ftpack,w
  2571  0621  0020               	movlb	0	; select bank0
  2572  0622  00B0               	movwf	?___ftmul
  2573  0623  0871               	movf	?___ftpack+1,w
  2574  0624  00B1               	movwf	?___ftmul+1
  2575  0625  0872               	movf	?___ftpack+2,w
  2576  0626  00B2               	movwf	?___ftmul+2
  2577  0627  0008               	return
  2578  0628                     __end_of___ftmul:	
  2579                           
  2580                           	psect	text9
  2581  04CB                     __ptext9:	
  2582 ;; *************** function ___ftdiv *****************
  2583 ;; Defined at:
  2584 ;;		line 56 in file "/Applications/microchip/xc8/v1.45/sources/common/ftdiv.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;  f2              3    0[BANK0 ] float 
  2587 ;;  f1              3    3[BANK0 ] float 
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;  f3              3   11[BANK0 ] float 
  2590 ;;  sign            1   15[BANK0 ] unsigned char 
  2591 ;;  exp             1   14[BANK0 ] unsigned char 
  2592 ;;  cntr            1   10[BANK0 ] unsigned char 
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  3    0[BANK0 ] float 
  2595 ;; Registers used:
  2596 ;;		wreg, status,2, status,0, pclath, cstack
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2602 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2603 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2604 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2605 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2606 ;;Total ram usage:       16 bytes
  2607 ;; Hardware stack levels used:    1
  2608 ;; Hardware stack levels required when called:    1
  2609 ;; This function calls:
  2610 ;;		___ftpack
  2611 ;; This function is called by:
  2612 ;;		_echo
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           
  2617                           ;psect for function ___ftdiv
  2618  04CB                     ___ftdiv:	
  2619                           
  2620                           ;incstack = 0
  2621                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2622  04CB  0020               	movlb	0	; select bank0
  2623  04CC  0823               	movf	___ftdiv@f1,w
  2624  04CD  00A6               	movwf	??___ftdiv
  2625  04CE  0824               	movf	___ftdiv@f1+1,w
  2626  04CF  00A7               	movwf	??___ftdiv+1
  2627  04D0  0825               	movf	___ftdiv@f1+2,w
  2628  04D1  00A8               	movwf	??___ftdiv+2
  2629  04D2  1003               	clrc
  2630  04D3  0D27               	rlf	??___ftdiv+1,w
  2631  04D4  0D28               	rlf	??___ftdiv+2,w
  2632  04D5  00A9               	movwf	??___ftdiv+3
  2633  04D6  0829               	movf	??___ftdiv+3,w
  2634  04D7  00AE               	movwf	___ftdiv@exp
  2635  04D8  082E               	movf	___ftdiv@exp,w
  2636  04D9  1D03               	btfss	3,2
  2637  04DA  2CE2               	goto	l1342
  2638  04DB  3000               	movlw	0
  2639  04DC  00A0               	movwf	?___ftdiv
  2640  04DD  3000               	movlw	0
  2641  04DE  00A1               	movwf	?___ftdiv+1
  2642  04DF  3000               	movlw	0
  2643  04E0  00A2               	movwf	?___ftdiv+2
  2644  04E1  0008               	return
  2645  04E2                     l1342:	
  2646  04E2  0820               	movf	___ftdiv@f2,w
  2647  04E3  00A6               	movwf	??___ftdiv
  2648  04E4  0821               	movf	___ftdiv@f2+1,w
  2649  04E5  00A7               	movwf	??___ftdiv+1
  2650  04E6  0822               	movf	___ftdiv@f2+2,w
  2651  04E7  00A8               	movwf	??___ftdiv+2
  2652  04E8  1003               	clrc
  2653  04E9  0D27               	rlf	??___ftdiv+1,w
  2654  04EA  0D28               	rlf	??___ftdiv+2,w
  2655  04EB  00A9               	movwf	??___ftdiv+3
  2656  04EC  0829               	movf	??___ftdiv+3,w
  2657  04ED  00AF               	movwf	___ftdiv@sign
  2658  04EE  082F               	movf	___ftdiv@sign,w
  2659  04EF  1D03               	btfss	3,2
  2660  04F0  2CF8               	goto	l1348
  2661  04F1  3000               	movlw	0
  2662  04F2  00A0               	movwf	?___ftdiv
  2663  04F3  3000               	movlw	0
  2664  04F4  00A1               	movwf	?___ftdiv+1
  2665  04F5  3000               	movlw	0
  2666  04F6  00A2               	movwf	?___ftdiv+2
  2667  04F7  0008               	return
  2668  04F8                     l1348:	
  2669  04F8  3000               	movlw	0
  2670  04F9  00AB               	movwf	___ftdiv@f3
  2671  04FA  3000               	movlw	0
  2672  04FB  00AC               	movwf	___ftdiv@f3+1
  2673  04FC  3000               	movlw	0
  2674  04FD  00AD               	movwf	___ftdiv@f3+2
  2675  04FE  3089               	movlw	137
  2676  04FF  072F               	addwf	___ftdiv@sign,w
  2677  0500  00A6               	movwf	??___ftdiv
  2678  0501  0826               	movf	??___ftdiv,w
  2679  0502  02AE               	subwf	___ftdiv@exp,f
  2680  0503  0823               	movf	___ftdiv@f1,w
  2681  0504  00A6               	movwf	??___ftdiv
  2682  0505  0824               	movf	___ftdiv@f1+1,w
  2683  0506  00A7               	movwf	??___ftdiv+1
  2684  0507  0825               	movf	___ftdiv@f1+2,w
  2685  0508  00A8               	movwf	??___ftdiv+2
  2686  0509  3010               	movlw	16
  2687  050A                     u1245:	
  2688  050A  36A8               	lsrf	??___ftdiv+2,f
  2689  050B  0CA7               	rrf	??___ftdiv+1,f
  2690  050C  0CA6               	rrf	??___ftdiv,f
  2691  050D  0B89               	decfsz	9,f
  2692  050E  2D0A               	goto	u1245
  2693  050F  0826               	movf	??___ftdiv,w
  2694  0510  00A9               	movwf	??___ftdiv+3
  2695  0511  0829               	movf	??___ftdiv+3,w
  2696  0512  00AF               	movwf	___ftdiv@sign
  2697  0513  0820               	movf	___ftdiv@f2,w
  2698  0514  00A6               	movwf	??___ftdiv
  2699  0515  0821               	movf	___ftdiv@f2+1,w
  2700  0516  00A7               	movwf	??___ftdiv+1
  2701  0517  0822               	movf	___ftdiv@f2+2,w
  2702  0518  00A8               	movwf	??___ftdiv+2
  2703  0519  3010               	movlw	16
  2704  051A                     u1255:	
  2705  051A  36A8               	lsrf	??___ftdiv+2,f
  2706  051B  0CA7               	rrf	??___ftdiv+1,f
  2707  051C  0CA6               	rrf	??___ftdiv,f
  2708  051D  0B89               	decfsz	9,f
  2709  051E  2D1A               	goto	u1255
  2710  051F  0826               	movf	??___ftdiv,w
  2711  0520  00A9               	movwf	??___ftdiv+3
  2712  0521  0829               	movf	??___ftdiv+3,w
  2713  0522  06AF               	xorwf	___ftdiv@sign,f
  2714  0523  3080               	movlw	128
  2715  0524  00A6               	movwf	??___ftdiv
  2716  0525  0826               	movf	??___ftdiv,w
  2717  0526  05AF               	andwf	___ftdiv@sign,f
  2718  0527  17A4               	bsf	___ftdiv@f1+1,7
  2719  0528  30FF               	movlw	255
  2720  0529  05A3               	andwf	___ftdiv@f1,f
  2721  052A  30FF               	movlw	255
  2722  052B  05A4               	andwf	___ftdiv@f1+1,f
  2723  052C  3000               	movlw	0
  2724  052D  05A5               	andwf	___ftdiv@f1+2,f
  2725  052E  17A1               	bsf	___ftdiv@f2+1,7
  2726  052F  30FF               	movlw	255
  2727  0530  05A0               	andwf	___ftdiv@f2,f
  2728  0531  30FF               	movlw	255
  2729  0532  05A1               	andwf	___ftdiv@f2+1,f
  2730  0533  3000               	movlw	0
  2731  0534  05A2               	andwf	___ftdiv@f2+2,f
  2732  0535  3018               	movlw	24
  2733  0536  00A6               	movwf	??___ftdiv
  2734  0537  0826               	movf	??___ftdiv,w
  2735  0538  00AA               	movwf	___ftdiv@cntr
  2736  0539                     l1362:	
  2737  0539  3001               	movlw	1
  2738  053A                     u1265:	
  2739  053A  35AB               	lslf	___ftdiv@f3,f
  2740  053B  0DAC               	rlf	___ftdiv@f3+1,f
  2741  053C  0DAD               	rlf	___ftdiv@f3+2,f
  2742  053D  0B89               	decfsz	9,f
  2743  053E  2D3A               	goto	u1265
  2744  053F  0822               	movf	___ftdiv@f2+2,w
  2745  0540  0225               	subwf	___ftdiv@f1+2,w
  2746  0541  1D03               	skipz
  2747  0542  2D49               	goto	u1275
  2748  0543  0821               	movf	___ftdiv@f2+1,w
  2749  0544  0224               	subwf	___ftdiv@f1+1,w
  2750  0545  1D03               	skipz
  2751  0546  2D49               	goto	u1275
  2752  0547  0820               	movf	___ftdiv@f2,w
  2753  0548  0223               	subwf	___ftdiv@f1,w
  2754  0549                     u1275:	
  2755  0549  1C03               	skipc
  2756  054A  2D52               	goto	l1370
  2757  054B  0820               	movf	___ftdiv@f2,w
  2758  054C  02A3               	subwf	___ftdiv@f1,f
  2759  054D  0821               	movf	___ftdiv@f2+1,w
  2760  054E  3BA4               	subwfb	___ftdiv@f1+1,f
  2761  054F  0822               	movf	___ftdiv@f2+2,w
  2762  0550  3BA5               	subwfb	___ftdiv@f1+2,f
  2763  0551  142B               	bsf	___ftdiv@f3,0
  2764  0552                     l1370:	
  2765  0552  3001               	movlw	1
  2766  0553                     u1285:	
  2767  0553  35A3               	lslf	___ftdiv@f1,f
  2768  0554  0DA4               	rlf	___ftdiv@f1+1,f
  2769  0555  0DA5               	rlf	___ftdiv@f1+2,f
  2770  0556  0B89               	decfsz	9,f
  2771  0557  2D53               	goto	u1285
  2772  0558  3001               	movlw	1
  2773  0559  02AA               	subwf	___ftdiv@cntr,f
  2774  055A  1D03               	btfss	3,2
  2775  055B  2D39               	goto	l1362
  2776  055C  082B               	movf	___ftdiv@f3,w
  2777  055D  00F0               	movwf	___ftpack@arg
  2778  055E  082C               	movf	___ftdiv@f3+1,w
  2779  055F  00F1               	movwf	___ftpack@arg+1
  2780  0560  082D               	movf	___ftdiv@f3+2,w
  2781  0561  00F2               	movwf	___ftpack@arg+2
  2782  0562  082E               	movf	___ftdiv@exp,w
  2783  0563  00A6               	movwf	??___ftdiv
  2784  0564  0826               	movf	??___ftdiv,w
  2785  0565  00F3               	movwf	___ftpack@exp
  2786  0566  082F               	movf	___ftdiv@sign,w
  2787  0567  00A7               	movwf	??___ftdiv+1
  2788  0568  0827               	movf	??___ftdiv+1,w
  2789  0569  00F4               	movwf	___ftpack@sign
  2790  056A  3183  2355         	fcall	___ftpack
  2791  056C  0870               	movf	?___ftpack,w
  2792  056D  0020               	movlb	0	; select bank0
  2793  056E  00A0               	movwf	?___ftdiv
  2794  056F  0871               	movf	?___ftpack+1,w
  2795  0570  00A1               	movwf	?___ftdiv+1
  2796  0571  0872               	movf	?___ftpack+2,w
  2797  0572  00A2               	movwf	?___ftdiv+2
  2798  0573  0008               	return
  2799  0574                     __end_of___ftdiv:	
  2800                           
  2801                           	psect	text10
  2802  0171                     __ptext10:	
  2803 ;; *************** function ___awtoft *****************
  2804 ;; Defined at:
  2805 ;;		line 32 in file "/Applications/microchip/xc8/v1.45/sources/common/awtoft.c"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;  c               2    8[COMMON] int 
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;  sign            1   13[COMMON] unsigned char 
  2810 ;; Return value:  Size  Location     Type
  2811 ;;                  3    8[COMMON] float 
  2812 ;; Registers used:
  2813 ;;		wreg, status,2, status,0, pclath, cstack
  2814 ;; Tracked objects:
  2815 ;;		On entry : 0/0
  2816 ;;		On exit  : 0/0
  2817 ;;		Unchanged: 0/0
  2818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2819 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2820 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2821 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2822 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2823 ;;Total ram usage:        6 bytes
  2824 ;; Hardware stack levels used:    1
  2825 ;; Hardware stack levels required when called:    1
  2826 ;; This function calls:
  2827 ;;		___ftpack
  2828 ;; This function is called by:
  2829 ;;		_echo
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           
  2834                           ;psect for function ___awtoft
  2835  0171                     ___awtoft:	
  2836                           
  2837                           ;incstack = 0
  2838                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  2839  0171  01FD               	clrf	___awtoft@sign
  2840  0172  1FF9               	btfss	___awtoft@c+1,7
  2841  0173  297B               	goto	l1332
  2842  0174  09F8               	comf	___awtoft@c,f
  2843  0175  09F9               	comf	___awtoft@c+1,f
  2844  0176  0AF8               	incf	___awtoft@c,f
  2845  0177  1903               	skipnz
  2846  0178  0AF9               	incf	___awtoft@c+1,f
  2847  0179  01FD               	clrf	___awtoft@sign
  2848  017A  0AFD               	incf	___awtoft@sign,f
  2849  017B                     l1332:	
  2850  017B  0878               	movf	___awtoft@c,w
  2851  017C  00F0               	movwf	___ftpack@arg
  2852  017D  0879               	movf	___awtoft@c+1,w
  2853  017E  00F1               	movwf	___ftpack@arg+1
  2854  017F  01F2               	clrf	___ftpack@arg+2
  2855  0180  308E               	movlw	142
  2856  0181  00FB               	movwf	??___awtoft
  2857  0182  087B               	movf	??___awtoft,w
  2858  0183  00F3               	movwf	___ftpack@exp
  2859  0184  087D               	movf	___awtoft@sign,w
  2860  0185  00FC               	movwf	??___awtoft+1
  2861  0186  087C               	movf	??___awtoft+1,w
  2862  0187  00F4               	movwf	___ftpack@sign
  2863  0188  3183  2355         	fcall	___ftpack
  2864  018A  0870               	movf	?___ftpack,w
  2865  018B  00F8               	movwf	?___awtoft
  2866  018C  0871               	movf	?___ftpack+1,w
  2867  018D  00F9               	movwf	?___awtoft+1
  2868  018E  0872               	movf	?___ftpack+2,w
  2869  018F  00FA               	movwf	?___awtoft+2
  2870  0190  0008               	return
  2871  0191                     __end_of___awtoft:	
  2872                           
  2873                           	psect	text11
  2874  0355                     __ptext11:	
  2875 ;; *************** function ___ftpack *****************
  2876 ;; Defined at:
  2877 ;;		line 62 in file "/Applications/microchip/xc8/v1.45/sources/common/float.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;  arg             3    0[COMMON] unsigned um
  2880 ;;  exp             1    3[COMMON] unsigned char 
  2881 ;;  sign            1    4[COMMON] unsigned char 
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;		None
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  3    0[COMMON] float 
  2886 ;; Registers used:
  2887 ;;		wreg, status,2, status,0
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2893 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2895 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2896 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2897 ;;Total ram usage:        8 bytes
  2898 ;; Hardware stack levels used:    1
  2899 ;; This function calls:
  2900 ;;		Nothing
  2901 ;; This function is called by:
  2902 ;;		___awtoft
  2903 ;;		___ftdiv
  2904 ;;		___ftmul
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           
  2909                           ;psect for function ___ftpack
  2910  0355                     ___ftpack:	
  2911                           
  2912                           ;incstack = 0
  2913                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2914  0355  0873               	movf	___ftpack@exp,w
  2915  0356  1903               	btfsc	3,2
  2916  0357  2B5D               	goto	l1212
  2917  0358  0872               	movf	___ftpack@arg+2,w
  2918  0359  0471               	iorwf	___ftpack@arg+1,w
  2919  035A  0470               	iorwf	___ftpack@arg,w
  2920  035B  1D03               	skipz
  2921  035C  2B6E               	goto	l1218
  2922  035D                     l1212:	
  2923  035D  3000               	movlw	0
  2924  035E  00F0               	movwf	?___ftpack
  2925  035F  3000               	movlw	0
  2926  0360  00F1               	movwf	?___ftpack+1
  2927  0361  3000               	movlw	0
  2928  0362  00F2               	movwf	?___ftpack+2
  2929  0363  0008               	return
  2930  0364                     l1216:	
  2931  0364  3001               	movlw	1
  2932  0365  00F5               	movwf	??___ftpack
  2933  0366  0875               	movf	??___ftpack,w
  2934  0367  07F3               	addwf	___ftpack@exp,f
  2935  0368  3001               	movlw	1
  2936  0369                     u975:	
  2937  0369  36F2               	lsrf	___ftpack@arg+2,f
  2938  036A  0CF1               	rrf	___ftpack@arg+1,f
  2939  036B  0CF0               	rrf	___ftpack@arg,f
  2940  036C  0B89               	decfsz	9,f
  2941  036D  2B69               	goto	u975
  2942  036E                     l1218:	
  2943  036E  30FE               	movlw	254
  2944  036F  0572               	andwf	___ftpack@arg+2,w
  2945  0370  1903               	btfsc	3,2
  2946  0371  2B87               	goto	l395
  2947  0372  2B64               	goto	l1216
  2948  0373                     l1220:	
  2949  0373  3001               	movlw	1
  2950  0374  00F5               	movwf	??___ftpack
  2951  0375  0875               	movf	??___ftpack,w
  2952  0376  07F3               	addwf	___ftpack@exp,f
  2953  0377  3001               	movlw	1
  2954  0378  07F0               	addwf	___ftpack@arg,f
  2955  0379  3000               	movlw	0
  2956  037A  1803               	skipnc
  2957  037B  3001               	movlw	1
  2958  037C  07F1               	addwf	___ftpack@arg+1,f
  2959  037D  3000               	movlw	0
  2960  037E  1803               	skipnc
  2961  037F  3001               	movlw	1
  2962  0380  07F2               	addwf	___ftpack@arg+2,f
  2963  0381  3001               	movlw	1
  2964  0382                     u995:	
  2965  0382  36F2               	lsrf	___ftpack@arg+2,f
  2966  0383  0CF1               	rrf	___ftpack@arg+1,f
  2967  0384  0CF0               	rrf	___ftpack@arg,f
  2968  0385  0B89               	decfsz	9,f
  2969  0386  2B82               	goto	u995
  2970  0387                     l395:	
  2971  0387  30FF               	movlw	255
  2972  0388  0572               	andwf	___ftpack@arg+2,w
  2973  0389  1903               	btfsc	3,2
  2974  038A  2B94               	goto	l1228
  2975  038B  2B73               	goto	l1220
  2976  038C                     l1226:	
  2977  038C  3001               	movlw	1
  2978  038D  02F3               	subwf	___ftpack@exp,f
  2979  038E  3001               	movlw	1
  2980  038F                     u1015:	
  2981  038F  35F0               	lslf	___ftpack@arg,f
  2982  0390  0DF1               	rlf	___ftpack@arg+1,f
  2983  0391  0DF2               	rlf	___ftpack@arg+2,f
  2984  0392  0B89               	decfsz	9,f
  2985  0393  2B8F               	goto	u1015
  2986  0394                     l1228:	
  2987  0394  1BF1               	btfsc	___ftpack@arg+1,7
  2988  0395  2B9A               	goto	l402
  2989  0396  3002               	movlw	2
  2990  0397  0273               	subwf	___ftpack@exp,w
  2991  0398  1803               	skipnc
  2992  0399  2B8C               	goto	l1226
  2993  039A                     l402:	
  2994  039A  1873               	btfsc	___ftpack@exp,0
  2995  039B  2BA2               	goto	l403
  2996  039C  30FF               	movlw	255
  2997  039D  05F0               	andwf	___ftpack@arg,f
  2998  039E  307F               	movlw	127
  2999  039F  05F1               	andwf	___ftpack@arg+1,f
  3000  03A0  30FF               	movlw	255
  3001  03A1  05F2               	andwf	___ftpack@arg+2,f
  3002  03A2                     l403:	
  3003  03A2  1003               	clrc
  3004  03A3  0CF3               	rrf	___ftpack@exp,f
  3005  03A4  0873               	movf	___ftpack@exp,w
  3006  03A5  00F5               	movwf	??___ftpack
  3007  03A6  01F6               	clrf	??___ftpack+1
  3008  03A7  01F7               	clrf	??___ftpack+2
  3009  03A8  3010               	movlw	16
  3010  03A9                     u1055:	
  3011  03A9  35F5               	lslf	??___ftpack,f
  3012  03AA  0DF6               	rlf	??___ftpack+1,f
  3013  03AB  0DF7               	rlf	??___ftpack+2,f
  3014  03AC  0B89               	decfsz	9,f
  3015  03AD  2BA9               	goto	u1055
  3016  03AE  0875               	movf	??___ftpack,w
  3017  03AF  04F0               	iorwf	___ftpack@arg,f
  3018  03B0  0876               	movf	??___ftpack+1,w
  3019  03B1  04F1               	iorwf	___ftpack@arg+1,f
  3020  03B2  0877               	movf	??___ftpack+2,w
  3021  03B3  04F2               	iorwf	___ftpack@arg+2,f
  3022  03B4  0874               	movf	___ftpack@sign,w
  3023  03B5  1903               	btfsc	3,2
  3024  03B6  0008               	return
  3025  03B7  17F2               	bsf	___ftpack@arg+2,7
  3026  03B8  0008               	return
  3027  03B9                     __end_of___ftpack:	
  3028                           
  3029                           	psect	text12
  3030  0157                     __ptext12:	
  3031 ;; *************** function _Lcd_Write_String *****************
  3032 ;; Defined at:
  3033 ;;		line 117 in file "lcd.h"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;  a               2    5[COMMON] PTR unsigned char 
  3036 ;;		 -> STR_10(4), STR_9(6), STR_8(11), STR_7(4), 
  3037 ;;		 -> STR_6(6), STR_5(15), STR_4(4), STR_3(6), 
  3038 ;;		 -> STR_2(11), main@bufB(8), main@bufA(8), STR_1(16), 
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;  i               2    8[COMMON] int 
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  1    wreg      void 
  3043 ;; Registers used:
  3044 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3050 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3051 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3052 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3053 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3054 ;;Total ram usage:        5 bytes
  3055 ;; Hardware stack levels used:    1
  3056 ;; Hardware stack levels required when called:    2
  3057 ;; This function calls:
  3058 ;;		_Lcd_Write_Char
  3059 ;; This function is called by:
  3060 ;;		_main
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           
  3065                           ;psect for function _Lcd_Write_String
  3066  0157                     _Lcd_Write_String:	
  3067                           
  3068                           ;lcd.h: 118: int i;
  3069                           ;lcd.h: 119: for(i=0;a[i]!='\0';i++)
  3070                           
  3071                           ;incstack = 0
  3072                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3073  0157  01F8               	clrf	Lcd_Write_String@i
  3074  0158  01F9               	clrf	Lcd_Write_String@i+1
  3075  0159                     l1538:	
  3076  0159  0875               	movf	Lcd_Write_String@a,w
  3077  015A  0778               	addwf	Lcd_Write_String@i,w
  3078  015B  0084               	movwf	4
  3079  015C  0876               	movf	Lcd_Write_String@a+1,w
  3080  015D  3D79               	addwfc	Lcd_Write_String@i+1,w
  3081  015E  0085               	movwf	5
  3082  015F  0012               	moviw fsr0++
  3083  0160  1903               	btfsc	3,2
  3084  0161  0008               	return
  3085                           
  3086                           ;lcd.h: 120: Lcd_Write_Char(a[i]);
  3087  0162  0875               	movf	Lcd_Write_String@a,w
  3088  0163  0778               	addwf	Lcd_Write_String@i,w
  3089  0164  0084               	movwf	4
  3090  0165  0876               	movf	Lcd_Write_String@a+1,w
  3091  0166  3D79               	addwfc	Lcd_Write_String@i+1,w
  3092  0167  0085               	movwf	5
  3093  0168  0800               	movf	0,w	;code access
  3094  0169  3181  21E1  3181   	fcall	_Lcd_Write_Char
  3095  016C  3001               	movlw	1
  3096  016D  07F8               	addwf	Lcd_Write_String@i,f
  3097  016E  3000               	movlw	0
  3098  016F  3DF9               	addwfc	Lcd_Write_String@i+1,f
  3099  0170  2959               	goto	l1538
  3100  0171                     __end_of_Lcd_Write_String:	
  3101                           
  3102                           	psect	text13
  3103  01E1                     __ptext13:	
  3104 ;; *************** function _Lcd_Write_Char *****************
  3105 ;; Defined at:
  3106 ;;		line 100 in file "lcd.h"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;  a               1    wreg     unsigned char 
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;  a               1    4[COMMON] unsigned char 
  3111 ;;  y               1    3[COMMON] unsigned char 
  3112 ;;  temp            1    2[COMMON] unsigned char 
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  1    wreg      void 
  3115 ;; Registers used:
  3116 ;;		wreg, status,2, status,0, pclath, cstack
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3123 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3124 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3125 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3126 ;;Total ram usage:        4 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; Hardware stack levels required when called:    1
  3129 ;; This function calls:
  3130 ;;		_Lcd_Port
  3131 ;; This function is called by:
  3132 ;;		_Lcd_Write_String
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           
  3137                           ;psect for function _Lcd_Write_Char
  3138  01E1                     _Lcd_Write_Char:	
  3139                           
  3140                           ;incstack = 0
  3141                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3142                           ;Lcd_Write_Char@a stored from wreg
  3143  01E1  00F4               	movwf	Lcd_Write_Char@a
  3144                           
  3145                           ;lcd.h: 101: RC6 = 0;
  3146  01E2  0020               	movlb	0	; select bank0
  3147  01E3  130E               	bcf	14,6	;volatile
  3148                           
  3149                           ;lcd.h: 102: char temp,y;
  3150                           ;lcd.h: 103: temp = a&0x0F;
  3151  01E4  0874               	movf	Lcd_Write_Char@a,w
  3152  01E5  390F               	andlw	15
  3153  01E6  00F1               	movwf	??_Lcd_Write_Char
  3154  01E7  0871               	movf	??_Lcd_Write_Char,w
  3155  01E8  00F2               	movwf	Lcd_Write_Char@temp
  3156                           
  3157                           ;lcd.h: 104: y = a&0xF0;
  3158  01E9  0874               	movf	Lcd_Write_Char@a,w
  3159  01EA  39F0               	andlw	240
  3160  01EB  00F1               	movwf	??_Lcd_Write_Char
  3161  01EC  0871               	movf	??_Lcd_Write_Char,w
  3162  01ED  00F3               	movwf	Lcd_Write_Char@y
  3163                           
  3164                           ;lcd.h: 105: RC0 = 1;
  3165  01EE  140E               	bsf	14,0	;volatile
  3166                           
  3167                           ;lcd.h: 106: Lcd_Port(y>>4);
  3168  01EF  0873               	movf	Lcd_Write_Char@y,w
  3169  01F0  00F1               	movwf	??_Lcd_Write_Char
  3170  01F1  3004               	movlw	4
  3171  01F2                     u1205:	
  3172  01F2  36F1               	lsrf	??_Lcd_Write_Char,f
  3173  01F3  0B89               	decfsz	9,f
  3174  01F4  29F2               	goto	u1205
  3175  01F5  0871               	movf	??_Lcd_Write_Char,w
  3176  01F6  3181  213F  3181   	fcall	_Lcd_Port
  3177                           
  3178                           ;lcd.h: 107: RC3 = 1;
  3179  01F9  0020               	movlb	0	; select bank0
  3180  01FA  158E               	bsf	14,3	;volatile
  3181                           
  3182                           ;lcd.h: 108: _delay((unsigned long)((40)*(8000000/4000000.0)));
  3183  01FB  301A               	movlw	26
  3184  01FC                     u1857:	
  3185  01FC  0B89               	decfsz	9,f
  3186  01FD  29FC               	goto	u1857
  3187  01FE  3200               	nop2
  3188                           
  3189                           ;lcd.h: 109: RC3 = 0;
  3190  01FF  0020               	movlb	0	; select bank0
  3191  0200  118E               	bcf	14,3	;volatile
  3192                           
  3193                           ;lcd.h: 110: Lcd_Port(temp);
  3194  0201  0872               	movf	Lcd_Write_Char@temp,w
  3195  0202  3181  213F  3181   	fcall	_Lcd_Port
  3196                           
  3197                           ;lcd.h: 111: RC3 = 1;
  3198  0205  0020               	movlb	0	; select bank0
  3199  0206  158E               	bsf	14,3	;volatile
  3200                           
  3201                           ;lcd.h: 112: _delay((unsigned long)((40)*(8000000/4000000.0)));
  3202  0207  301A               	movlw	26
  3203  0208                     u1867:	
  3204  0208  0B89               	decfsz	9,f
  3205  0209  2A08               	goto	u1867
  3206  020A  3200               	nop2
  3207                           
  3208                           ;lcd.h: 113: RC3 = 0;
  3209  020B  0020               	movlb	0	; select bank0
  3210  020C  118E               	bcf	14,3	;volatile
  3211                           
  3212                           ;lcd.h: 114: RC6 = 1;
  3213  020D  170E               	bsf	14,6	;volatile
  3214  020E  0008               	return
  3215  020F                     __end_of_Lcd_Write_Char:	
  3216                           
  3217                           	psect	text14
  3218  0271                     __ptext14:	
  3219 ;; *************** function _Lcd_Set_Cursor *****************
  3220 ;; Defined at:
  3221 ;;		line 62 in file "lcd.h"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;  a               1    wreg     unsigned char 
  3224 ;;  b               1    3[COMMON] unsigned char 
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;  a               1    6[COMMON] unsigned char 
  3227 ;;  temp            1    9[COMMON] unsigned char 
  3228 ;;  y               1    8[COMMON] unsigned char 
  3229 ;;  z               1    7[COMMON] unsigned char 
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  1    wreg      void 
  3232 ;; Registers used:
  3233 ;;		wreg, status,2, status,0, pclath, cstack
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3239 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3240 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3241 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3242 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3243 ;;Total ram usage:        7 bytes
  3244 ;; Hardware stack levels used:    1
  3245 ;; Hardware stack levels required when called:    2
  3246 ;; This function calls:
  3247 ;;		_Lcd_Cmd
  3248 ;; This function is called by:
  3249 ;;		_main
  3250 ;; This function uses a non-reentrant model
  3251 ;;
  3252                           
  3253                           
  3254                           ;psect for function _Lcd_Set_Cursor
  3255  0271                     _Lcd_Set_Cursor:	
  3256                           
  3257                           ;incstack = 0
  3258                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3259                           ;Lcd_Set_Cursor@a stored from wreg
  3260  0271  00F6               	movwf	Lcd_Set_Cursor@a
  3261                           
  3262                           ;lcd.h: 63: char temp,z,y;
  3263                           ;lcd.h: 64: if(a == 1)
  3264  0272  0376               	decf	Lcd_Set_Cursor@a,w
  3265  0273  1D03               	btfss	3,2
  3266  0274  2A91               	goto	l1512
  3267                           
  3268                           ;lcd.h: 65: {
  3269                           ;lcd.h: 66: temp = 0x80 + b - 1;
  3270  0275  0873               	movf	Lcd_Set_Cursor@b,w
  3271  0276  3E7F               	addlw	127
  3272  0277  00F4               	movwf	??_Lcd_Set_Cursor
  3273  0278  0874               	movf	??_Lcd_Set_Cursor,w
  3274  0279  00F9               	movwf	Lcd_Set_Cursor@temp
  3275                           
  3276                           ;lcd.h: 67: z = temp>>4;
  3277  027A  0879               	movf	Lcd_Set_Cursor@temp,w
  3278  027B  00F4               	movwf	??_Lcd_Set_Cursor
  3279  027C  3004               	movlw	4
  3280  027D                     u1565:	
  3281  027D  36F4               	lsrf	??_Lcd_Set_Cursor,f
  3282  027E  0B89               	decfsz	9,f
  3283  027F  2A7D               	goto	u1565
  3284  0280  0874               	movf	??_Lcd_Set_Cursor,w
  3285  0281  00F5               	movwf	??_Lcd_Set_Cursor+1
  3286  0282  0875               	movf	??_Lcd_Set_Cursor+1,w
  3287  0283  00F7               	movwf	Lcd_Set_Cursor@z
  3288                           
  3289                           ;lcd.h: 68: y = temp & 0x0F;
  3290  0284  0879               	movf	Lcd_Set_Cursor@temp,w
  3291  0285  390F               	andlw	15
  3292  0286  00F4               	movwf	??_Lcd_Set_Cursor
  3293  0287  0874               	movf	??_Lcd_Set_Cursor,w
  3294  0288  00F8               	movwf	Lcd_Set_Cursor@y
  3295                           
  3296                           ;lcd.h: 69: Lcd_Cmd(z);
  3297  0289  0877               	movf	Lcd_Set_Cursor@z,w
  3298  028A  3181  2129  3182   	fcall	_Lcd_Cmd
  3299                           
  3300                           ;lcd.h: 70: Lcd_Cmd(y);
  3301  028D  0878               	movf	Lcd_Set_Cursor@y,w
  3302  028E  3181  2129         	fcall	_Lcd_Cmd
  3303                           
  3304                           ;lcd.h: 71: }
  3305  0290  0008               	return
  3306  0291                     l1512:	
  3307                           
  3308                           ;lcd.h: 72: else if(a == 2)
  3309  0291  3002               	movlw	2
  3310  0292  0676               	xorwf	Lcd_Set_Cursor@a,w
  3311  0293  1D03               	btfss	3,2
  3312  0294  0008               	return
  3313                           
  3314                           ;lcd.h: 73: {
  3315                           ;lcd.h: 74: temp = 0xC0 + b - 1;
  3316  0295  0873               	movf	Lcd_Set_Cursor@b,w
  3317  0296  3EBF               	addlw	191
  3318  0297  00F4               	movwf	??_Lcd_Set_Cursor
  3319  0298  0874               	movf	??_Lcd_Set_Cursor,w
  3320  0299  00F9               	movwf	Lcd_Set_Cursor@temp
  3321                           
  3322                           ;lcd.h: 75: z = temp>>4;
  3323  029A  0879               	movf	Lcd_Set_Cursor@temp,w
  3324  029B  00F4               	movwf	??_Lcd_Set_Cursor
  3325  029C  3004               	movlw	4
  3326  029D                     u1585:	
  3327  029D  36F4               	lsrf	??_Lcd_Set_Cursor,f
  3328  029E  0B89               	decfsz	9,f
  3329  029F  2A9D               	goto	u1585
  3330  02A0  0874               	movf	??_Lcd_Set_Cursor,w
  3331  02A1  00F5               	movwf	??_Lcd_Set_Cursor+1
  3332  02A2  0875               	movf	??_Lcd_Set_Cursor+1,w
  3333  02A3  00F7               	movwf	Lcd_Set_Cursor@z
  3334                           
  3335                           ;lcd.h: 76: y = temp & 0x0F;
  3336  02A4  0879               	movf	Lcd_Set_Cursor@temp,w
  3337  02A5  390F               	andlw	15
  3338  02A6  00F4               	movwf	??_Lcd_Set_Cursor
  3339  02A7  0874               	movf	??_Lcd_Set_Cursor,w
  3340  02A8  00F8               	movwf	Lcd_Set_Cursor@y
  3341                           
  3342                           ;lcd.h: 77: Lcd_Cmd(z);
  3343  02A9  0877               	movf	Lcd_Set_Cursor@z,w
  3344  02AA  3181  2129  3182   	fcall	_Lcd_Cmd
  3345                           
  3346                           ;lcd.h: 78: Lcd_Cmd(y);
  3347  02AD  0878               	movf	Lcd_Set_Cursor@y,w
  3348  02AE  3181  2129         	fcall	_Lcd_Cmd
  3349  02B0  0008               	return
  3350  02B1                     __end_of_Lcd_Set_Cursor:	
  3351                           
  3352                           	psect	text15
  3353  02B1                     __ptext15:	
  3354 ;; *************** function _Lcd_Init *****************
  3355 ;; Defined at:
  3356 ;;		line 82 in file "lcd.h"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;		None
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;		None
  3361 ;; Return value:  Size  Location     Type
  3362 ;;                  1    wreg      void 
  3363 ;; Registers used:
  3364 ;;		wreg, status,2, status,0, pclath, cstack
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3372 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3373 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3374 ;;Total ram usage:        1 bytes
  3375 ;; Hardware stack levels used:    1
  3376 ;; Hardware stack levels required when called:    2
  3377 ;; This function calls:
  3378 ;;		_Lcd_Cmd
  3379 ;;		_Lcd_Port
  3380 ;; This function is called by:
  3381 ;;		_main
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385                           
  3386                           ;psect for function _Lcd_Init
  3387  02B1                     _Lcd_Init:	
  3388                           
  3389                           ;lcd.h: 83: Lcd_Port(0x00);
  3390                           
  3391                           ;incstack = 0
  3392                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3393  02B1  3000               	movlw	0
  3394  02B2  3181  213F  3182   	fcall	_Lcd_Port
  3395                           
  3396                           ;lcd.h: 84: _delay((unsigned long)((20)*(8000000/4000.0)));
  3397  02B5  3034               	movlw	52
  3398  02B6  00F3               	movwf	??_Lcd_Init
  3399  02B7  30F2               	movlw	242
  3400  02B8                     u1877:	
  3401  02B8  0B89               	decfsz	9,f
  3402  02B9  2AB8               	goto	u1877
  3403  02BA  0BF3               	decfsz	??_Lcd_Init,f
  3404  02BB  2AB8               	goto	u1877
  3405                           
  3406                           ;lcd.h: 85: Lcd_Cmd(0x03);
  3407  02BC  3003               	movlw	3
  3408  02BD  3181  2129  3182   	fcall	_Lcd_Cmd
  3409                           
  3410                           ;lcd.h: 86: _delay((unsigned long)((5)*(8000000/4000.0)));
  3411  02C0  300D               	movlw	13
  3412  02C1  00F3               	movwf	??_Lcd_Init
  3413  02C2  30FC               	movlw	252
  3414  02C3                     u1887:	
  3415  02C3  0B89               	decfsz	9,f
  3416  02C4  2AC3               	goto	u1887
  3417  02C5  0BF3               	decfsz	??_Lcd_Init,f
  3418  02C6  2AC3               	goto	u1887
  3419                           
  3420                           ;lcd.h: 87: Lcd_Cmd(0x03);
  3421  02C7  3003               	movlw	3
  3422  02C8  3181  2129  3182   	fcall	_Lcd_Cmd
  3423                           
  3424                           ;lcd.h: 88: _delay((unsigned long)((11)*(8000000/4000.0)));
  3425  02CB  301D               	movlw	29
  3426  02CC  00F3               	movwf	??_Lcd_Init
  3427  02CD  3091               	movlw	145
  3428  02CE                     u1897:	
  3429  02CE  0B89               	decfsz	9,f
  3430  02CF  2ACE               	goto	u1897
  3431  02D0  0BF3               	decfsz	??_Lcd_Init,f
  3432  02D1  2ACE               	goto	u1897
  3433  02D2  0000               	nop
  3434                           
  3435                           ;lcd.h: 89: Lcd_Cmd(0x03);
  3436  02D3  3003               	movlw	3
  3437  02D4  3181  2129  3182   	fcall	_Lcd_Cmd
  3438                           
  3439                           ;lcd.h: 91: Lcd_Cmd(0x02);
  3440  02D7  3002               	movlw	2
  3441  02D8  3181  2129  3182   	fcall	_Lcd_Cmd
  3442                           
  3443                           ;lcd.h: 92: Lcd_Cmd(0x02);
  3444  02DB  3002               	movlw	2
  3445  02DC  3181  2129  3182   	fcall	_Lcd_Cmd
  3446                           
  3447                           ;lcd.h: 93: Lcd_Cmd(0x08);
  3448  02DF  3008               	movlw	8
  3449  02E0  3181  2129  3182   	fcall	_Lcd_Cmd
  3450                           
  3451                           ;lcd.h: 94: Lcd_Cmd(0x00);
  3452  02E3  3000               	movlw	0
  3453  02E4  3181  2129  3182   	fcall	_Lcd_Cmd
  3454                           
  3455                           ;lcd.h: 95: Lcd_Cmd(0x0C);
  3456  02E7  300C               	movlw	12
  3457  02E8  3181  2129  3182   	fcall	_Lcd_Cmd
  3458                           
  3459                           ;lcd.h: 96: Lcd_Cmd(0x00);
  3460  02EB  3000               	movlw	0
  3461  02EC  3181  2129  3182   	fcall	_Lcd_Cmd
  3462                           
  3463                           ;lcd.h: 97: Lcd_Cmd(0x06);
  3464  02EF  3006               	movlw	6
  3465  02F0  3181  2129         	fcall	_Lcd_Cmd
  3466  02F2  0008               	return
  3467  02F3                     __end_of_Lcd_Init:	
  3468                           
  3469                           	psect	text16
  3470  0121                     __ptext16:	
  3471 ;; *************** function _Lcd_Clear *****************
  3472 ;; Defined at:
  3473 ;;		line 57 in file "lcd.h"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;		None
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;		None
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  1    wreg      void 
  3480 ;; Registers used:
  3481 ;;		wreg, status,2, status,0, pclath, cstack
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3491 ;;Total ram usage:        0 bytes
  3492 ;; Hardware stack levels used:    1
  3493 ;; Hardware stack levels required when called:    2
  3494 ;; This function calls:
  3495 ;;		_Lcd_Cmd
  3496 ;; This function is called by:
  3497 ;;		_main
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           
  3502                           ;psect for function _Lcd_Clear
  3503  0121                     _Lcd_Clear:	
  3504                           
  3505                           ;lcd.h: 58: Lcd_Cmd(0);
  3506                           
  3507                           ;incstack = 0
  3508                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3509  0121  3000               	movlw	0
  3510  0122  3181  2129  3181   	fcall	_Lcd_Cmd
  3511                           
  3512                           ;lcd.h: 59: Lcd_Cmd(1);
  3513  0125  3001               	movlw	1
  3514  0126  3181  2129         	fcall	_Lcd_Cmd
  3515  0128  0008               	return
  3516  0129                     __end_of_Lcd_Clear:	
  3517                           
  3518                           	psect	text17
  3519  0129                     __ptext17:	
  3520 ;; *************** function _Lcd_Cmd *****************
  3521 ;; Defined at:
  3522 ;;		line 47 in file "lcd.h"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;  a               1    wreg     unsigned char 
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;  a               1    2[COMMON] unsigned char 
  3527 ;; Return value:  Size  Location     Type
  3528 ;;                  1    wreg      void 
  3529 ;; Registers used:
  3530 ;;		wreg, status,2, status,0, pclath, cstack
  3531 ;; Tracked objects:
  3532 ;;		On entry : 0/0
  3533 ;;		On exit  : 0/0
  3534 ;;		Unchanged: 0/0
  3535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3537 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3538 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3539 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3540 ;;Total ram usage:        2 bytes
  3541 ;; Hardware stack levels used:    1
  3542 ;; Hardware stack levels required when called:    1
  3543 ;; This function calls:
  3544 ;;		_Lcd_Port
  3545 ;; This function is called by:
  3546 ;;		_Lcd_Clear
  3547 ;;		_Lcd_Set_Cursor
  3548 ;;		_Lcd_Init
  3549 ;;		_Lcd_Shift_Right
  3550 ;;		_Lcd_Shift_Left
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           
  3555                           ;psect for function _Lcd_Cmd
  3556  0129                     _Lcd_Cmd:	
  3557                           
  3558                           ;incstack = 0
  3559                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3560                           ;Lcd_Cmd@a stored from wreg
  3561  0129  00F2               	movwf	Lcd_Cmd@a
  3562                           
  3563                           ;lcd.h: 48: RC6 = 0;
  3564  012A  0020               	movlb	0	; select bank0
  3565  012B  130E               	bcf	14,6	;volatile
  3566                           
  3567                           ;lcd.h: 49: RC0 = 0;
  3568  012C  100E               	bcf	14,0	;volatile
  3569                           
  3570                           ;lcd.h: 50: Lcd_Port(a);
  3571  012D  0872               	movf	Lcd_Cmd@a,w
  3572  012E  3181  213F  3181   	fcall	_Lcd_Port
  3573                           
  3574                           ;lcd.h: 51: RC3 = 1;
  3575  0131  0020               	movlb	0	; select bank0
  3576  0132  158E               	bsf	14,3	;volatile
  3577                           
  3578                           ;lcd.h: 52: _delay((unsigned long)((4)*(8000000/4000.0)));
  3579  0133  300B               	movlw	11
  3580  0134  00F1               	movwf	??_Lcd_Cmd
  3581  0135  3062               	movlw	98
  3582  0136                     u1907:	
  3583  0136  0B89               	decfsz	9,f
  3584  0137  2936               	goto	u1907
  3585  0138  0BF1               	decfsz	??_Lcd_Cmd,f
  3586  0139  2936               	goto	u1907
  3587  013A  3200               	nop2
  3588                           
  3589                           ;lcd.h: 53: RC3 = 0;
  3590  013B  0020               	movlb	0	; select bank0
  3591  013C  118E               	bcf	14,3	;volatile
  3592                           
  3593                           ;lcd.h: 54: RC6 = 1;
  3594  013D  170E               	bsf	14,6	;volatile
  3595  013E  0008               	return
  3596  013F                     __end_of_Lcd_Cmd:	
  3597                           
  3598                           	psect	text18
  3599  013F                     __ptext18:	
  3600 ;; *************** function _Lcd_Port *****************
  3601 ;; Defined at:
  3602 ;;		line 26 in file "lcd.h"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;  a               1    wreg     unsigned char 
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;  a               1    0[COMMON] unsigned char 
  3607 ;; Return value:  Size  Location     Type
  3608 ;;                  1    wreg      void 
  3609 ;; Registers used:
  3610 ;;		wreg
  3611 ;; Tracked objects:
  3612 ;;		On entry : 0/0
  3613 ;;		On exit  : 0/0
  3614 ;;		Unchanged: 0/0
  3615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3617 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3619 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3620 ;;Total ram usage:        1 bytes
  3621 ;; Hardware stack levels used:    1
  3622 ;; This function calls:
  3623 ;;		Nothing
  3624 ;; This function is called by:
  3625 ;;		_Lcd_Cmd
  3626 ;;		_Lcd_Init
  3627 ;;		_Lcd_Write_Char
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           
  3632                           ;psect for function _Lcd_Port
  3633  013F                     _Lcd_Port:	
  3634                           
  3635                           ;incstack = 0
  3636                           ; Regs used in _Lcd_Port: [wreg]
  3637                           ;Lcd_Port@a stored from wreg
  3638  013F  00F0               	movwf	Lcd_Port@a
  3639                           
  3640                           ;lcd.h: 27: if(a & 1)
  3641  0140  1C70               	btfss	Lcd_Port@a,0
  3642  0141  2945               	goto	l61
  3643                           
  3644                           ;lcd.h: 28: RB4 = 1;
  3645  0142  0020               	movlb	0	; select bank0
  3646  0143  160D               	bsf	13,4	;volatile
  3647  0144  2947               	goto	l1196
  3648  0145                     l61:	
  3649                           
  3650                           ;lcd.h: 29: else
  3651                           ;lcd.h: 30: RB4 = 0;
  3652  0145  0020               	movlb	0	; select bank0
  3653  0146  120D               	bcf	13,4	;volatile
  3654  0147                     l1196:	
  3655                           
  3656                           ;lcd.h: 32: if(a & 2)
  3657  0147  1CF0               	btfss	Lcd_Port@a,1
  3658  0148  294B               	goto	l63
  3659                           
  3660                           ;lcd.h: 33: RB5 = 1;
  3661  0149  168D               	bsf	13,5	;volatile
  3662  014A  294C               	goto	l1200
  3663  014B                     l63:	
  3664                           
  3665                           ;lcd.h: 34: else
  3666                           ;lcd.h: 35: RB5 = 0;
  3667  014B  128D               	bcf	13,5	;volatile
  3668  014C                     l1200:	
  3669                           
  3670                           ;lcd.h: 37: if(a & 4)
  3671  014C  1D70               	btfss	Lcd_Port@a,2
  3672  014D  2950               	goto	l65
  3673                           
  3674                           ;lcd.h: 38: RB6 = 1;
  3675  014E  170D               	bsf	13,6	;volatile
  3676  014F  2951               	goto	l1204
  3677  0150                     l65:	
  3678                           
  3679                           ;lcd.h: 39: else
  3680                           ;lcd.h: 40: RB6 = 0;
  3681  0150  130D               	bcf	13,6	;volatile
  3682  0151                     l1204:	
  3683                           
  3684                           ;lcd.h: 42: if(a & 8)
  3685  0151  1DF0               	btfss	Lcd_Port@a,3
  3686  0152  2955               	goto	l67
  3687                           
  3688                           ;lcd.h: 43: RB7 = 1;
  3689  0153  178D               	bsf	13,7	;volatile
  3690  0154  0008               	return
  3691  0155                     l67:	
  3692                           
  3693                           ;lcd.h: 44: else
  3694                           ;lcd.h: 45: RB7 = 0;
  3695  0155  138D               	bcf	13,7	;volatile
  3696  0156  0008               	return
  3697  0157                     __end_of_Lcd_Port:	
  3698  007E                     btemp	set	126	;btemp
  3699  007E                     wtemp0	set	126


Data Sizes:
    Strings     63
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     60      60
    BANK1            80     30      30
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> main@bufB(BANK1[8]), main@bufA(BANK1[8]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 8
		 -> main@bufB(BANK1[8]), main@bufA(BANK1[8]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> main@bufB(BANK1[8]), main@bufA(BANK1[8]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 8
		 -> main@bufB(BANK1[8]), main@bufA(BANK1[8]), 

    echo@sfrdev	PTR unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), PORTB(SFR0[1]), PORTA(SFR0[1]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 8
		 -> main@bufB(BANK1[8]), main@bufA(BANK1[8]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[4]), STR_9(CODE[6]), STR_8(CODE[11]), STR_7(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[15]), STR_4(CODE[4]), STR_3(CODE[6]), 
		 -> STR_2(CODE[11]), main@bufB(BANK1[8]), main@bufA(BANK1[8]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _echo->___awtoft
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_echo
    _itoa->_utoa
    _echo->___fttol
    ___fttol->___ftmul
    ___ftmul->___ftdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    32      4   10931
                                             54 BANK0      6     2      4
                                              0 BANK1     30    30      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                               _echo
                               _itoa
                          _pinConfig
 ---------------------------------------------------------------------------------
 (1) _pinConfig                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    1503
                                             13 COMMON     1     1      0
                                              4 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1074
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _echo                                                 8     6      2    6824
                                             46 BANK0      8     6      2
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     305
                                             32 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2100
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2054
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1812
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     5     3      2    1116
                                              5 COMMON     5     3      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     751
                                              3 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                              3 COMMON     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _echo
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
   _pinConfig

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3C      3C       5       75.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1E      1E       7       37.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Apr 14 17:08:27 2018

              __CFG_CP$OFF 0000                         l61 0145                         l63 014B  
                       l65 0150                         l67 0155                        l121 0447  
                      l122 044B                        l108 06CC                        l119 0443  
                      l402 039A                        l403 03A2                        l501 033F  
                      l395 0387                        l486 0426                        _RA0 0060  
                      _RC0 0070                        _RA5 0065                        _RB4 006C  
                      _RB5 006D                        _RC3 0073                        _RB6 006E  
                      _RB7 006F                        _RC6 0076               __CFG_CPD$OFF 0000  
                      u975 0369                        u995 0382               __CFG_BORV$LO 0000  
                      wreg 0009               __CFG_LVP$OFF 0000               ___ftdiv@cntr 002A  
             ___ftdiv@sign 002F                       l1200 014C                       l1204 0151  
                     l1220 0373                       l1212 035D                       l1216 0364  
                     l1226 038C                       l1218 036E                       l1402 05DC  
                     l1250 0245                       l1228 0394                       l1332 017B  
                     l1252 0251                       l1342 04E2                       l1414 05F8  
                     l1406 05E4                       l1262 026C                       l1512 0291  
                     l1280 01D3                       l1370 0552                       l1362 0539  
                     l1418 0600                       l1434 03D2                       l1258 0263  
                     l1274 01BB                       l1196 0147                       l1348 04F8  
                     l1460 041D                       l1452 0402                       l1276 01C7  
                     l1284 01DC                       l1700 07BD                       l1390 05A1  
                     l1462 0429                       l1454 0410                       l1384 058B  
                     l1560 045B                       l1472 02F9                       l1712 07F7  
                     l1704 07D4                       l1538 0159                       l1466 0437  
                     l1570 0466                       l1482 0317                       l1706 07E5  
                     l1572 0476                       l1636 070D                       l1558 0450  
                     l1666 07B9                       l1596 01A9                       l1668 066B  
                     STR_1 0800                       STR_2 082A                       STR_3 0835  
                     STR_4 083B                       STR_5 0810                       STR_6 0835  
                     STR_7 083B                       STR_8 081F                       STR_9 0835  
                     u1015 038F                       u1105 0252                       u1115 025C  
                     u1205 01F2                       u1125 0264                       u1055 03A9  
                     u1155 01BE                       u1245 050A                       u1405 0607  
                     u1325 05AD                       u1085 0248                       u1255 051A  
                     u1335 05BD                       u1175 01CD                       u1265 053A  
                     u1185 01D4                       u1275 0549                       u1355 05E5  
                     u1435 03D9                       u1604 046F                       u1285 0553  
                     u1365 05EB                       u1605 046E                       u1624 047F  
                     u1465 0403                       u1625 047E                       u1395 0601  
                     u1715 07F2                       u1565 027D                       u1495 041E  
                     u1655 075C                       u1807 0663                       u1585 029D  
                     u1817 07A9                       u1665 076A                       u1907 0136  
                     u1827 06C4                       u1837 0706                       u1685 0677  
                     u1847 0461                       u1695 0685                       u1857 01FC  
                     u1867 0208                       u1877 02B8                       u1797 062F  
                     u1887 02C3                       u1897 02CE               __CFG_WRT$OFF 0000  
        ?_Lcd_Write_String 0075                       _echo 0440                       _main 0628  
             ___ftpack@arg 0070                       _itoa 0191               ___ftpack@exp 0073  
                     fsr0h 0005                       fsr1h 0007                       indf0 0000  
                     fsr0l 0004                       indf1 0001                       fsr1l 0006  
                     btemp 007E                       _utoa 02F3                       start 0002  
       ??_Lcd_Write_String 0077              __CFG_IESO$OFF 0000            __end_of_Lcd_Cmd 013F  
            __CFG_MCLRE$ON 0000               ___ftmul@cntr 003E               ___ftmul@sign 003F  
             ___fttol@exp1 004D               ___fttol@lval 0049                      ?_echo 004E  
                    ?_main 0056                      ?_itoa 0024                      STR_10 083B  
            __CFG_WDTE$OFF 0000            __end_of___ftdiv 0574                      ?_utoa 0078  
          __end_of___ftmul 0628                      _T1CON 0018            __end_of___fttol 0440  
          __end_of___lwdiv 0271            __end_of___lwmod 01E1                      _TMR1H 0017  
                    _TMR1L 0016                      _PORTA 000C                      _PORTB 000D  
                    _PORTC 000E    __size_of_Lcd_Set_Cursor 0040                      _TRISA 008C  
                    _TRISB 008D                      _TRISC 008E             __CFG_FCMEN$OFF 0000  
            ___awtoft@sign 007D                      echo@a 0054              ___ftpack@sign 0074  
           __CFG_BOREN$OFF 0000                      utoa@c 0022                      utoa@v 0020  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 02F3  
         __end_of_Lcd_Port 0157            __initialization 07FD               __end_of_echo 04CB  
             __end_of_main 07FD               __end_of_itoa 01B5               __end_of_utoa 0355  
                   ??_echo 0050                     ??_main 005A              ___fttol@sign1 0048  
                   ??_itoa 007D                     ??_utoa 007C         __size_of_Lcd_Clear 0008  
           __CFG_PLLEN$OFF 0000           __end_of___awtoft 0191                     _ANSELA 018C  
                   _ANSELB 018D                     _ANSELC 018E           __end_of___ftpack 03B9  
                   _OSCCON 0099                  ??_Lcd_Cmd 0071                     _TMR1ON 00C0  
  __size_of_Lcd_Write_Char 002E             __CFG_PWRTE$OFF 0000          main@Delay_counter 00B4  
           __CFG_STVREN$ON 0000              main@ping_val1 00BA              main@ping_val2 00BC  
                ??___ftdiv 0026                  ??___ftmul 0036                  ??___fttol 0044  
                ??___lwdiv 0074                  ??___lwmod 0074      ___ftmul@f3_as_product 003B  
                   itoa@cp 0028            Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0073  
          Lcd_Set_Cursor@y 0078            Lcd_Set_Cursor@z 0077    __end_of__initialization 07FD  
        __end_of_Lcd_Clear 0129                 ___ftdiv@f1 0023                 ___ftdiv@f2 0020  
               ___ftdiv@f3 002B                 ___awtoft@c 0078                 ___ftmul@f1 0030  
               ___ftmul@f2 0033                 ___fttol@f1 0040             __pcstackCOMMON 0070  
           _Lcd_Set_Cursor 0271                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
       __size_of_pinConfig 002E                 __pmaintext 0628  __size_of_Lcd_Write_String 001A  
                ?___awtoft 0078                  ?___ftpack 0070     __end_of_Lcd_Set_Cursor 02B1  
               ??_Lcd_Init 0073                 ??_Lcd_Port 0070                    _RXDTSEL 08EF  
                  _TXCKSEL 08EA             main@initialize 00B6             _Lcd_Write_Char 01E1  
                  _Lcd_Cmd 0129                 echo@sfrdev 0052                    ___ftdiv 04CB  
                  ___ftmul 0574                    ___fttol 03B9                    ___lwdiv 023D  
                  ___lwmod 01B5                 ??___awtoft 007B                 ??___ftpack 0075  
          ?_Lcd_Set_Cursor 0073                    __ptext1 020F                    __ptext2 0191  
                  __ptext3 02F3                    __ptext4 01B5                    __ptext5 023D  
                  __ptext6 0440                    __ptext7 03B9                    __ptext8 0574  
                  __ptext9 04CB                    echo@pin 004E          __end_of_pinConfig 023D  
   __end_of_Lcd_Write_Char 020F       end_of_initialization 07FD                    itoa@buf 0029  
                  itoa@val 0024                  Lcd_Port@a 0070                    utoa@buf 0023  
                  utoa@val 0078           __CFG_FOSC$INTOSC 0000            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0075          Lcd_Write_String@i 0078                ___ftdiv@exp 002E  
               main@toggle 00B8                ___ftmul@exp 003A                  _Lcd_Clear 0121  
         _Lcd_Write_String 0157        start_initialization 07FD          __size_of_Lcd_Init 0042  
        __size_of_Lcd_Port 0018                 ?_Lcd_Clear 0070            Lcd_Write_Char@a 0074  
          Lcd_Write_Char@y 0073          __size_of___awtoft 0020          __size_of___ftpack 0064  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
                 ?_Lcd_Cmd 0070           ___lwdiv@dividend 0072           ??_Lcd_Set_Cursor 0074  
                 ?___ftdiv 0020                   ?___ftmul 0030                   ?___fttol 0040  
                 ?___lwdiv 0070                   ?___lwmod 0070           ___lwdiv@quotient 0075  
                _pinConfig 020F                   Lcd_Cmd@a 0072                ??_Lcd_Clear 0073  
                main@delay 00A0           ??_Lcd_Write_Char 0071                   _Lcd_Init 02B1  
                 _Lcd_Port 013F                 ?_pinConfig 0070   __end_of_Lcd_Write_String 0171  
         __size_of_Lcd_Cmd 0016           __size_of___ftdiv 00A9           __size_of___ftmul 00B4  
         __size_of___fttol 0087           __size_of___lwdiv 0034           __size_of___lwmod 002C  
                 ___awtoft 0171                   ___ftpack 0355            ___lwdiv@divisor 0070  
          ___lwdiv@counter 0077                   __ptext10 0171                   __ptext11 0355  
                 __ptext12 0157                   __ptext13 01E1                   __ptext14 0271  
                 __ptext15 02B1                   __ptext16 0121                   __ptext17 0129  
                 __ptext18 013F                   echo@port 0051              __size_of_echo 008B  
            __size_of_main 01D5              __size_of_itoa 0024              __size_of_utoa 0062  
                 main@bufA 00A4                   main@bufB 00AC                   main@argc 0056  
                 main@argv 0058                   itoa@base 0026                ??_pinConfig 0070  
       Lcd_Write_Char@temp 0072           ___lwmod@dividend 0072          __CFG_CLKOUTEN$OFF 0000  
            main@LCD_count 00A2         Lcd_Set_Cursor@temp 0079              __pstringtext1 0800  
            __pstringtext2 0810              __pstringtext3 081F              __pstringtext4 082A  
            __pstringtext5 0835              __pstringtext6 083B              __pstringtext7 0000  
                 utoa@base 007A            ___lwmod@divisor 0070            ___lwmod@counter 0075  
