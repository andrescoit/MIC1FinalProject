

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Apr 15 03:42:42 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	stringtext6,global,class=STRCODE,delta=2
    12                           	psect	stringtext7,global,class=STRCODE,delta=2
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 1.45
    45                           ; Generated 16/11/2017 GMT
    46                           ; 
    47                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F1829 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  0111                     	;# 
   130  0112                     	;# 
   131  0113                     	;# 
   132  0114                     	;# 
   133  0115                     	;# 
   134  0116                     	;# 
   135  0117                     	;# 
   136  0118                     	;# 
   137  0119                     	;# 
   138  011A                     	;# 
   139  011B                     	;# 
   140  011D                     	;# 
   141  011E                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  018E                     	;# 
   145  0191                     	;# 
   146  0191                     	;# 
   147  0192                     	;# 
   148  0193                     	;# 
   149  0193                     	;# 
   150  0193                     	;# 
   151  0194                     	;# 
   152  0195                     	;# 
   153  0196                     	;# 
   154  0199                     	;# 
   155  019A                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019C                     	;# 
   159  019D                     	;# 
   160  019E                     	;# 
   161  019F                     	;# 
   162  020C                     	;# 
   163  020D                     	;# 
   164  020E                     	;# 
   165  0211                     	;# 
   166  0211                     	;# 
   167  0212                     	;# 
   168  0212                     	;# 
   169  0213                     	;# 
   170  0213                     	;# 
   171  0214                     	;# 
   172  0214                     	;# 
   173  0215                     	;# 
   174  0215                     	;# 
   175  0215                     	;# 
   176  0216                     	;# 
   177  0216                     	;# 
   178  0217                     	;# 
   179  0217                     	;# 
   180  0219                     	;# 
   181  021A                     	;# 
   182  021B                     	;# 
   183  021C                     	;# 
   184  021D                     	;# 
   185  021E                     	;# 
   186  021F                     	;# 
   187  0291                     	;# 
   188  0291                     	;# 
   189  0292                     	;# 
   190  0293                     	;# 
   191  0294                     	;# 
   192  0295                     	;# 
   193  0295                     	;# 
   194  0296                     	;# 
   195  0298                     	;# 
   196  0298                     	;# 
   197  0299                     	;# 
   198  029A                     	;# 
   199  029B                     	;# 
   200  029C                     	;# 
   201  029D                     	;# 
   202  029E                     	;# 
   203  0311                     	;# 
   204  0311                     	;# 
   205  0312                     	;# 
   206  0313                     	;# 
   207  0318                     	;# 
   208  0318                     	;# 
   209  0319                     	;# 
   210  031A                     	;# 
   211  038C                     	;# 
   212  038D                     	;# 
   213  038E                     	;# 
   214  0391                     	;# 
   215  0392                     	;# 
   216  0393                     	;# 
   217  0394                     	;# 
   218  0395                     	;# 
   219  0396                     	;# 
   220  039A                     	;# 
   221  039C                     	;# 
   222  039D                     	;# 
   223  039E                     	;# 
   224  039F                     	;# 
   225  0415                     	;# 
   226  0416                     	;# 
   227  0417                     	;# 
   228  041C                     	;# 
   229  041D                     	;# 
   230  041E                     	;# 
   231  0FE4                     	;# 
   232  0FE5                     	;# 
   233  0FE6                     	;# 
   234  0FE7                     	;# 
   235  0FE8                     	;# 
   236  0FE9                     	;# 
   237  0FEA                     	;# 
   238  0FEB                     	;# 
   239  0FED                     	;# 
   240  0FEE                     	;# 
   241  0FEF                     	;# 
   242                           
   243                           	psect	idataCOMMON
   244  07AD                     __pidataCOMMON:	
   245                           
   246                           ;initializer for _pdelay_counter
   247  07AD  3478               	retlw	low (_delay_counter| 0)
   248                           
   249                           ;initializer for _pisr_counter
   250  07AE  347A               	retlw	low (_isr_counter| 0)
   251                           
   252                           	psect	idataBANK0
   253  07AF                     __pidataBANK0:	
   254                           
   255                           ;initializer for _pinitialize
   256  07AF  346B               	retlw	low (_initialize| 0)
   257  0016                     _TMR1L	set	22
   258  0017                     _TMR1H	set	23
   259  0018                     _T1CON	set	24
   260  000B                     _INTCON	set	11
   261  000E                     _PORTC	set	14
   262  000D                     _PORTB	set	13
   263  000C                     _PORTA	set	12
   264  00C0                     _TMR1ON	set	192
   265  0060                     _RA0	set	96
   266  0065                     _RA5	set	101
   267  0073                     _RC3	set	115
   268  0070                     _RC0	set	112
   269  0076                     _RC6	set	118
   270  006F                     _RB7	set	111
   271  006E                     _RB6	set	110
   272  006D                     _RB5	set	109
   273  006C                     _RB4	set	108
   274  008E                     _TRISC	set	142
   275  008D                     _TRISB	set	141
   276  008C                     _TRISA	set	140
   277  0099                     _OSCCON	set	153
   278  0095                     _OPTION_REG	set	149
   279  08EF                     _RXDTSEL	set	2287
   280  08EA                     _TXCKSEL	set	2282
   281  018D                     _ANSELB	set	397
   282  018C                     _ANSELA	set	396
   283  018E                     _ANSELC	set	398
   284                           
   285                           	psect	stringtext1
   286  0766                     __pstringtext1:	
   287  0766                     STR_1:	
   288  0766  3457               	retlw	87	;'W'
   289  0767  3445               	retlw	69	;'E'
   290  0768  344C               	retlw	76	;'L'
   291  0769  3443               	retlw	67	;'C'
   292  076A  344F               	retlw	79	;'O'
   293  076B  344D               	retlw	77	;'M'
   294  076C  3445               	retlw	69	;'E'
   295  076D  3420               	retlw	32	;' '
   296  076E  3454               	retlw	84	;'T'
   297  076F  344F               	retlw	79	;'O'
   298  0770  3420               	retlw	32	;' '
   299  0771  3455               	retlw	85	;'U'
   300  0772  3454               	retlw	84	;'T'
   301  0773  3453               	retlw	83	;'S'
   302  0774  3441               	retlw	65	;'A'
   303  0775  3400               	retlw	0
   304                           
   305                           	psect	stringtext2
   306  0776                     __pstringtext2:	
   307  0776                     STR_5:	
   308  0776  344F               	retlw	79	;'O'
   309  0777  3475               	retlw	117	;'u'
   310  0778  3474               	retlw	116	;'t'
   311  0779  3420               	retlw	32	;' '
   312  077A  346F               	retlw	111	;'o'
   313  077B  3466               	retlw	102	;'f'
   314  077C  3420               	retlw	32	;' '
   315  077D  3452               	retlw	82	;'R'
   316  077E  3461               	retlw	97	;'a'
   317  077F  346E               	retlw	110	;'n'
   318  0780  3467               	retlw	103	;'g'
   319  0781  3465               	retlw	101	;'e'
   320  0782  343A               	retlw	58	;':'
   321  0783  3420               	retlw	32	;' '
   322  0784  3400               	retlw	0
   323                           
   324                           	psect	stringtext3
   325  0785                     __pstringtext3:	
   326  0785                     STR_8:	
   327  0785  3444               	retlw	68	;'D'
   328  0786  3469               	retlw	105	;'i'
   329  0787  3473               	retlw	115	;'s'
   330  0788  3474               	retlw	116	;'t'
   331  0789  3461               	retlw	97	;'a'
   332  078A  346E               	retlw	110	;'n'
   333  078B  3463               	retlw	99	;'c'
   334  078C  3465               	retlw	101	;'e'
   335  078D  343A               	retlw	58	;':'
   336  078E  3420               	retlw	32	;' '
   337  078F  3400               	retlw	0
   338                           
   339                           	psect	stringtext4
   340  0790                     __pstringtext4:	
   341  0790                     STR_2:	
   342  0790  3449               	retlw	73	;'I'
   343  0791  346E               	retlw	110	;'n'
   344  0792  3420               	retlw	32	;' '
   345  0793  3472               	retlw	114	;'r'
   346  0794  3461               	retlw	97	;'a'
   347  0795  346E               	retlw	110	;'n'
   348  0796  3467               	retlw	103	;'g'
   349  0797  3465               	retlw	101	;'e'
   350  0798  343A               	retlw	58	;':'
   351  0799  3420               	retlw	32	;' '
   352  079A  3400               	retlw	0
   353                           
   354                           	psect	stringtext5
   355  07A3                     __pstringtext5:	
   356  07A3                     STR_3:	
   357  07A3  3420               	retlw	32	;' '
   358  07A4  3463               	retlw	99	;'c'
   359  07A5  346D               	retlw	109	;'m'
   360  07A6  342C               	retlw	44	;','
   361  07A7  3420               	retlw	32	;' '
   362  07A8  3400               	retlw	0
   363                           
   364                           	psect	stringtext6
   365  07A9                     __pstringtext6:	
   366  07A9                     STR_4:	
   367  07A9  3420               	retlw	32	;' '
   368  07AA  3463               	retlw	99	;'c'
   369  07AB  346D               	retlw	109	;'m'
   370  07AC  3400               	retlw	0
   371                           
   372                           	psect	stringtext7
   373  0000                     __pstringtext7:	
   374  07A3                     
   375                           ; #config settings
   376  0000                     
   377                           	psect	cinit
   378  0037                     start_initialization:	
   379  0037                     __initialization:	
   380                           
   381                           ; Initialize objects allocated to COMMON
   382  0037  3187  27AD  3180   	fcall	__pidataCOMMON	;fetch initializer
   383  003A  00FC               	movwf	__pdataCOMMON& (0+127)
   384  003B  3187  27AE  3180   	fcall	__pidataCOMMON+1	;fetch initializer
   385  003E  00FD               	movwf	(__pdataCOMMON+1)& (0+127)
   386                           
   387                           ; Initialize objects allocated to BANK0
   388  003F  3187  27AF         	fcall	__pidataBANK0	;fetch initializer
   389  0041  00ED               	movwf	__pdataBANK0& (0+127)
   390                           
   391                           ; Clear objects allocated to COMMON
   392  0042  01F8               	clrf	__pbssCOMMON& (0+127)
   393  0043  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   394  0044  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   395  0045  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   396                           
   397                           ; Clear objects allocated to BANK0
   398  0046  01EB               	clrf	__pbssBANK0& (0+127)
   399  0047  01EC               	clrf	(__pbssBANK0+1)& (0+127)
   400  0048                     end_of_initialization:	
   401                           ;End of C runtime variable initialization code
   402                           
   403  0048                     __end_of__initialization:	
   404  0048  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   405  0049  0020               	movlb	0
   406  004A  3180  284C         	ljmp	_main	;jump to C main() function
   407                           
   408                           	psect	bssCOMMON
   409  0078                     __pbssCOMMON:	
   410  0078                     _delay_counter:	
   411  0078                     	ds	2
   412  007A                     _isr_counter:	
   413  007A                     	ds	2
   414                           
   415                           	psect	dataCOMMON
   416  007C                     __pdataCOMMON:	
   417  007C                     _pdelay_counter:	
   418  007C                     	ds	1
   419  007D                     _pisr_counter:	
   420  007D                     	ds	1
   421                           
   422                           	psect	bssBANK0
   423  006B                     __pbssBANK0:	
   424  006B                     _initialize:	
   425  006B                     	ds	2
   426                           
   427                           	psect	dataBANK0
   428  006D                     __pdataBANK0:	
   429  006D                     _pinitialize:	
   430  006D                     	ds	1
   431                           
   432                           	psect	cstackBANK1
   433  00A0                     __pcstackBANK1:	
   434  00A0                     main@bufA:	
   435                           
   436                           ; 8 bytes @ 0x0
   437  00A0                     	ds	8
   438  00A8                     main@bufB:	
   439                           
   440                           ; 8 bytes @ 0x8
   441  00A8                     	ds	8
   442  00B0                     main@toggle:	
   443                           
   444                           ; 2 bytes @ 0x10
   445  00B0                     	ds	2
   446  00B2                     main@ping_val1:	
   447                           
   448                           ; 2 bytes @ 0x12
   449  00B2                     	ds	2
   450  00B4                     main@ping_val2:	
   451                           
   452                           ; 2 bytes @ 0x14
   453  00B4                     	ds	2
   454                           
   455                           	psect	cstackCOMMON
   456  0070                     __pcstackCOMMON:	
   457  0070                     ?_pinConfig:	
   458  0070                     ?_Lcd_Port:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ?_Lcd_Cmd:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ?_Lcd_Clear:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0070                     ?_Lcd_Init:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ?_Lcd_Write_Char:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0070                     ?_ISR:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0070                     ?___awmod:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ___awmod@divisor:	
   480                           ; 2 bytes @ 0x0
   481                           
   482                           
   483                           ; 2 bytes @ 0x0
   484  0070                     	ds	2
   485  0072                     ___awmod@dividend:	
   486                           
   487                           ; 2 bytes @ 0x2
   488  0072                     	ds	2
   489  0074                     ??___awmod:	
   490                           
   491                           ; 1 bytes @ 0x4
   492  0074                     	ds	1
   493  0075                     ___awmod@counter:	
   494                           
   495                           ; 1 bytes @ 0x5
   496  0075                     	ds	1
   497  0076                     ___awmod@sign:	
   498                           
   499                           ; 1 bytes @ 0x6
   500  0076                     	ds	1
   501  0077                     ??_ISR:	
   502                           
   503                           ; 1 bytes @ 0x7
   504  0077                     	ds	1
   505                           
   506                           	psect	cstackBANK0
   507  0020                     __pcstackBANK0:	
   508  0020                     ??_pinConfig:	
   509  0020                     ??_Lcd_Port:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0020                     ?___lwdiv:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0020                     ?___lwmod:	
   516                           ; 2 bytes @ 0x0
   517                           
   518  0020                     ?___ftpack:	
   519                           ; 2 bytes @ 0x0
   520                           
   521  0020                     Lcd_Port@a:	
   522                           ; 3 bytes @ 0x0
   523                           
   524  0020                     ___lwdiv@divisor:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0020                     ___lwmod@divisor:	
   528                           ; 2 bytes @ 0x0
   529                           
   530  0020                     ___ftpack@arg:	
   531                           ; 2 bytes @ 0x0
   532                           
   533                           
   534                           ; 3 bytes @ 0x0
   535  0020                     	ds	1
   536  0021                     ??_Lcd_Cmd:	
   537  0021                     ??_Lcd_Write_Char:	
   538                           ; 1 bytes @ 0x1
   539                           
   540                           
   541                           ; 1 bytes @ 0x1
   542  0021                     	ds	1
   543  0022                     Lcd_Cmd@a:	
   544  0022                     Lcd_Write_Char@temp:	
   545                           ; 1 bytes @ 0x2
   546                           
   547  0022                     ___lwdiv@dividend:	
   548                           ; 1 bytes @ 0x2
   549                           
   550  0022                     ___lwmod@dividend:	
   551                           ; 2 bytes @ 0x2
   552                           
   553                           
   554                           ; 2 bytes @ 0x2
   555  0022                     	ds	1
   556  0023                     ??_Lcd_Clear:	
   557  0023                     ?_Lcd_Set_Cursor:	
   558                           ; 1 bytes @ 0x3
   559                           
   560  0023                     ??_Lcd_Init:	
   561                           ; 1 bytes @ 0x3
   562                           
   563  0023                     Lcd_Set_Cursor@b:	
   564                           ; 1 bytes @ 0x3
   565                           
   566  0023                     Lcd_Write_Char@y:	
   567                           ; 1 bytes @ 0x3
   568                           
   569  0023                     ___ftpack@exp:	
   570                           ; 1 bytes @ 0x3
   571                           
   572                           
   573                           ; 1 bytes @ 0x3
   574  0023                     	ds	1
   575  0024                     ??_Lcd_Set_Cursor:	
   576  0024                     ??___lwdiv:	
   577                           ; 1 bytes @ 0x4
   578                           
   579  0024                     ??___lwmod:	
   580                           ; 1 bytes @ 0x4
   581                           
   582  0024                     Lcd_Write_Char@a:	
   583                           ; 1 bytes @ 0x4
   584                           
   585  0024                     ___ftpack@sign:	
   586                           ; 1 bytes @ 0x4
   587                           
   588                           
   589                           ; 1 bytes @ 0x4
   590  0024                     	ds	1
   591  0025                     ??___ftpack:	
   592  0025                     ?_Lcd_Write_String:	
   593                           ; 1 bytes @ 0x5
   594                           
   595  0025                     ___lwmod@counter:	
   596                           ; 1 bytes @ 0x5
   597                           
   598  0025                     Lcd_Write_String@a:	
   599                           ; 1 bytes @ 0x5
   600                           
   601  0025                     ___lwdiv@quotient:	
   602                           ; 2 bytes @ 0x5
   603                           
   604                           
   605                           ; 2 bytes @ 0x5
   606  0025                     	ds	1
   607  0026                     Lcd_Set_Cursor@a:	
   608                           
   609                           ; 1 bytes @ 0x6
   610  0026                     	ds	1
   611  0027                     ??_Lcd_Write_String:	
   612  0027                     Lcd_Set_Cursor@z:	
   613                           ; 1 bytes @ 0x7
   614                           
   615  0027                     ___lwdiv@counter:	
   616                           ; 1 bytes @ 0x7
   617                           
   618                           
   619                           ; 1 bytes @ 0x7
   620  0027                     	ds	1
   621  0028                     ?_utoa:	
   622  0028                     ?___awtoft:	
   623                           ; 1 bytes @ 0x8
   624                           
   625  0028                     Lcd_Set_Cursor@y:	
   626                           ; 3 bytes @ 0x8
   627                           
   628  0028                     Lcd_Write_String@i:	
   629                           ; 1 bytes @ 0x8
   630                           
   631  0028                     ___awtoft@c:	
   632                           ; 2 bytes @ 0x8
   633                           
   634  0028                     utoa@val:	
   635                           ; 2 bytes @ 0x8
   636                           
   637                           
   638                           ; 2 bytes @ 0x8
   639  0028                     	ds	1
   640  0029                     Lcd_Set_Cursor@temp:	
   641                           
   642                           ; 1 bytes @ 0x9
   643  0029                     	ds	1
   644  002A                     utoa@base:	
   645                           
   646                           ; 2 bytes @ 0xA
   647  002A                     	ds	1
   648  002B                     ??___awtoft:	
   649                           
   650                           ; 1 bytes @ 0xB
   651  002B                     	ds	1
   652  002C                     ??_utoa:	
   653                           
   654                           ; 1 bytes @ 0xC
   655  002C                     	ds	1
   656  002D                     ___awtoft@sign:	
   657  002D                     utoa@v:	
   658                           ; 1 bytes @ 0xD
   659                           
   660                           
   661                           ; 2 bytes @ 0xD
   662  002D                     	ds	1
   663  002E                     ?___ftdiv:	
   664  002E                     ___ftdiv@f2:	
   665                           ; 3 bytes @ 0xE
   666                           
   667                           
   668                           ; 3 bytes @ 0xE
   669  002E                     	ds	1
   670  002F                     utoa@c:	
   671                           
   672                           ; 1 bytes @ 0xF
   673  002F                     	ds	1
   674  0030                     utoa@buf:	
   675                           
   676                           ; 1 bytes @ 0x10
   677  0030                     	ds	1
   678  0031                     ?_itoa:	
   679  0031                     itoa@val:	
   680                           ; 1 bytes @ 0x11
   681                           
   682  0031                     ___ftdiv@f1:	
   683                           ; 2 bytes @ 0x11
   684                           
   685                           
   686                           ; 3 bytes @ 0x11
   687  0031                     	ds	2
   688  0033                     itoa@base:	
   689                           
   690                           ; 2 bytes @ 0x13
   691  0033                     	ds	1
   692  0034                     ??___ftdiv:	
   693                           
   694                           ; 1 bytes @ 0x14
   695  0034                     	ds	1
   696  0035                     ??_itoa:	
   697                           
   698                           ; 1 bytes @ 0x15
   699  0035                     	ds	1
   700  0036                     itoa@cp:	
   701                           
   702                           ; 1 bytes @ 0x16
   703  0036                     	ds	1
   704  0037                     itoa@buf:	
   705                           
   706                           ; 1 bytes @ 0x17
   707  0037                     	ds	1
   708  0038                     ___ftdiv@cntr:	
   709                           
   710                           ; 1 bytes @ 0x18
   711  0038                     	ds	1
   712  0039                     ___ftdiv@f3:	
   713                           
   714                           ; 3 bytes @ 0x19
   715  0039                     	ds	3
   716  003C                     ___ftdiv@exp:	
   717                           
   718                           ; 1 bytes @ 0x1C
   719  003C                     	ds	1
   720  003D                     ___ftdiv@sign:	
   721                           
   722                           ; 1 bytes @ 0x1D
   723  003D                     	ds	1
   724  003E                     ?___ftmul:	
   725  003E                     ___ftmul@f1:	
   726                           ; 3 bytes @ 0x1E
   727                           
   728                           
   729                           ; 3 bytes @ 0x1E
   730  003E                     	ds	3
   731  0041                     ___ftmul@f2:	
   732                           
   733                           ; 3 bytes @ 0x21
   734  0041                     	ds	3
   735  0044                     ??___ftmul:	
   736                           
   737                           ; 1 bytes @ 0x24
   738  0044                     	ds	4
   739  0048                     ___ftmul@exp:	
   740                           
   741                           ; 1 bytes @ 0x28
   742  0048                     	ds	1
   743  0049                     ___ftmul@f3_as_product:	
   744                           
   745                           ; 3 bytes @ 0x29
   746  0049                     	ds	3
   747  004C                     ___ftmul@cntr:	
   748                           
   749                           ; 1 bytes @ 0x2C
   750  004C                     	ds	1
   751  004D                     ___ftmul@sign:	
   752                           
   753                           ; 1 bytes @ 0x2D
   754  004D                     	ds	1
   755  004E                     ?___fttol:	
   756  004E                     ___fttol@f1:	
   757                           ; 4 bytes @ 0x2E
   758                           
   759                           
   760                           ; 3 bytes @ 0x2E
   761  004E                     	ds	4
   762  0052                     ??___fttol:	
   763                           
   764                           ; 1 bytes @ 0x32
   765  0052                     	ds	4
   766  0056                     ___fttol@sign1:	
   767                           
   768                           ; 1 bytes @ 0x36
   769  0056                     	ds	1
   770  0057                     ___fttol@lval:	
   771                           
   772                           ; 4 bytes @ 0x37
   773  0057                     	ds	4
   774  005B                     ___fttol@exp1:	
   775                           
   776                           ; 1 bytes @ 0x3B
   777  005B                     	ds	1
   778  005C                     ?_echo:	
   779  005C                     echo@pin:	
   780                           ; 2 bytes @ 0x3C
   781                           
   782                           
   783                           ; 2 bytes @ 0x3C
   784  005C                     	ds	2
   785  005E                     ??_echo:	
   786                           
   787                           ; 1 bytes @ 0x3E
   788  005E                     	ds	1
   789  005F                     echo@port:	
   790                           
   791                           ; 1 bytes @ 0x3F
   792  005F                     	ds	1
   793  0060                     echo@sfrdev:	
   794                           
   795                           ; 2 bytes @ 0x40
   796  0060                     	ds	2
   797  0062                     echo@a:	
   798                           
   799                           ; 2 bytes @ 0x42
   800  0062                     	ds	2
   801  0064                     ?_main:	
   802  0064                     main@argc:	
   803                           ; 2 bytes @ 0x44
   804                           
   805                           
   806                           ; 2 bytes @ 0x44
   807  0064                     	ds	2
   808  0066                     main@argv:	
   809                           
   810                           ; 2 bytes @ 0x46
   811  0066                     	ds	2
   812  0068                     ??_main:	
   813                           
   814                           ; 1 bytes @ 0x48
   815  0068                     	ds	3
   816                           
   817                           	psect	maintext
   818  004C                     __pmaintext:	
   819 ;;
   820 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   821 ;;
   822 ;; *************** function _main *****************
   823 ;; Defined at:
   824 ;;		line 111 in file "FinalProject3.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;  argc            2   68[BANK0 ] int 
   827 ;;  argv            2   70[BANK0 ] PTR PTR unsigned char 
   828 ;; Auto vars:     Size  Location     Type
   829 ;;  bufB            8    8[BANK1 ] unsigned char [8]
   830 ;;  bufA            8    0[BANK1 ] unsigned char [8]
   831 ;;  ping_val2       2   20[BANK1 ] int 
   832 ;;  ping_val1       2   18[BANK1 ] int 
   833 ;;  toggle          2   16[BANK1 ] int 
   834 ;; Return value:  Size  Location     Type
   835 ;;                  2   68[BANK0 ] int 
   836 ;; Registers used:
   837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   838 ;; Tracked objects:
   839 ;;		On entry : B1F/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   843 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   844 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0
   845 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
   846 ;;      Totals:         0       7      22       0       0       0       0       0       0       0       0       0       
      +0       0
   847 ;;Total ram usage:       29 bytes
   848 ;; Hardware stack levels required when called:    5
   849 ;; This function calls:
   850 ;;		_Lcd_Clear
   851 ;;		_Lcd_Init
   852 ;;		_Lcd_Set_Cursor
   853 ;;		_Lcd_Write_String
   854 ;;		_echo
   855 ;;		_itoa
   856 ;;		_pinConfig
   857 ;; This function is called by:
   858 ;;		Startup code after reset
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862                           
   863                           ;psect for function _main
   864  004C                     _main:	
   865                           
   866                           ;FinalProject3.c: 113: OPTION_REG = OPTION_REG
   867                           ;FinalProject3.c: 114: | (0x07)
   868                           ;FinalProject3.c: 115: & ~(1<<3)
   869                           ;FinalProject3.c: 116: & ~(1<<5);
   870                           
   871                           ;incstack = 0
   872                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   873  004C  0021               	movlb	1	; select bank1
   874  004D  0815               	movf	21,w	;volatile
   875  004E  3807               	iorlw	7
   876  004F  0095               	movwf	21	;volatile
   877                           
   878                           ;FinalProject3.c: 117: INTCON = INTCON
   879                           ;FinalProject3.c: 118: & ~(1<<2)
   880                           ;FinalProject3.c: 119: | (1<<7)
   881                           ;FinalProject3.c: 120: | (1<<5);
   882  0050  080B               	movf	11,w	;volatile
   883  0051  39FB               	andlw	251
   884  0052  38A0               	iorlw	160
   885  0053  008B               	movwf	11	;volatile
   886                           
   887                           ;FinalProject3.c: 122: pinConfig();
   888  0054  3186  264D  3180   	fcall	_pinConfig
   889                           
   890                           ;FinalProject3.c: 123: _delay((unsigned long)((30)*(8000000/4000.0)));
   891  0057  304E               	movlw	78
   892  0058  0020               	movlb	0	; select bank0
   893  0059  00E8               	movwf	??_main
   894  005A  30EB               	movlw	235
   895  005B                     u1997:	
   896  005B  0B89               	decfsz	9,f
   897  005C  285B               	goto	u1997
   898  005D  0BE8               	decfsz	??_main,f
   899  005E  285B               	goto	u1997
   900                           
   901                           ;FinalProject3.c: 126: OSCCON = 0X6A;
   902  005F  306A               	movlw	106
   903  0060  0021               	movlb	1	; select bank1
   904  0061  0099               	movwf	25	;volatile
   905                           
   906                           ;FinalProject3.c: 127: ANSELC=0x20;
   907  0062  3020               	movlw	32
   908  0063  0023               	movlb	3	; select bank3
   909  0064  008E               	movwf	14	;volatile
   910                           
   911                           ;FinalProject3.c: 130: RC6 = 0;
   912  0065  0020               	movlb	0	; select bank0
   913  0066  130E               	bcf	14,6	;volatile
   914                           
   915                           ;FinalProject3.c: 132: int toggle = 0;
   916  0067  0021               	movlb	1	; select bank1
   917  0068  01B0               	clrf	main@toggle^(0+128)
   918  0069  01B1               	clrf	(main@toggle+1)^(0+128)
   919                           
   920                           ;FinalProject3.c: 136: Lcd_Init();
   921  006A  3185  2549  3180   	fcall	_Lcd_Init
   922                           
   923                           ;FinalProject3.c: 137: Lcd_Clear();
   924  006D  3187  279B  3180   	fcall	_Lcd_Clear
   925                           
   926                           ;FinalProject3.c: 138: Lcd_Set_Cursor(1,1);
   927  0070  0020               	movlb	0	; select bank0
   928  0071  01A3               	clrf	Lcd_Set_Cursor@b
   929  0072  0AA3               	incf	Lcd_Set_Cursor@b,f
   930  0073  3001               	movlw	1
   931  0074  3185  25D4  3180   	fcall	_Lcd_Set_Cursor
   932                           
   933                           ;FinalProject3.c: 139: Lcd_Write_String("WELCOME TO UTSA");
   934  0077  3066               	movlw	low (STR_1| (0+32768))
   935  0078  0020               	movlb	0	; select bank0
   936  0079  00A5               	movwf	Lcd_Write_String@a
   937  007A  3087               	movlw	high (STR_1| (0+32768))
   938  007B  00A6               	movwf	Lcd_Write_String@a+1
   939  007C  3187  271C  3180   	fcall	_Lcd_Write_String
   940                           
   941                           ;FinalProject3.c: 140: _delay((unsigned long)((1000)*(8000000/4000.0)));
   942  007F  300B               	movlw	11
   943  0080  0020               	movlb	0	; select bank0
   944  0081  00E9               	movwf	??_main+1
   945  0082  3026               	movlw	38
   946  0083  00E8               	movwf	??_main
   947  0084  305D               	movlw	93
   948  0085                     u2007:	
   949  0085  0B89               	decfsz	9,f
   950  0086  2885               	goto	u2007
   951  0087  0BE8               	decfsz	??_main,f
   952  0088  2885               	goto	u2007
   953  0089  0BE9               	decfsz	??_main+1,f
   954  008A  2885               	goto	u2007
   955  008B  3200               	nop2
   956  008C                     l1717:	
   957                           ;FinalProject3.c: 144: while(1)
   958                           
   959                           
   960                           ;FinalProject3.c: 145: {
   961                           ;FinalProject3.c: 147: RC6 = 0;
   962  008C  0020               	movlb	0	; select bank0
   963  008D  130E               	bcf	14,6	;volatile
   964                           
   965                           ;FinalProject3.c: 148: int ping_val1 = echo('A',1);
   966  008E  3001               	movlw	1
   967  008F  00DC               	movwf	echo@pin
   968  0090  3000               	movlw	0
   969  0091  00DD               	movwf	echo@pin+1
   970  0092  3041               	movlw	65
   971  0093  3183  2370  3180   	fcall	_echo
   972  0096  0020               	movlb	0	; select bank0
   973  0097  085D               	movf	?_echo+1,w
   974  0098  0021               	movlb	1	; select bank1
   975  0099  00B3               	movwf	(main@ping_val1+1)^(0+128)
   976  009A  0020               	movlb	0	; select bank0
   977  009B  085C               	movf	?_echo,w
   978  009C  0021               	movlb	1	; select bank1
   979  009D  00B2               	movwf	main@ping_val1^(0+128)
   980                           
   981                           ;FinalProject3.c: 149: int ping_val2 = echo('A',2);
   982  009E  3002               	movlw	2
   983  009F  0020               	movlb	0	; select bank0
   984  00A0  00DC               	movwf	echo@pin
   985  00A1  3000               	movlw	0
   986  00A2  00DD               	movwf	echo@pin+1
   987  00A3  3041               	movlw	65
   988  00A4  3183  2370  3180   	fcall	_echo
   989  00A7  0020               	movlb	0	; select bank0
   990  00A8  085D               	movf	?_echo+1,w
   991  00A9  0021               	movlb	1	; select bank1
   992  00AA  00B5               	movwf	(main@ping_val2+1)^(0+128)
   993  00AB  0020               	movlb	0	; select bank0
   994  00AC  085C               	movf	?_echo,w
   995  00AD  0021               	movlb	1	; select bank1
   996  00AE  00B4               	movwf	main@ping_val2^(0+128)
   997                           
   998                           ;FinalProject3.c: 151: char bufA[8];
   999                           ;FinalProject3.c: 152: itoa(bufA,ping_val1,10);
  1000  00AF  0833               	movf	(main@ping_val1+1)^(0+128),w
  1001  00B0  0020               	movlb	0	; select bank0
  1002  00B1  00B2               	movwf	itoa@val+1
  1003  00B2  0021               	movlb	1	; select bank1
  1004  00B3  0832               	movf	main@ping_val1^(0+128),w
  1005  00B4  0020               	movlb	0	; select bank0
  1006  00B5  00B1               	movwf	itoa@val
  1007  00B6  300A               	movlw	10
  1008  00B7  00B3               	movwf	itoa@base
  1009  00B8  3000               	movlw	0
  1010  00B9  00B4               	movwf	itoa@base+1
  1011  00BA  30A0               	movlw	(low (main@bufA| 0))& (0+255)
  1012  00BB  3186  26D6  3180   	fcall	_itoa
  1013                           
  1014                           ;FinalProject3.c: 153: char bufB[8];
  1015                           ;FinalProject3.c: 154: itoa(bufB,ping_val2,10);
  1016  00BE  0021               	movlb	1	; select bank1
  1017  00BF  0835               	movf	(main@ping_val2+1)^(0+128),w
  1018  00C0  0020               	movlb	0	; select bank0
  1019  00C1  00B2               	movwf	itoa@val+1
  1020  00C2  0021               	movlb	1	; select bank1
  1021  00C3  0834               	movf	main@ping_val2^(0+128),w
  1022  00C4  0020               	movlb	0	; select bank0
  1023  00C5  00B1               	movwf	itoa@val
  1024  00C6  300A               	movlw	10
  1025  00C7  00B3               	movwf	itoa@base
  1026  00C8  3000               	movlw	0
  1027  00C9  00B4               	movwf	itoa@base+1
  1028  00CA  30A8               	movlw	(low (main@bufB| 0))& (0+255)
  1029  00CB  3186  26D6  3180   	fcall	_itoa
  1030                           
  1031                           ;FinalProject3.c: 159: if(ping_val1 < 100 && ping_val2 < 100)
  1032  00CE  0021               	movlb	1	; select bank1
  1033  00CF  0833               	movf	(main@ping_val1+1)^(0+128),w
  1034  00D0  3A80               	xorlw	128
  1035  00D1  0020               	movlb	0	; select bank0
  1036  00D2  00E8               	movwf	??_main
  1037  00D3  3080               	movlw	128
  1038  00D4  0268               	subwf	??_main,w
  1039  00D5  1D03               	skipz
  1040  00D6  28DA               	goto	u1865
  1041  00D7  3064               	movlw	100
  1042  00D8  0021               	movlb	1	; select bank1
  1043  00D9  0232               	subwf	main@ping_val1^(0+128),w
  1044  00DA                     u1865:	
  1045  00DA  1803               	skipnc
  1046  00DB  2941               	goto	l1743
  1047  00DC  0021               	movlb	1	; select bank1
  1048  00DD  0835               	movf	(main@ping_val2+1)^(0+128),w
  1049  00DE  3A80               	xorlw	128
  1050  00DF  0020               	movlb	0	; select bank0
  1051  00E0  00E8               	movwf	??_main
  1052  00E1  3080               	movlw	128
  1053  00E2  0268               	subwf	??_main,w
  1054  00E3  1D03               	skipz
  1055  00E4  28E8               	goto	u1875
  1056  00E5  3064               	movlw	100
  1057  00E6  0021               	movlb	1	; select bank1
  1058  00E7  0234               	subwf	main@ping_val2^(0+128),w
  1059  00E8                     u1875:	
  1060  00E8  1803               	skipnc
  1061  00E9  2941               	goto	l1743
  1062                           
  1063                           ;FinalProject3.c: 160: {
  1064                           ;FinalProject3.c: 163: if (*pinitialize == 0)
  1065  00EA  0020               	movlb	0	; select bank0
  1066  00EB  086D               	movf	_pinitialize,w
  1067  00EC  0086               	movwf	6
  1068  00ED  0187               	clrf	7
  1069  00EE  0016               	moviw fsr1++
  1070  00EF  0401               	iorwf	1,w
  1071  00F0  1D03               	btfss	3,2
  1072  00F1  29F3               	goto	l1775
  1073                           
  1074                           ;FinalProject3.c: 164: {
  1075                           ;FinalProject3.c: 166: Lcd_Clear();
  1076  00F2  3187  279B  3180   	fcall	_Lcd_Clear
  1077                           
  1078                           ;FinalProject3.c: 167: Lcd_Set_Cursor(1,1);
  1079  00F5  0020               	movlb	0	; select bank0
  1080  00F6  01A3               	clrf	Lcd_Set_Cursor@b
  1081  00F7  0AA3               	incf	Lcd_Set_Cursor@b,f
  1082  00F8  3001               	movlw	1
  1083  00F9  3185  25D4  3180   	fcall	_Lcd_Set_Cursor
  1084                           
  1085                           ;FinalProject3.c: 168: Lcd_Write_String("In range: ");
  1086  00FC  3090               	movlw	low (STR_2| (0+32768))
  1087  00FD  0020               	movlb	0	; select bank0
  1088  00FE  00A5               	movwf	Lcd_Write_String@a
  1089  00FF  3087               	movlw	high (STR_2| (0+32768))
  1090  0100  00A6               	movwf	Lcd_Write_String@a+1
  1091  0101  3187  271C  3180   	fcall	_Lcd_Write_String
  1092                           
  1093                           ;FinalProject3.c: 169: Lcd_Set_Cursor(2,1);
  1094  0104  0020               	movlb	0	; select bank0
  1095  0105  01A3               	clrf	Lcd_Set_Cursor@b
  1096  0106  0AA3               	incf	Lcd_Set_Cursor@b,f
  1097  0107  3002               	movlw	2
  1098  0108  3185  25D4  3180   	fcall	_Lcd_Set_Cursor
  1099                           
  1100                           ;FinalProject3.c: 170: Lcd_Write_String(bufA);
  1101  010B  30A0               	movlw	low main@bufA
  1102  010C  0020               	movlb	0	; select bank0
  1103  010D  00A5               	movwf	Lcd_Write_String@a
  1104  010E  3000               	movlw	high main@bufA
  1105  010F  00A6               	movwf	Lcd_Write_String@a+1
  1106  0110  3187  271C  3180   	fcall	_Lcd_Write_String
  1107                           
  1108                           ;FinalProject3.c: 171: Lcd_Write_String(" cm, ");
  1109  0113  30A3               	movlw	low (STR_3| (0+32768))
  1110  0114  0020               	movlb	0	; select bank0
  1111  0115  00A5               	movwf	Lcd_Write_String@a
  1112  0116  3087               	movlw	high (STR_3| (0+32768))
  1113  0117  00A6               	movwf	Lcd_Write_String@a+1
  1114  0118  3187  271C  3180   	fcall	_Lcd_Write_String
  1115                           
  1116                           ;FinalProject3.c: 172: Lcd_Write_String(bufB);
  1117  011B  30A8               	movlw	low main@bufB
  1118  011C  0020               	movlb	0	; select bank0
  1119  011D  00A5               	movwf	Lcd_Write_String@a
  1120  011E  3000               	movlw	high main@bufB
  1121  011F  00A6               	movwf	Lcd_Write_String@a+1
  1122  0120  3187  271C  3180   	fcall	_Lcd_Write_String
  1123                           
  1124                           ;FinalProject3.c: 173: Lcd_Write_String(" cm");
  1125  0123  30A9               	movlw	low (STR_4| (0+32768))
  1126  0124  0020               	movlb	0	; select bank0
  1127  0125  00A5               	movwf	Lcd_Write_String@a
  1128  0126  3087               	movlw	high (STR_4| (0+32768))
  1129  0127  00A6               	movwf	Lcd_Write_String@a+1
  1130  0128  3187  271C  3180   	fcall	_Lcd_Write_String
  1131                           
  1132                           ;FinalProject3.c: 174: _delay((unsigned long)((500)*(8000000/4000.0)));
  1133  012B  3006               	movlw	6
  1134  012C  0020               	movlb	0	; select bank0
  1135  012D  00E9               	movwf	??_main+1
  1136  012E  3013               	movlw	19
  1137  012F  00E8               	movwf	??_main
  1138  0130  30AD               	movlw	173
  1139  0131                     u2017:	
  1140  0131  0B89               	decfsz	9,f
  1141  0132  2931               	goto	u2017
  1142  0133  0BE8               	decfsz	??_main,f
  1143  0134  2931               	goto	u2017
  1144  0135  0BE9               	decfsz	??_main+1,f
  1145  0136  2931               	goto	u2017
  1146  0137  3200               	nop2
  1147                           
  1148                           ;FinalProject3.c: 176: *pinitialize = 1;
  1149  0138  0020               	movlb	0	; select bank0
  1150  0139  086D               	movf	_pinitialize,w
  1151  013A  0086               	movwf	6
  1152  013B  0187               	clrf	7
  1153  013C  3001               	movlw	1
  1154  013D  3FC0               	movwi [0]fsr1
  1155  013E  3000               	movlw	0
  1156  013F  3FC1               	movwi [1]fsr1
  1157                           
  1158                           ;FinalProject3.c: 178: }
  1159                           ;FinalProject3.c: 180: }
  1160  0140  29F3               	goto	l1775
  1161  0141                     l1743:	
  1162                           
  1163                           ;FinalProject3.c: 183: else if(ping_val1 > 100 && ping_val2 > 100)
  1164  0141  0021               	movlb	1	; select bank1
  1165  0142  0833               	movf	(main@ping_val1+1)^(0+128),w
  1166  0143  3A80               	xorlw	128
  1167  0144  0020               	movlb	0	; select bank0
  1168  0145  00E8               	movwf	??_main
  1169  0146  3080               	movlw	128
  1170  0147  0268               	subwf	??_main,w
  1171  0148  1D03               	skipz
  1172  0149  294D               	goto	u1895
  1173  014A  3065               	movlw	101
  1174  014B  0021               	movlb	1	; select bank1
  1175  014C  0232               	subwf	main@ping_val1^(0+128),w
  1176  014D                     u1895:	
  1177  014D  1C03               	skipc
  1178  014E  29AB               	goto	l131
  1179  014F  0021               	movlb	1	; select bank1
  1180  0150  0835               	movf	(main@ping_val2+1)^(0+128),w
  1181  0151  3A80               	xorlw	128
  1182  0152  0020               	movlb	0	; select bank0
  1183  0153  00E8               	movwf	??_main
  1184  0154  3080               	movlw	128
  1185  0155  0268               	subwf	??_main,w
  1186  0156  1D03               	skipz
  1187  0157  295B               	goto	u1905
  1188  0158  3065               	movlw	101
  1189  0159  0021               	movlb	1	; select bank1
  1190  015A  0234               	subwf	main@ping_val2^(0+128),w
  1191  015B                     u1905:	
  1192  015B  1C03               	skipc
  1193  015C  29AB               	goto	l131
  1194                           
  1195                           ;FinalProject3.c: 184: {
  1196                           ;FinalProject3.c: 186: *pinitialize = 0;
  1197  015D  0020               	movlb	0	; select bank0
  1198  015E  086D               	movf	_pinitialize,w
  1199  015F  0086               	movwf	6
  1200  0160  0187               	clrf	7
  1201  0161  3000               	movlw	0
  1202  0162  3FC0               	movwi [0]fsr1
  1203  0163  3FC1               	movwi [1]fsr1
  1204                           
  1205                           ;FinalProject3.c: 187: Lcd_Clear();
  1206  0164  3187  279B  3180   	fcall	_Lcd_Clear
  1207                           
  1208                           ;FinalProject3.c: 188: Lcd_Set_Cursor(1,1);
  1209  0167  0020               	movlb	0	; select bank0
  1210  0168  01A3               	clrf	Lcd_Set_Cursor@b
  1211  0169  0AA3               	incf	Lcd_Set_Cursor@b,f
  1212  016A  3001               	movlw	1
  1213  016B  3185  25D4  3180   	fcall	_Lcd_Set_Cursor
  1214                           
  1215                           ;FinalProject3.c: 189: Lcd_Write_String("Out of Range: ");
  1216  016E  3076               	movlw	low (STR_5| (0+32768))
  1217  016F  0020               	movlb	0	; select bank0
  1218  0170  00A5               	movwf	Lcd_Write_String@a
  1219  0171  3087               	movlw	high (STR_5| (0+32768))
  1220  0172  00A6               	movwf	Lcd_Write_String@a+1
  1221  0173  3187  271C  3180   	fcall	_Lcd_Write_String
  1222                           
  1223                           ;FinalProject3.c: 190: Lcd_Set_Cursor(2,1);
  1224  0176  0020               	movlb	0	; select bank0
  1225  0177  01A3               	clrf	Lcd_Set_Cursor@b
  1226  0178  0AA3               	incf	Lcd_Set_Cursor@b,f
  1227  0179  3002               	movlw	2
  1228  017A  3185  25D4  3180   	fcall	_Lcd_Set_Cursor
  1229                           
  1230                           ;FinalProject3.c: 191: Lcd_Write_String(bufA);
  1231  017D  30A0               	movlw	low main@bufA
  1232  017E  0020               	movlb	0	; select bank0
  1233  017F  00A5               	movwf	Lcd_Write_String@a
  1234  0180  3000               	movlw	high main@bufA
  1235  0181  00A6               	movwf	Lcd_Write_String@a+1
  1236  0182  3187  271C  3180   	fcall	_Lcd_Write_String
  1237                           
  1238                           ;FinalProject3.c: 192: Lcd_Write_String(" cm, ");
  1239  0185  30A3               	movlw	low (STR_3| (0+32768))
  1240  0186  0020               	movlb	0	; select bank0
  1241  0187  00A5               	movwf	Lcd_Write_String@a
  1242  0188  3087               	movlw	high (STR_3| (0+32768))
  1243  0189  00A6               	movwf	Lcd_Write_String@a+1
  1244  018A  3187  271C  3180   	fcall	_Lcd_Write_String
  1245                           
  1246                           ;FinalProject3.c: 193: Lcd_Write_String(bufB);
  1247  018D  30A8               	movlw	low main@bufB
  1248  018E  0020               	movlb	0	; select bank0
  1249  018F  00A5               	movwf	Lcd_Write_String@a
  1250  0190  3000               	movlw	high main@bufB
  1251  0191  00A6               	movwf	Lcd_Write_String@a+1
  1252  0192  3187  271C  3180   	fcall	_Lcd_Write_String
  1253                           
  1254                           ;FinalProject3.c: 194: Lcd_Write_String(" cm");
  1255  0195  30A9               	movlw	low (STR_4| (0+32768))
  1256  0196  0020               	movlb	0	; select bank0
  1257  0197  00A5               	movwf	Lcd_Write_String@a
  1258  0198  3087               	movlw	high (STR_4| (0+32768))
  1259  0199  00A6               	movwf	Lcd_Write_String@a+1
  1260  019A  3187  271C  3180   	fcall	_Lcd_Write_String
  1261                           
  1262                           ;FinalProject3.c: 195: _delay((unsigned long)((500)*(8000000/4000.0)));
  1263  019D  3006               	movlw	6
  1264  019E  0020               	movlb	0	; select bank0
  1265  019F  00E9               	movwf	??_main+1
  1266  01A0  3013               	movlw	19
  1267  01A1  00E8               	movwf	??_main
  1268  01A2  30AD               	movlw	173
  1269  01A3                     u2027:	
  1270  01A3  0B89               	decfsz	9,f
  1271  01A4  29A3               	goto	u2027
  1272  01A5  0BE8               	decfsz	??_main,f
  1273  01A6  29A3               	goto	u2027
  1274  01A7  0BE9               	decfsz	??_main+1,f
  1275  01A8  29A3               	goto	u2027
  1276  01A9  3200               	nop2
  1277                           
  1278                           ;FinalProject3.c: 197: }
  1279  01AA  29F3               	goto	l1775
  1280  01AB                     l131:	
  1281                           
  1282                           ;FinalProject3.c: 199: else
  1283                           ;FinalProject3.c: 200: {
  1284                           ;FinalProject3.c: 201: RA5 = 0;
  1285  01AB  0020               	movlb	0	; select bank0
  1286  01AC  128C               	bcf	12,5	;volatile
  1287                           
  1288                           ;FinalProject3.c: 202: Lcd_Clear();
  1289  01AD  3187  279B  3180   	fcall	_Lcd_Clear
  1290                           
  1291                           ;FinalProject3.c: 203: Lcd_Set_Cursor(1,1);
  1292  01B0  0020               	movlb	0	; select bank0
  1293  01B1  01A3               	clrf	Lcd_Set_Cursor@b
  1294  01B2  0AA3               	incf	Lcd_Set_Cursor@b,f
  1295  01B3  3001               	movlw	1
  1296  01B4  3185  25D4  3180   	fcall	_Lcd_Set_Cursor
  1297                           
  1298                           ;FinalProject3.c: 204: Lcd_Write_String("Distance: ");
  1299  01B7  3085               	movlw	low (STR_8| (0+32768))
  1300  01B8  0020               	movlb	0	; select bank0
  1301  01B9  00A5               	movwf	Lcd_Write_String@a
  1302  01BA  3087               	movlw	high (STR_8| (0+32768))
  1303  01BB  00A6               	movwf	Lcd_Write_String@a+1
  1304  01BC  3187  271C  3180   	fcall	_Lcd_Write_String
  1305                           
  1306                           ;FinalProject3.c: 205: Lcd_Set_Cursor(2,1);
  1307  01BF  0020               	movlb	0	; select bank0
  1308  01C0  01A3               	clrf	Lcd_Set_Cursor@b
  1309  01C1  0AA3               	incf	Lcd_Set_Cursor@b,f
  1310  01C2  3002               	movlw	2
  1311  01C3  3185  25D4  3180   	fcall	_Lcd_Set_Cursor
  1312                           
  1313                           ;FinalProject3.c: 206: Lcd_Write_String(bufA);
  1314  01C6  30A0               	movlw	low main@bufA
  1315  01C7  0020               	movlb	0	; select bank0
  1316  01C8  00A5               	movwf	Lcd_Write_String@a
  1317  01C9  3000               	movlw	high main@bufA
  1318  01CA  00A6               	movwf	Lcd_Write_String@a+1
  1319  01CB  3187  271C  3180   	fcall	_Lcd_Write_String
  1320                           
  1321                           ;FinalProject3.c: 207: Lcd_Write_String(" cm, ");
  1322  01CE  30A3               	movlw	low (STR_3| (0+32768))
  1323  01CF  0020               	movlb	0	; select bank0
  1324  01D0  00A5               	movwf	Lcd_Write_String@a
  1325  01D1  3087               	movlw	high (STR_3| (0+32768))
  1326  01D2  00A6               	movwf	Lcd_Write_String@a+1
  1327  01D3  3187  271C  3180   	fcall	_Lcd_Write_String
  1328                           
  1329                           ;FinalProject3.c: 208: Lcd_Write_String(bufB);
  1330  01D6  30A8               	movlw	low main@bufB
  1331  01D7  0020               	movlb	0	; select bank0
  1332  01D8  00A5               	movwf	Lcd_Write_String@a
  1333  01D9  3000               	movlw	high main@bufB
  1334  01DA  00A6               	movwf	Lcd_Write_String@a+1
  1335  01DB  3187  271C  3180   	fcall	_Lcd_Write_String
  1336                           
  1337                           ;FinalProject3.c: 209: Lcd_Write_String(" cm");
  1338  01DE  30A9               	movlw	low (STR_4| (0+32768))
  1339  01DF  0020               	movlb	0	; select bank0
  1340  01E0  00A5               	movwf	Lcd_Write_String@a
  1341  01E1  3087               	movlw	high (STR_4| (0+32768))
  1342  01E2  00A6               	movwf	Lcd_Write_String@a+1
  1343  01E3  3187  271C  3180   	fcall	_Lcd_Write_String
  1344                           
  1345                           ;FinalProject3.c: 210: _delay((unsigned long)((500)*(8000000/4000.0)));
  1346  01E6  3006               	movlw	6
  1347  01E7  0020               	movlb	0	; select bank0
  1348  01E8  00E9               	movwf	??_main+1
  1349  01E9  3013               	movlw	19
  1350  01EA  00E8               	movwf	??_main
  1351  01EB  30AD               	movlw	173
  1352  01EC                     u2037:	
  1353  01EC  0B89               	decfsz	9,f
  1354  01ED  29EC               	goto	u2037
  1355  01EE  0BE8               	decfsz	??_main,f
  1356  01EF  29EC               	goto	u2037
  1357  01F0  0BE9               	decfsz	??_main+1,f
  1358  01F1  29EC               	goto	u2037
  1359  01F2  3200               	nop2
  1360  01F3                     l1775:	
  1361                           
  1362                           ;FinalProject3.c: 211: }
  1363                           ;FinalProject3.c: 223: toggle = ~toggle;
  1364  01F3  0021               	movlb	1	; select bank1
  1365  01F4  09B0               	comf	main@toggle^(0+128),f
  1366  01F5  09B1               	comf	(main@toggle+1)^(0+128),f
  1367                           
  1368                           ;FinalProject3.c: 225: if(*pdelay_counter > 50)
  1369  01F6  087C               	movf	_pdelay_counter,w
  1370  01F7  0086               	movwf	6
  1371  01F8  0187               	clrf	7
  1372  01F9  3F40               	moviw [0]fsr1
  1373  01FA  0020               	movlb	0	; select bank0
  1374  01FB  00E8               	movwf	??_main
  1375  01FC  3F41               	moviw [1]fsr1
  1376  01FD  00E9               	movwf	??_main+1
  1377  01FE  0869               	movf	??_main+1,w
  1378  01FF  3A80               	xorlw	128
  1379  0200  00EA               	movwf	??_main+2
  1380  0201  3080               	movlw	128
  1381  0202  026A               	subwf	??_main+2,w
  1382  0203  1D03               	skipz
  1383  0204  2A07               	goto	u1915
  1384  0205  3033               	movlw	51
  1385  0206  0268               	subwf	??_main,w
  1386  0207                     u1915:	
  1387  0207  1C03               	skipc
  1388  0208  288C               	goto	l1717
  1389                           
  1390                           ;FinalProject3.c: 226: {
  1391                           ;FinalProject3.c: 227: RA5 ^= 1;
  1392  0209  0020               	movlb	0	; select bank0
  1393  020A  3020               	movlw	32
  1394  020B  068C               	xorwf	12,f
  1395                           
  1396                           ;FinalProject3.c: 228: *pinitialize = 0;
  1397  020C  086D               	movf	_pinitialize,w
  1398  020D  0086               	movwf	6
  1399  020E  0187               	clrf	7
  1400  020F  3000               	movlw	0
  1401  0210  3FC0               	movwi [0]fsr1
  1402  0211  3FC1               	movwi [1]fsr1
  1403  0212  288C               	goto	l1717
  1404  0213                     __end_of_main:	
  1405                           ;FinalProject3.c: 229: }
  1406                           ;FinalProject3.c: 231: }
  1407                           ;FinalProject3.c: 233: return 0;
  1408                           ;	Return value of _main is never used
  1409                           
  1410                           
  1411                           	psect	text1
  1412  064D                     __ptext1:	
  1413 ;; *************** function _pinConfig *****************
  1414 ;; Defined at:
  1415 ;;		line 318 in file "FinalProject3.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;		None
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;		None
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      void 
  1422 ;; Registers used:
  1423 ;;		wreg, status,2
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1433 ;;Total ram usage:        0 bytes
  1434 ;; Hardware stack levels used:    1
  1435 ;; Hardware stack levels required when called:    2
  1436 ;; This function calls:
  1437 ;;		Nothing
  1438 ;; This function is called by:
  1439 ;;		_main
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           
  1444                           ;psect for function _pinConfig
  1445  064D                     _pinConfig:	
  1446                           
  1447                           ;FinalProject3.c: 319: TRISA = ~(1<<0)&(1<<1)|(1<<2);
  1448                           
  1449                           ;incstack = 0
  1450                           ; Regs used in _pinConfig: [wreg+status,2]
  1451  064D  3006               	movlw	6
  1452  064E  0021               	movlb	1	; select bank1
  1453  064F  008C               	movwf	12	;volatile
  1454                           
  1455                           ;FinalProject3.c: 320: ANSELA = 0;
  1456  0650  0023               	movlb	3	; select bank3
  1457  0651  018C               	clrf	12	;volatile
  1458                           
  1459                           ;FinalProject3.c: 321: TRISB = (1<<4)|(1<<5)|(1<<6)|(1<<7);
  1460  0652  30F0               	movlw	240
  1461  0653  0021               	movlb	1	; select bank1
  1462  0654  008D               	movwf	13	;volatile
  1463                           
  1464                           ;FinalProject3.c: 322: ANSELB = 0;
  1465  0655  0023               	movlb	3	; select bank3
  1466  0656  018D               	clrf	13	;volatile
  1467                           
  1468                           ;FinalProject3.c: 323: TRISC = ~(1<<0)&~(1<<3)&~(1<<6)&~(1<<4)|(1<<5);
  1469  0657  30A6               	movlw	166
  1470  0658  0021               	movlb	1	; select bank1
  1471  0659  008E               	movwf	14	;volatile
  1472                           
  1473                           ;FinalProject3.c: 325: ANSELC = 0;
  1474  065A  0023               	movlb	3	; select bank3
  1475  065B  018E               	clrf	14	;volatile
  1476                           
  1477                           ;FinalProject3.c: 326: OSCCON = 0x6A;
  1478  065C  306A               	movlw	106
  1479  065D  0021               	movlb	1	; select bank1
  1480  065E  0099               	movwf	25	;volatile
  1481                           
  1482                           ;FinalProject3.c: 327: TXCKSEL = 1;
  1483  065F  0022               	movlb	2	; select bank2
  1484  0660  151D               	bsf	29,2	;volatile
  1485                           
  1486                           ;FinalProject3.c: 328: RXDTSEL = 1;
  1487  0661  179D               	bsf	29,7	;volatile
  1488                           
  1489                           ;FinalProject3.c: 330: ANSELC=0x20;
  1490  0662  3020               	movlw	32
  1491  0663  0023               	movlb	3	; select bank3
  1492  0664  008E               	movwf	14	;volatile
  1493                           
  1494                           ;FinalProject3.c: 332: TRISA = ~(1<<0)&(1<<1)|(1<<2);
  1495  0665  3006               	movlw	6
  1496  0666  0021               	movlb	1	; select bank1
  1497  0667  008C               	movwf	12	;volatile
  1498                           
  1499                           ;FinalProject3.c: 333: ANSELA = 0;
  1500  0668  0023               	movlb	3	; select bank3
  1501  0669  018C               	clrf	12	;volatile
  1502                           
  1503                           ;FinalProject3.c: 334: TRISB = TRISB & ~( (1<<4)|(1<<5)|(1<<6)|(1<<7) );
  1504  066A  0021               	movlb	1	; select bank1
  1505  066B  080D               	movf	13,w	;volatile
  1506  066C  390F               	andlw	15
  1507  066D  008D               	movwf	13	;volatile
  1508                           
  1509                           ;FinalProject3.c: 335: ANSELB = ANSELB & ~( (1<<4)|(1<<5)|(1<<6)|(1<<7) );
  1510  066E  0023               	movlb	3	; select bank3
  1511  066F  080D               	movf	13,w	;volatile
  1512  0670  390F               	andlw	15
  1513  0671  008D               	movwf	13	;volatile
  1514                           
  1515                           ;FinalProject3.c: 336: TRISC = TRISC & ~( (1<<0)|(1<<3)|(1<<6) );
  1516  0672  0021               	movlb	1	; select bank1
  1517  0673  080E               	movf	14,w	;volatile
  1518  0674  39B6               	andlw	182
  1519  0675  008E               	movwf	14	;volatile
  1520                           
  1521                           ;FinalProject3.c: 337: ANSELC = ANSELC & ~( (1<<0)|(1<<3)|(1<<6) );
  1522  0676  0023               	movlb	3	; select bank3
  1523  0677  080E               	movf	14,w	;volatile
  1524  0678  39B6               	andlw	182
  1525  0679  008E               	movwf	14	;volatile
  1526  067A  0008               	return
  1527  067B                     __end_of_pinConfig:	
  1528                           
  1529                           	psect	text2
  1530  06D6                     __ptext2:	
  1531 ;; *************** function _itoa *****************
  1532 ;; Defined at:
  1533 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;  buf             1    wreg     PTR unsigned char 
  1536 ;;		 -> main@bufB(8), main@bufA(8), 
  1537 ;;  val             2   17[BANK0 ] int 
  1538 ;;  base            2   19[BANK0 ] int 
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;  buf             1   23[BANK0 ] PTR unsigned char 
  1541 ;;		 -> main@bufB(8), main@bufA(8), 
  1542 ;;  cp              1   22[BANK0 ] PTR unsigned char 
  1543 ;;		 -> main@bufB(8), main@bufA(8), 
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  1    wreg      PTR unsigned char 
  1546 ;; Registers used:
  1547 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1553 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1554 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1555 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1556 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1557 ;;Total ram usage:        7 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; Hardware stack levels required when called:    4
  1560 ;; This function calls:
  1561 ;;		_utoa
  1562 ;; This function is called by:
  1563 ;;		_main
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           
  1568                           ;psect for function _itoa
  1569  06D6                     _itoa:	
  1570                           
  1571                           ;incstack = 0
  1572                           ; Regs used in _itoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1573                           ;itoa@buf stored from wreg
  1574  06D6  0020               	movlb	0	; select bank0
  1575  06D7  00B7               	movwf	itoa@buf
  1576  06D8  0837               	movf	itoa@buf,w
  1577  06D9  00B5               	movwf	??_itoa
  1578  06DA  0835               	movf	??_itoa,w
  1579  06DB  00B6               	movwf	itoa@cp
  1580  06DC  1FB2               	btfss	itoa@val+1,7
  1581  06DD  2EEE               	goto	l1641
  1582  06DE  302D               	movlw	45
  1583  06DF  00B5               	movwf	??_itoa
  1584  06E0  0837               	movf	itoa@buf,w
  1585  06E1  0086               	movwf	6
  1586  06E2  0187               	clrf	7
  1587  06E3  0835               	movf	??_itoa,w
  1588  06E4  0081               	movwf	1
  1589  06E5  3001               	movlw	1
  1590  06E6  00B5               	movwf	??_itoa
  1591  06E7  0835               	movf	??_itoa,w
  1592  06E8  07B7               	addwf	itoa@buf,f
  1593  06E9  09B1               	comf	itoa@val,f
  1594  06EA  09B2               	comf	itoa@val+1,f
  1595  06EB  0AB1               	incf	itoa@val,f
  1596  06EC  1903               	skipnz
  1597  06ED  0AB2               	incf	itoa@val+1,f
  1598  06EE                     l1641:	
  1599  06EE  0832               	movf	itoa@val+1,w
  1600  06EF  00A9               	movwf	utoa@val+1
  1601  06F0  0831               	movf	itoa@val,w
  1602  06F1  00A8               	movwf	utoa@val
  1603  06F2  0834               	movf	itoa@base+1,w
  1604  06F3  00AB               	movwf	utoa@base+1
  1605  06F4  0833               	movf	itoa@base,w
  1606  06F5  00AA               	movwf	utoa@base
  1607  06F6  0837               	movf	itoa@buf,w
  1608  06F7  3184  24E7         	fcall	_utoa
  1609  06F9  0008               	return
  1610  06FA                     __end_of_itoa:	
  1611                           ;	Return value of _itoa is never used
  1612                           
  1613                           
  1614                           	psect	text3
  1615  04E7                     __ptext3:	
  1616 ;; *************** function _utoa *****************
  1617 ;; Defined at:
  1618 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;  buf             1    wreg     PTR unsigned char 
  1621 ;;		 -> main@bufB(8), main@bufA(8), 
  1622 ;;  val             2    8[BANK0 ] unsigned int 
  1623 ;;  base            2   10[BANK0 ] int 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;  buf             1   16[BANK0 ] PTR unsigned char 
  1626 ;;		 -> main@bufB(8), main@bufA(8), 
  1627 ;;  v               2   13[BANK0 ] unsigned int 
  1628 ;;  c               1   15[BANK0 ] unsigned char 
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  1    wreg      PTR unsigned char 
  1631 ;; Registers used:
  1632 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1638 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1639 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1640 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1641 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1642 ;;Total ram usage:        9 bytes
  1643 ;; Hardware stack levels used:    1
  1644 ;; Hardware stack levels required when called:    3
  1645 ;; This function calls:
  1646 ;;		___lwdiv
  1647 ;;		___lwmod
  1648 ;; This function is called by:
  1649 ;;		_itoa
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           
  1654                           ;psect for function _utoa
  1655  04E7                     _utoa:	
  1656                           
  1657                           ;incstack = 0
  1658                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1659                           ;utoa@buf stored from wreg
  1660  04E7  0020               	movlb	0	; select bank0
  1661  04E8  00B0               	movwf	utoa@buf
  1662  04E9  0829               	movf	utoa@val+1,w
  1663  04EA  00AE               	movwf	utoa@v+1
  1664  04EB  0828               	movf	utoa@val,w
  1665  04EC  00AD               	movwf	utoa@v
  1666  04ED                     l1517:	
  1667  04ED  082B               	movf	utoa@base+1,w
  1668  04EE  00A1               	movwf	___lwdiv@divisor+1
  1669  04EF  082A               	movf	utoa@base,w
  1670  04F0  00A0               	movwf	___lwdiv@divisor
  1671  04F1  082E               	movf	utoa@v+1,w
  1672  04F2  00A3               	movwf	___lwdiv@dividend+1
  1673  04F3  082D               	movf	utoa@v,w
  1674  04F4  00A2               	movwf	___lwdiv@dividend
  1675  04F5  3186  2618  3184   	fcall	___lwdiv
  1676  04F8  0020               	movlb	0	; select bank0
  1677  04F9  0821               	movf	?___lwdiv+1,w
  1678  04FA  00AE               	movwf	utoa@v+1
  1679  04FB  0820               	movf	?___lwdiv,w
  1680  04FC  00AD               	movwf	utoa@v
  1681  04FD  3001               	movlw	1
  1682  04FE  00AC               	movwf	??_utoa
  1683  04FF  082C               	movf	??_utoa,w
  1684  0500  07B0               	addwf	utoa@buf,f
  1685  0501  082D               	movf	utoa@v,w
  1686  0502  042E               	iorwf	utoa@v+1,w
  1687  0503  1D03               	btfss	3,2
  1688  0504  2CED               	goto	l1517
  1689  0505  0830               	movf	utoa@buf,w
  1690  0506  0086               	movwf	6
  1691  0507  0187               	clrf	7
  1692  0508  0181               	clrf	1
  1693  0509  3001               	movlw	1
  1694  050A  02B0               	subwf	utoa@buf,f
  1695  050B                     l1527:	
  1696  050B  082B               	movf	utoa@base+1,w
  1697  050C  00A1               	movwf	___lwmod@divisor+1
  1698  050D  082A               	movf	utoa@base,w
  1699  050E  00A0               	movwf	___lwmod@divisor
  1700  050F  0829               	movf	utoa@val+1,w
  1701  0510  00A3               	movwf	___lwmod@dividend+1
  1702  0511  0828               	movf	utoa@val,w
  1703  0512  00A2               	movwf	___lwmod@dividend
  1704  0513  3186  26A9  3184   	fcall	___lwmod
  1705  0516  0020               	movlb	0	; select bank0
  1706  0517  0820               	movf	?___lwmod,w
  1707  0518  00AC               	movwf	??_utoa
  1708  0519  082C               	movf	??_utoa,w
  1709  051A  00AF               	movwf	utoa@c
  1710  051B  082B               	movf	utoa@base+1,w
  1711  051C  00A1               	movwf	___lwdiv@divisor+1
  1712  051D  082A               	movf	utoa@base,w
  1713  051E  00A0               	movwf	___lwdiv@divisor
  1714  051F  0829               	movf	utoa@val+1,w
  1715  0520  00A3               	movwf	___lwdiv@dividend+1
  1716  0521  0828               	movf	utoa@val,w
  1717  0522  00A2               	movwf	___lwdiv@dividend
  1718  0523  3186  2618  3184   	fcall	___lwdiv
  1719  0526  0020               	movlb	0	; select bank0
  1720  0527  0821               	movf	?___lwdiv+1,w
  1721  0528  00A9               	movwf	utoa@val+1
  1722  0529  0820               	movf	?___lwdiv,w
  1723  052A  00A8               	movwf	utoa@val
  1724  052B  300A               	movlw	10
  1725  052C  022F               	subwf	utoa@c,w
  1726  052D  1C03               	skipc
  1727  052E  2D33               	goto	l522
  1728  052F  3007               	movlw	7
  1729  0530  00AC               	movwf	??_utoa
  1730  0531  082C               	movf	??_utoa,w
  1731  0532  07AF               	addwf	utoa@c,f
  1732  0533                     l522:	
  1733  0533  3030               	movlw	48
  1734  0534  00AC               	movwf	??_utoa
  1735  0535  082C               	movf	??_utoa,w
  1736  0536  07AF               	addwf	utoa@c,f
  1737  0537  082F               	movf	utoa@c,w
  1738  0538  00AC               	movwf	??_utoa
  1739  0539  0830               	movf	utoa@buf,w
  1740  053A  0086               	movwf	6
  1741  053B  0187               	clrf	7
  1742  053C  082C               	movf	??_utoa,w
  1743  053D  0081               	movwf	1
  1744  053E  3001               	movlw	1
  1745  053F  02B0               	subwf	utoa@buf,f
  1746  0540  0828               	movf	utoa@val,w
  1747  0541  0429               	iorwf	utoa@val+1,w
  1748  0542  1D03               	btfss	3,2
  1749  0543  2D0B               	goto	l1527
  1750                           
  1751                           ;	Return value of _utoa is never used
  1752  0544  3001               	movlw	1
  1753  0545  00AC               	movwf	??_utoa
  1754  0546  082C               	movf	??_utoa,w
  1755  0547  07B0               	addwf	utoa@buf,f
  1756  0548  0008               	return
  1757  0549                     __end_of_utoa:	
  1758                           
  1759                           	psect	text4
  1760  06A9                     __ptext4:	
  1761 ;; *************** function ___lwmod *****************
  1762 ;; Defined at:
  1763 ;;		line 6 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;  divisor         2    0[BANK0 ] unsigned int 
  1766 ;;  dividend        2    2[BANK0 ] unsigned int 
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  counter         1    5[BANK0 ] unsigned char 
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  2    0[BANK0 ] unsigned int 
  1771 ;; Registers used:
  1772 ;;		wreg, status,2, status,0
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1778 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1779 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1780 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1781 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1782 ;;Total ram usage:        6 bytes
  1783 ;; Hardware stack levels used:    1
  1784 ;; Hardware stack levels required when called:    2
  1785 ;; This function calls:
  1786 ;;		Nothing
  1787 ;; This function is called by:
  1788 ;;		_utoa
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           
  1792                           
  1793                           ;psect for function ___lwmod
  1794  06A9                     ___lwmod:	
  1795                           
  1796                           ;incstack = 0
  1797                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1798  06A9  0020               	movlb	0	; select bank0
  1799  06AA  0820               	movf	___lwmod@divisor,w
  1800  06AB  0421               	iorwf	___lwmod@divisor+1,w
  1801  06AC  1903               	btfsc	3,2
  1802  06AD  2ED1               	goto	l1329
  1803  06AE  01A5               	clrf	___lwmod@counter
  1804  06AF  0AA5               	incf	___lwmod@counter,f
  1805  06B0                     l1319:	
  1806  06B0  1BA1               	btfsc	___lwmod@divisor+1,7
  1807  06B1  2EBC               	goto	l1321
  1808  06B2  3001               	movlw	1
  1809  06B3                     u1255:	
  1810  06B3  35A0               	lslf	___lwmod@divisor,f
  1811  06B4  0DA1               	rlf	___lwmod@divisor+1,f
  1812  06B5  0B89               	decfsz	9,f
  1813  06B6  2EB3               	goto	u1255
  1814  06B7  3001               	movlw	1
  1815  06B8  00A4               	movwf	??___lwmod
  1816  06B9  0824               	movf	??___lwmod,w
  1817  06BA  07A5               	addwf	___lwmod@counter,f
  1818  06BB  2EB0               	goto	l1319
  1819  06BC                     l1321:	
  1820  06BC  0821               	movf	___lwmod@divisor+1,w
  1821  06BD  0223               	subwf	___lwmod@dividend+1,w
  1822  06BE  1D03               	skipz
  1823  06BF  2EC2               	goto	u1275
  1824  06C0  0820               	movf	___lwmod@divisor,w
  1825  06C1  0222               	subwf	___lwmod@dividend,w
  1826  06C2                     u1275:	
  1827  06C2  1C03               	skipc
  1828  06C3  2EC8               	goto	l1325
  1829  06C4  0820               	movf	___lwmod@divisor,w
  1830  06C5  02A2               	subwf	___lwmod@dividend,f
  1831  06C6  0821               	movf	___lwmod@divisor+1,w
  1832  06C7  3BA3               	subwfb	___lwmod@dividend+1,f
  1833  06C8                     l1325:	
  1834  06C8  3001               	movlw	1
  1835  06C9                     u1285:	
  1836  06C9  36A1               	lsrf	___lwmod@divisor+1,f
  1837  06CA  0CA0               	rrf	___lwmod@divisor,f
  1838  06CB  0B89               	decfsz	9,f
  1839  06CC  2EC9               	goto	u1285
  1840  06CD  3001               	movlw	1
  1841  06CE  02A5               	subwf	___lwmod@counter,f
  1842  06CF  1D03               	btfss	3,2
  1843  06D0  2EBC               	goto	l1321
  1844  06D1                     l1329:	
  1845  06D1  0823               	movf	___lwmod@dividend+1,w
  1846  06D2  00A1               	movwf	?___lwmod+1
  1847  06D3  0822               	movf	___lwmod@dividend,w
  1848  06D4  00A0               	movwf	?___lwmod
  1849  06D5  0008               	return
  1850  06D6                     __end_of___lwmod:	
  1851                           
  1852                           	psect	text5
  1853  0618                     __ptext5:	
  1854 ;; *************** function ___lwdiv *****************
  1855 ;; Defined at:
  1856 ;;		line 6 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;  divisor         2    0[BANK0 ] unsigned int 
  1859 ;;  dividend        2    2[BANK0 ] unsigned int 
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;  quotient        2    5[BANK0 ] unsigned int 
  1862 ;;  counter         1    7[BANK0 ] unsigned char 
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  2    0[BANK0 ] unsigned int 
  1865 ;; Registers used:
  1866 ;;		wreg, status,2, status,0
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1872 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1873 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1874 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1875 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1876 ;;Total ram usage:        8 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    2
  1879 ;; This function calls:
  1880 ;;		Nothing
  1881 ;; This function is called by:
  1882 ;;		_utoa
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           
  1887                           ;psect for function ___lwdiv
  1888  0618                     ___lwdiv:	
  1889                           
  1890                           ;incstack = 0
  1891                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1892  0618  0020               	movlb	0	; select bank0
  1893  0619  01A5               	clrf	___lwdiv@quotient
  1894  061A  01A6               	clrf	___lwdiv@quotient+1
  1895  061B  0820               	movf	___lwdiv@divisor,w
  1896  061C  0421               	iorwf	___lwdiv@divisor+1,w
  1897  061D  1903               	btfsc	3,2
  1898  061E  2E48               	goto	l1307
  1899  061F  01A7               	clrf	___lwdiv@counter
  1900  0620  0AA7               	incf	___lwdiv@counter,f
  1901  0621                     l1295:	
  1902  0621  1BA1               	btfsc	___lwdiv@divisor+1,7
  1903  0622  2E2D               	goto	l1297
  1904  0623  3001               	movlw	1
  1905  0624                     u1185:	
  1906  0624  35A0               	lslf	___lwdiv@divisor,f
  1907  0625  0DA1               	rlf	___lwdiv@divisor+1,f
  1908  0626  0B89               	decfsz	9,f
  1909  0627  2E24               	goto	u1185
  1910  0628  3001               	movlw	1
  1911  0629  00A4               	movwf	??___lwdiv
  1912  062A  0824               	movf	??___lwdiv,w
  1913  062B  07A7               	addwf	___lwdiv@counter,f
  1914  062C  2E21               	goto	l1295
  1915  062D                     l1297:	
  1916  062D  3001               	movlw	1
  1917  062E                     u1205:	
  1918  062E  35A5               	lslf	___lwdiv@quotient,f
  1919  062F  0DA6               	rlf	___lwdiv@quotient+1,f
  1920  0630  0B89               	decfsz	9,f
  1921  0631  2E2E               	goto	u1205
  1922  0632  0821               	movf	___lwdiv@divisor+1,w
  1923  0633  0223               	subwf	___lwdiv@dividend+1,w
  1924  0634  1D03               	skipz
  1925  0635  2E38               	goto	u1215
  1926  0636  0820               	movf	___lwdiv@divisor,w
  1927  0637  0222               	subwf	___lwdiv@dividend,w
  1928  0638                     u1215:	
  1929  0638  1C03               	skipc
  1930  0639  2E3F               	goto	l1303
  1931  063A  0820               	movf	___lwdiv@divisor,w
  1932  063B  02A2               	subwf	___lwdiv@dividend,f
  1933  063C  0821               	movf	___lwdiv@divisor+1,w
  1934  063D  3BA3               	subwfb	___lwdiv@dividend+1,f
  1935  063E  1425               	bsf	___lwdiv@quotient,0
  1936  063F                     l1303:	
  1937  063F  3001               	movlw	1
  1938  0640                     u1225:	
  1939  0640  36A1               	lsrf	___lwdiv@divisor+1,f
  1940  0641  0CA0               	rrf	___lwdiv@divisor,f
  1941  0642  0B89               	decfsz	9,f
  1942  0643  2E40               	goto	u1225
  1943  0644  3001               	movlw	1
  1944  0645  02A7               	subwf	___lwdiv@counter,f
  1945  0646  1D03               	btfss	3,2
  1946  0647  2E2D               	goto	l1297
  1947  0648                     l1307:	
  1948  0648  0826               	movf	___lwdiv@quotient+1,w
  1949  0649  00A1               	movwf	?___lwdiv+1
  1950  064A  0825               	movf	___lwdiv@quotient,w
  1951  064B  00A0               	movwf	?___lwdiv
  1952  064C  0008               	return
  1953  064D                     __end_of___lwdiv:	
  1954                           
  1955                           	psect	text6
  1956  0370                     __ptext6:	
  1957 ;; *************** function _echo *****************
  1958 ;; Defined at:
  1959 ;;		line 236 in file "FinalProject3.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  port            1    wreg     unsigned char 
  1962 ;;  pin             2   60[BANK0 ] int 
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;  port            1   63[BANK0 ] unsigned char 
  1965 ;;  a               2   66[BANK0 ] int 
  1966 ;;  sfrdev          2   64[BANK0 ] PTR unsigned char 
  1967 ;;		 -> PORTC(1), PORTB(1), PORTA(1), 
  1968 ;; Return value:  Size  Location     Type
  1969 ;;                  2   60[BANK0 ] int 
  1970 ;; Registers used:
  1971 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1977 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1978 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1979 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1980 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1981 ;;Total ram usage:        8 bytes
  1982 ;; Hardware stack levels used:    1
  1983 ;; Hardware stack levels required when called:    4
  1984 ;; This function calls:
  1985 ;;		___awtoft
  1986 ;;		___ftdiv
  1987 ;;		___ftmul
  1988 ;;		___fttol
  1989 ;; This function is called by:
  1990 ;;		_main
  1991 ;;		_ping
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           
  1996                           ;psect for function _echo
  1997  0370                     _echo:	
  1998                           
  1999                           ;incstack = 0
  2000                           ; Regs used in _echo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2001                           ;echo@port stored from wreg
  2002  0370  0020               	movlb	0	; select bank0
  2003  0371  00DF               	movwf	echo@port
  2004                           
  2005                           ;FinalProject3.c: 237: char* sfrdev;
  2006                           ;FinalProject3.c: 238: switch(port){
  2007  0372  2B80               	goto	l1603
  2008  0373                     l140:	
  2009                           ;FinalProject3.c: 239: case 'A' :
  2010                           
  2011                           
  2012                           ;FinalProject3.c: 240: sfrdev = &PORTA;
  2013  0373  3000               	movlw	0
  2014  0374  00E1               	movwf	echo@sfrdev+1
  2015  0375  300C               	movlw	12
  2016  0376  2B7E               	goto	L2
  2017  0377                     l142:	
  2018                           ;FinalProject3.c: 242: case 'B' :
  2019                           
  2020                           ;FinalProject3.c: 241: break;
  2021                           
  2022                           
  2023                           ;FinalProject3.c: 243: sfrdev = &PORTB;
  2024  0377  3000               	movlw	0
  2025  0378  00E1               	movwf	echo@sfrdev+1
  2026  0379  300D               	movlw	13
  2027  037A  2B7E               	goto	L2
  2028  037B                     l143:	
  2029                           ;FinalProject3.c: 245: case 'C' :
  2030                           
  2031                           ;FinalProject3.c: 244: break;
  2032                           
  2033                           
  2034                           ;FinalProject3.c: 246: sfrdev = &PORTC;
  2035  037B  3000               	movlw	0
  2036  037C  00E1               	movwf	echo@sfrdev+1
  2037  037D  300E               	movlw	14
  2038  037E                     L2:	
  2039  037E  00E0               	movwf	echo@sfrdev
  2040                           
  2041                           ;FinalProject3.c: 247: }
  2042  037F  2B8B               	goto	l1605
  2043  0380                     l1603:	
  2044  0380  085F               	movf	echo@port,w
  2045                           
  2046                           ; Switch size 1, requested type "space"
  2047                           ; Number of cases is 3, Range of values is 65 to 67
  2048                           ; switch strategies available:
  2049                           ; Name         Instructions Cycles
  2050                           ; simple_byte           10     6 (average)
  2051                           ; direct_byte           15     9 (fixed)
  2052                           ; jumptable            263     9 (fixed)
  2053                           ;	Chosen strategy is simple_byte
  2054  0381  3A41               	xorlw	65	; case 65
  2055  0382  1903               	skipnz
  2056  0383  2B73               	goto	l140
  2057  0384  3A03               	xorlw	3	; case 66
  2058  0385  1903               	skipnz
  2059  0386  2B77               	goto	l142
  2060  0387  3A01               	xorlw	1	; case 67
  2061  0388  1903               	skipnz
  2062  0389  2B7B               	goto	l143
  2063  038A  2B8B               	goto	l1605
  2064  038B                     l1605:	
  2065                           
  2066                           ;FinalProject3.c: 249: int a;
  2067                           ;FinalProject3.c: 251: T1CON = 0x10;
  2068  038B  3010               	movlw	16
  2069  038C  0098               	movwf	24	;volatile
  2070                           
  2071                           ;FinalProject3.c: 253: TMR1H = 0;
  2072  038D  0197               	clrf	23	;volatile
  2073                           
  2074                           ;FinalProject3.c: 254: TMR1L = 0;
  2075  038E  0196               	clrf	22	;volatile
  2076                           
  2077                           ;FinalProject3.c: 256: RA0 = 1;
  2078  038F  140C               	bsf	12,0	;volatile
  2079                           
  2080                           ;FinalProject3.c: 257: _delay((unsigned long)((10)*(8000000/4000000.0)));
  2081  0390  3006               	movlw	6
  2082  0391                     u2047:	
  2083  0391  0B89               	decfsz	9,f
  2084  0392  2B91               	goto	u2047
  2085  0393  3200               	nop2
  2086                           
  2087                           ;FinalProject3.c: 258: RA0 = 0;
  2088  0394  0020               	movlb	0	; select bank0
  2089  0395  100C               	bcf	12,0	;volatile
  2090  0396                     l1615:	
  2091                           ;FinalProject3.c: 260: while( !(*sfrdev & (1<<pin)) );
  2092                           
  2093  0396  0860               	movf	echo@sfrdev,w
  2094  0397  0086               	movwf	6
  2095  0398  0861               	movf	echo@sfrdev+1,w
  2096  0399  0087               	movwf	7
  2097  039A  3001               	movlw	1
  2098  039B  00DE               	movwf	??_echo
  2099  039C  0A5C               	incf	echo@pin,w
  2100  039D  2B9F               	goto	u1704
  2101  039E                     u1705:	
  2102  039E  35DE               	lslf	??_echo,f
  2103  039F                     u1704:	
  2104  039F  0B89               	decfsz	9,f
  2105  03A0  2B9E               	goto	u1705
  2106  03A1  085E               	movf	??_echo,w
  2107  03A2  0501               	andwf	1,w
  2108  03A3  1903               	btfsc	3,2
  2109  03A4  2B96               	goto	l1615
  2110                           
  2111                           ;FinalProject3.c: 261: TMR1ON = 1;
  2112  03A5  1418               	bsf	24,0	;volatile
  2113  03A6                     l1617:	
  2114                           ;FinalProject3.c: 262: while( (*sfrdev & (1<<pin)) );
  2115                           
  2116  03A6  0860               	movf	echo@sfrdev,w
  2117  03A7  0086               	movwf	6
  2118  03A8  0861               	movf	echo@sfrdev+1,w
  2119  03A9  0087               	movwf	7
  2120  03AA  3001               	movlw	1
  2121  03AB  00DE               	movwf	??_echo
  2122  03AC  0A5C               	incf	echo@pin,w
  2123  03AD  2BAF               	goto	u1724
  2124  03AE                     u1725:	
  2125  03AE  35DE               	lslf	??_echo,f
  2126  03AF                     u1724:	
  2127  03AF  0B89               	decfsz	9,f
  2128  03B0  2BAE               	goto	u1725
  2129  03B1  085E               	movf	??_echo,w
  2130  03B2  0501               	andwf	1,w
  2131  03B3  1D03               	btfss	3,2
  2132  03B4  2BA6               	goto	l1617
  2133                           
  2134                           ;FinalProject3.c: 263: TMR1ON = 0;
  2135  03B5  1018               	bcf	24,0	;volatile
  2136                           
  2137                           ;FinalProject3.c: 265: a = (TMR1L | (TMR1H<<8));
  2138  03B6  0817               	movf	23,w	;volatile
  2139  03B7  00E3               	movwf	echo@a+1
  2140  03B8  0816               	movf	22,w	;volatile
  2141  03B9  00E2               	movwf	echo@a
  2142                           
  2143                           ;FinalProject3.c: 266: a = (int)((float)a/58.82*2);
  2144  03BA  0863               	movf	echo@a+1,w
  2145  03BB  00A9               	movwf	___awtoft@c+1
  2146  03BC  0862               	movf	echo@a,w
  2147  03BD  00A8               	movwf	___awtoft@c
  2148  03BE  3186  26FA  3183   	fcall	___awtoft
  2149  03C1  0020               	movlb	0	; select bank0
  2150  03C2  0828               	movf	?___awtoft,w
  2151  03C3  00B1               	movwf	___ftdiv@f1
  2152  03C4  0829               	movf	?___awtoft+1,w
  2153  03C5  00B2               	movwf	___ftdiv@f1+1
  2154  03C6  082A               	movf	?___awtoft+2,w
  2155  03C7  00B3               	movwf	___ftdiv@f1+2
  2156  03C8  3048               	movlw	72
  2157  03C9  00AE               	movwf	___ftdiv@f2
  2158  03CA  306B               	movlw	107
  2159  03CB  00AF               	movwf	___ftdiv@f2+1
  2160  03CC  3042               	movlw	66
  2161  03CD  00B0               	movwf	___ftdiv@f2+2
  2162  03CE  3182  22C7  3183   	fcall	___ftdiv
  2163  03D1  0020               	movlb	0	; select bank0
  2164  03D2  082E               	movf	?___ftdiv,w
  2165  03D3  00C1               	movwf	___ftmul@f2
  2166  03D4  082F               	movf	?___ftdiv+1,w
  2167  03D5  00C2               	movwf	___ftmul@f2+1
  2168  03D6  0830               	movf	?___ftdiv+2,w
  2169  03D7  00C3               	movwf	___ftmul@f2+2
  2170  03D8  3000               	movlw	0
  2171  03D9  00BE               	movwf	___ftmul@f1
  2172  03DA  3000               	movlw	0
  2173  03DB  00BF               	movwf	___ftmul@f1+1
  2174  03DC  3040               	movlw	64
  2175  03DD  00C0               	movwf	___ftmul@f1+2
  2176  03DE  3182  2213  3183   	fcall	___ftmul
  2177  03E1  0020               	movlb	0	; select bank0
  2178  03E2  083E               	movf	?___ftmul,w
  2179  03E3  00CE               	movwf	___fttol@f1
  2180  03E4  083F               	movf	?___ftmul+1,w
  2181  03E5  00CF               	movwf	___fttol@f1+1
  2182  03E6  0840               	movf	?___ftmul+2,w
  2183  03E7  00D0               	movwf	___fttol@f1+2
  2184  03E8  3183  23FB         	fcall	___fttol
  2185  03EA  0020               	movlb	0	; select bank0
  2186  03EB  084F               	movf	?___fttol+1,w
  2187  03EC  00E3               	movwf	echo@a+1
  2188  03ED  084E               	movf	?___fttol,w
  2189  03EE  00E2               	movwf	echo@a
  2190                           
  2191                           ;FinalProject3.c: 267: a = a + 1;
  2192  03EF  0862               	movf	echo@a,w
  2193  03F0  3E01               	addlw	1
  2194  03F1  00E2               	movwf	echo@a
  2195  03F2  3000               	movlw	0
  2196  03F3  3D63               	addwfc	echo@a+1,w
  2197  03F4  00E3               	movwf	echo@a+1
  2198                           
  2199                           ;FinalProject3.c: 269: T1CON = 0x00;
  2200  03F5  0198               	clrf	24	;volatile
  2201                           
  2202                           ;FinalProject3.c: 270: return a;
  2203  03F6  0863               	movf	echo@a+1,w
  2204  03F7  00DD               	movwf	?_echo+1
  2205  03F8  0862               	movf	echo@a,w
  2206  03F9  00DC               	movwf	?_echo
  2207  03FA  0008               	return
  2208  03FB                     __end_of_echo:	
  2209                           
  2210                           	psect	text7
  2211  03FB                     __ptext7:	
  2212 ;; *************** function ___fttol *****************
  2213 ;; Defined at:
  2214 ;;		line 44 in file "/opt/microchip/xc8/v1.45/sources/common/fttol.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;  f1              3   46[BANK0 ] float 
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;  lval            4   55[BANK0 ] unsigned long 
  2219 ;;  exp1            1   59[BANK0 ] unsigned char 
  2220 ;;  sign1           1   54[BANK0 ] unsigned char 
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  4   46[BANK0 ] long 
  2223 ;; Registers used:
  2224 ;;		wreg, status,2, status,0
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2230 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2231 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2232 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2233 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2234 ;;Total ram usage:       14 bytes
  2235 ;; Hardware stack levels used:    1
  2236 ;; Hardware stack levels required when called:    2
  2237 ;; This function calls:
  2238 ;;		Nothing
  2239 ;; This function is called by:
  2240 ;;		_echo
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           
  2245                           ;psect for function ___fttol
  2246  03FB                     ___fttol:	
  2247                           
  2248                           ;incstack = 0
  2249                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2250  03FB  0020               	movlb	0	; select bank0
  2251  03FC  084E               	movf	___fttol@f1,w
  2252  03FD  00D2               	movwf	??___fttol
  2253  03FE  084F               	movf	___fttol@f1+1,w
  2254  03FF  00D3               	movwf	??___fttol+1
  2255  0400  0850               	movf	___fttol@f1+2,w
  2256  0401  00D4               	movwf	??___fttol+2
  2257  0402  1003               	clrc
  2258  0403  0D53               	rlf	??___fttol+1,w
  2259  0404  0D54               	rlf	??___fttol+2,w
  2260  0405  00D5               	movwf	??___fttol+3
  2261  0406  0855               	movf	??___fttol+3,w
  2262  0407  00DB               	movwf	___fttol@exp1
  2263  0408  085B               	movf	___fttol@exp1,w
  2264  0409  1D03               	btfss	3,2
  2265  040A  2C14               	goto	l1479
  2266  040B  3000               	movlw	0
  2267  040C  00D1               	movwf	?___fttol+3
  2268  040D  3000               	movlw	0
  2269  040E  00D0               	movwf	?___fttol+2
  2270  040F  3000               	movlw	0
  2271  0410  00CF               	movwf	?___fttol+1
  2272  0411  3000               	movlw	0
  2273  0412  00CE               	movwf	?___fttol
  2274  0413  0008               	return
  2275  0414                     l1479:	
  2276  0414  084E               	movf	___fttol@f1,w
  2277  0415  00D2               	movwf	??___fttol
  2278  0416  084F               	movf	___fttol@f1+1,w
  2279  0417  00D3               	movwf	??___fttol+1
  2280  0418  0850               	movf	___fttol@f1+2,w
  2281  0419  00D4               	movwf	??___fttol+2
  2282  041A  3017               	movlw	23
  2283  041B                     u1535:	
  2284  041B  36D4               	lsrf	??___fttol+2,f
  2285  041C  0CD3               	rrf	??___fttol+1,f
  2286  041D  0CD2               	rrf	??___fttol,f
  2287  041E  0B89               	decfsz	9,f
  2288  041F  2C1B               	goto	u1535
  2289  0420  0852               	movf	??___fttol,w
  2290  0421  00D5               	movwf	??___fttol+3
  2291  0422  0855               	movf	??___fttol+3,w
  2292  0423  00D6               	movwf	___fttol@sign1
  2293  0424  17CF               	bsf	___fttol@f1+1,7
  2294  0425  30FF               	movlw	255
  2295  0426  05CE               	andwf	___fttol@f1,f
  2296  0427  30FF               	movlw	255
  2297  0428  05CF               	andwf	___fttol@f1+1,f
  2298  0429  3000               	movlw	0
  2299  042A  05D0               	andwf	___fttol@f1+2,f
  2300  042B  084E               	movf	___fttol@f1,w
  2301  042C  00D7               	movwf	___fttol@lval
  2302  042D  084F               	movf	___fttol@f1+1,w
  2303  042E  00D8               	movwf	___fttol@lval+1
  2304  042F  0850               	movf	___fttol@f1+2,w
  2305  0430  00D9               	movwf	___fttol@lval+2
  2306  0431  01DA               	clrf	___fttol@lval+3
  2307  0432  308E               	movlw	142
  2308  0433  02DB               	subwf	___fttol@exp1,f
  2309  0434  1FDB               	btfss	___fttol@exp1,7
  2310  0435  2C52               	goto	l1499
  2311  0436  085B               	movf	___fttol@exp1,w
  2312  0437  3A80               	xorlw	128
  2313  0438  3E8F               	addlw	143
  2314  0439  1803               	skipnc
  2315  043A  2C44               	goto	l1497
  2316  043B  3000               	movlw	0
  2317  043C  00D1               	movwf	?___fttol+3
  2318  043D  3000               	movlw	0
  2319  043E  00D0               	movwf	?___fttol+2
  2320  043F  3000               	movlw	0
  2321  0440  00CF               	movwf	?___fttol+1
  2322  0441  3000               	movlw	0
  2323  0442  00CE               	movwf	?___fttol
  2324  0443  0008               	return
  2325  0444                     l1497:	
  2326  0444  3001               	movlw	1
  2327  0445                     u1565:	
  2328  0445  36DA               	lsrf	___fttol@lval+3,f
  2329  0446  0CD9               	rrf	___fttol@lval+2,f
  2330  0447  0CD8               	rrf	___fttol@lval+1,f
  2331  0448  0CD7               	rrf	___fttol@lval,f
  2332  0449  0B89               	decfsz	9,f
  2333  044A  2C45               	goto	u1565
  2334  044B  3001               	movlw	1
  2335  044C  00D2               	movwf	??___fttol
  2336  044D  0852               	movf	??___fttol,w
  2337  044E  07DB               	addwf	___fttol@exp1,f
  2338  044F  1903               	btfsc	3,2
  2339  0450  2C6B               	goto	l1507
  2340  0451  2C44               	goto	l1497
  2341  0452                     l1499:	
  2342  0452  3018               	movlw	24
  2343  0453  025B               	subwf	___fttol@exp1,w
  2344  0454  1C03               	skipc
  2345  0455  2C68               	goto	l507
  2346  0456  3000               	movlw	0
  2347  0457  00D1               	movwf	?___fttol+3
  2348  0458  3000               	movlw	0
  2349  0459  00D0               	movwf	?___fttol+2
  2350  045A  3000               	movlw	0
  2351  045B  00CF               	movwf	?___fttol+1
  2352  045C  3000               	movlw	0
  2353  045D  00CE               	movwf	?___fttol
  2354  045E  0008               	return
  2355  045F                     l1505:	
  2356  045F  3001               	movlw	1
  2357  0460                     u1595:	
  2358  0460  35D7               	lslf	___fttol@lval,f
  2359  0461  0DD8               	rlf	___fttol@lval+1,f
  2360  0462  0DD9               	rlf	___fttol@lval+2,f
  2361  0463  0DDA               	rlf	___fttol@lval+3,f
  2362  0464  0B89               	decfsz	9,f
  2363  0465  2C60               	goto	u1595
  2364  0466  3001               	movlw	1
  2365  0467  02DB               	subwf	___fttol@exp1,f
  2366  0468                     l507:	
  2367  0468  085B               	movf	___fttol@exp1,w
  2368  0469  1D03               	btfss	3,2
  2369  046A  2C5F               	goto	l1505
  2370  046B                     l1507:	
  2371  046B  0856               	movf	___fttol@sign1,w
  2372  046C  1903               	btfsc	3,2
  2373  046D  2C79               	goto	l1511
  2374  046E  09D7               	comf	___fttol@lval,f
  2375  046F  09D8               	comf	___fttol@lval+1,f
  2376  0470  09D9               	comf	___fttol@lval+2,f
  2377  0471  09DA               	comf	___fttol@lval+3,f
  2378  0472  0AD7               	incf	___fttol@lval,f
  2379  0473  1903               	skipnz
  2380  0474  0AD8               	incf	___fttol@lval+1,f
  2381  0475  1903               	skipnz
  2382  0476  0AD9               	incf	___fttol@lval+2,f
  2383  0477  1903               	skipnz
  2384  0478  0ADA               	incf	___fttol@lval+3,f
  2385  0479                     l1511:	
  2386  0479  085A               	movf	___fttol@lval+3,w
  2387  047A  00D1               	movwf	?___fttol+3
  2388  047B  0859               	movf	___fttol@lval+2,w
  2389  047C  00D0               	movwf	?___fttol+2
  2390  047D  0858               	movf	___fttol@lval+1,w
  2391  047E  00CF               	movwf	?___fttol+1
  2392  047F  0857               	movf	___fttol@lval,w
  2393  0480  00CE               	movwf	?___fttol
  2394  0481  0008               	return
  2395  0482                     __end_of___fttol:	
  2396                           
  2397                           	psect	text8
  2398  0213                     __ptext8:	
  2399 ;; *************** function ___ftmul *****************
  2400 ;; Defined at:
  2401 ;;		line 62 in file "/opt/microchip/xc8/v1.45/sources/common/ftmul.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;  f1              3   30[BANK0 ] float 
  2404 ;;  f2              3   33[BANK0 ] float 
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;  f3_as_produc    3   41[BANK0 ] unsigned um
  2407 ;;  sign            1   45[BANK0 ] unsigned char 
  2408 ;;  cntr            1   44[BANK0 ] unsigned char 
  2409 ;;  exp             1   40[BANK0 ] unsigned char 
  2410 ;; Return value:  Size  Location     Type
  2411 ;;                  3   30[BANK0 ] float 
  2412 ;; Registers used:
  2413 ;;		wreg, status,2, status,0, pclath, cstack
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2419 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2420 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2421 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2422 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2423 ;;Total ram usage:       16 bytes
  2424 ;; Hardware stack levels used:    1
  2425 ;; Hardware stack levels required when called:    3
  2426 ;; This function calls:
  2427 ;;		___ftpack
  2428 ;; This function is called by:
  2429 ;;		_echo
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           
  2434                           ;psect for function ___ftmul
  2435  0213                     ___ftmul:	
  2436                           
  2437                           ;incstack = 0
  2438                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2439  0213  0020               	movlb	0	; select bank0
  2440  0214  083E               	movf	___ftmul@f1,w
  2441  0215  00C4               	movwf	??___ftmul
  2442  0216  083F               	movf	___ftmul@f1+1,w
  2443  0217  00C5               	movwf	??___ftmul+1
  2444  0218  0840               	movf	___ftmul@f1+2,w
  2445  0219  00C6               	movwf	??___ftmul+2
  2446  021A  1003               	clrc
  2447  021B  0D45               	rlf	??___ftmul+1,w
  2448  021C  0D46               	rlf	??___ftmul+2,w
  2449  021D  00C7               	movwf	??___ftmul+3
  2450  021E  0847               	movf	??___ftmul+3,w
  2451  021F  00C8               	movwf	___ftmul@exp
  2452  0220  0848               	movf	___ftmul@exp,w
  2453  0221  1D03               	btfss	3,2
  2454  0222  2A2A               	goto	l1429
  2455  0223  3000               	movlw	0
  2456  0224  00BE               	movwf	?___ftmul
  2457  0225  3000               	movlw	0
  2458  0226  00BF               	movwf	?___ftmul+1
  2459  0227  3000               	movlw	0
  2460  0228  00C0               	movwf	?___ftmul+2
  2461  0229  0008               	return
  2462  022A                     l1429:	
  2463  022A  0841               	movf	___ftmul@f2,w
  2464  022B  00C4               	movwf	??___ftmul
  2465  022C  0842               	movf	___ftmul@f2+1,w
  2466  022D  00C5               	movwf	??___ftmul+1
  2467  022E  0843               	movf	___ftmul@f2+2,w
  2468  022F  00C6               	movwf	??___ftmul+2
  2469  0230  1003               	clrc
  2470  0231  0D45               	rlf	??___ftmul+1,w
  2471  0232  0D46               	rlf	??___ftmul+2,w
  2472  0233  00C7               	movwf	??___ftmul+3
  2473  0234  0847               	movf	??___ftmul+3,w
  2474  0235  00CD               	movwf	___ftmul@sign
  2475  0236  084D               	movf	___ftmul@sign,w
  2476  0237  1D03               	btfss	3,2
  2477  0238  2A40               	goto	l1435
  2478  0239  3000               	movlw	0
  2479  023A  00BE               	movwf	?___ftmul
  2480  023B  3000               	movlw	0
  2481  023C  00BF               	movwf	?___ftmul+1
  2482  023D  3000               	movlw	0
  2483  023E  00C0               	movwf	?___ftmul+2
  2484  023F  0008               	return
  2485  0240                     l1435:	
  2486  0240  084D               	movf	___ftmul@sign,w
  2487  0241  3E7B               	addlw	123
  2488  0242  00C4               	movwf	??___ftmul
  2489  0243  0844               	movf	??___ftmul,w
  2490  0244  07C8               	addwf	___ftmul@exp,f
  2491  0245  083E               	movf	___ftmul@f1,w
  2492  0246  00C4               	movwf	??___ftmul
  2493  0247  083F               	movf	___ftmul@f1+1,w
  2494  0248  00C5               	movwf	??___ftmul+1
  2495  0249  0840               	movf	___ftmul@f1+2,w
  2496  024A  00C6               	movwf	??___ftmul+2
  2497  024B  3010               	movlw	16
  2498  024C                     u1425:	
  2499  024C  36C6               	lsrf	??___ftmul+2,f
  2500  024D  0CC5               	rrf	??___ftmul+1,f
  2501  024E  0CC4               	rrf	??___ftmul,f
  2502  024F  0B89               	decfsz	9,f
  2503  0250  2A4C               	goto	u1425
  2504  0251  0844               	movf	??___ftmul,w
  2505  0252  00C7               	movwf	??___ftmul+3
  2506  0253  0847               	movf	??___ftmul+3,w
  2507  0254  00CD               	movwf	___ftmul@sign
  2508  0255  0841               	movf	___ftmul@f2,w
  2509  0256  00C4               	movwf	??___ftmul
  2510  0257  0842               	movf	___ftmul@f2+1,w
  2511  0258  00C5               	movwf	??___ftmul+1
  2512  0259  0843               	movf	___ftmul@f2+2,w
  2513  025A  00C6               	movwf	??___ftmul+2
  2514  025B  3010               	movlw	16
  2515  025C                     u1435:	
  2516  025C  36C6               	lsrf	??___ftmul+2,f
  2517  025D  0CC5               	rrf	??___ftmul+1,f
  2518  025E  0CC4               	rrf	??___ftmul,f
  2519  025F  0B89               	decfsz	9,f
  2520  0260  2A5C               	goto	u1435
  2521  0261  0844               	movf	??___ftmul,w
  2522  0262  00C7               	movwf	??___ftmul+3
  2523  0263  0847               	movf	??___ftmul+3,w
  2524  0264  06CD               	xorwf	___ftmul@sign,f
  2525  0265  3080               	movlw	128
  2526  0266  00C4               	movwf	??___ftmul
  2527  0267  0844               	movf	??___ftmul,w
  2528  0268  05CD               	andwf	___ftmul@sign,f
  2529  0269  17BF               	bsf	___ftmul@f1+1,7
  2530  026A  17C2               	bsf	___ftmul@f2+1,7
  2531  026B  30FF               	movlw	255
  2532  026C  05C1               	andwf	___ftmul@f2,f
  2533  026D  30FF               	movlw	255
  2534  026E  05C2               	andwf	___ftmul@f2+1,f
  2535  026F  3000               	movlw	0
  2536  0270  05C3               	andwf	___ftmul@f2+2,f
  2537  0271  3000               	movlw	0
  2538  0272  00C9               	movwf	___ftmul@f3_as_product
  2539  0273  3000               	movlw	0
  2540  0274  00CA               	movwf	___ftmul@f3_as_product+1
  2541  0275  3000               	movlw	0
  2542  0276  00CB               	movwf	___ftmul@f3_as_product+2
  2543  0277  3007               	movlw	7
  2544  0278  00C4               	movwf	??___ftmul
  2545  0279  0844               	movf	??___ftmul,w
  2546  027A  00CC               	movwf	___ftmul@cntr
  2547  027B                     l1447:	
  2548  027B  1C3E               	btfss	___ftmul@f1,0
  2549  027C  2A83               	goto	l1451
  2550  027D  0841               	movf	___ftmul@f2,w
  2551  027E  07C9               	addwf	___ftmul@f3_as_product,f
  2552  027F  0842               	movf	___ftmul@f2+1,w
  2553  0280  3DCA               	addwfc	___ftmul@f3_as_product+1,f
  2554  0281  0843               	movf	___ftmul@f2+2,w
  2555  0282  3DCB               	addwfc	___ftmul@f3_as_product+2,f
  2556  0283                     l1451:	
  2557  0283  3001               	movlw	1
  2558  0284                     u1455:	
  2559  0284  36C0               	lsrf	___ftmul@f1+2,f
  2560  0285  0CBF               	rrf	___ftmul@f1+1,f
  2561  0286  0CBE               	rrf	___ftmul@f1,f
  2562  0287  0B89               	decfsz	9,f
  2563  0288  2A84               	goto	u1455
  2564  0289  3001               	movlw	1
  2565  028A                     u1465:	
  2566  028A  35C1               	lslf	___ftmul@f2,f
  2567  028B  0DC2               	rlf	___ftmul@f2+1,f
  2568  028C  0DC3               	rlf	___ftmul@f2+2,f
  2569  028D  0B89               	decfsz	9,f
  2570  028E  2A8A               	goto	u1465
  2571  028F  3001               	movlw	1
  2572  0290  02CC               	subwf	___ftmul@cntr,f
  2573  0291  1D03               	btfss	3,2
  2574  0292  2A7B               	goto	l1447
  2575  0293  3009               	movlw	9
  2576  0294  00C4               	movwf	??___ftmul
  2577  0295  0844               	movf	??___ftmul,w
  2578  0296  00CC               	movwf	___ftmul@cntr
  2579  0297                     l1459:	
  2580  0297  1C3E               	btfss	___ftmul@f1,0
  2581  0298  2A9F               	goto	l1463
  2582  0299  0841               	movf	___ftmul@f2,w
  2583  029A  07C9               	addwf	___ftmul@f3_as_product,f
  2584  029B  0842               	movf	___ftmul@f2+1,w
  2585  029C  3DCA               	addwfc	___ftmul@f3_as_product+1,f
  2586  029D  0843               	movf	___ftmul@f2+2,w
  2587  029E  3DCB               	addwfc	___ftmul@f3_as_product+2,f
  2588  029F                     l1463:	
  2589  029F  3001               	movlw	1
  2590  02A0                     u1495:	
  2591  02A0  36C0               	lsrf	___ftmul@f1+2,f
  2592  02A1  0CBF               	rrf	___ftmul@f1+1,f
  2593  02A2  0CBE               	rrf	___ftmul@f1,f
  2594  02A3  0B89               	decfsz	9,f
  2595  02A4  2AA0               	goto	u1495
  2596  02A5  3001               	movlw	1
  2597  02A6                     u1505:	
  2598  02A6  36CB               	lsrf	___ftmul@f3_as_product+2,f
  2599  02A7  0CCA               	rrf	___ftmul@f3_as_product+1,f
  2600  02A8  0CC9               	rrf	___ftmul@f3_as_product,f
  2601  02A9  0B89               	decfsz	9,f
  2602  02AA  2AA6               	goto	u1505
  2603  02AB  3001               	movlw	1
  2604  02AC  02CC               	subwf	___ftmul@cntr,f
  2605  02AD  1D03               	btfss	3,2
  2606  02AE  2A97               	goto	l1459
  2607  02AF  0849               	movf	___ftmul@f3_as_product,w
  2608  02B0  00A0               	movwf	___ftpack@arg
  2609  02B1  084A               	movf	___ftmul@f3_as_product+1,w
  2610  02B2  00A1               	movwf	___ftpack@arg+1
  2611  02B3  084B               	movf	___ftmul@f3_as_product+2,w
  2612  02B4  00A2               	movwf	___ftpack@arg+2
  2613  02B5  0848               	movf	___ftmul@exp,w
  2614  02B6  00C4               	movwf	??___ftmul
  2615  02B7  0844               	movf	??___ftmul,w
  2616  02B8  00A3               	movwf	___ftpack@exp
  2617  02B9  084D               	movf	___ftmul@sign,w
  2618  02BA  00C5               	movwf	??___ftmul+1
  2619  02BB  0845               	movf	??___ftmul+1,w
  2620  02BC  00A4               	movwf	___ftpack@sign
  2621  02BD  3184  2482         	fcall	___ftpack
  2622  02BF  0020               	movlb	0	; select bank0
  2623  02C0  0820               	movf	?___ftpack,w
  2624  02C1  00BE               	movwf	?___ftmul
  2625  02C2  0821               	movf	?___ftpack+1,w
  2626  02C3  00BF               	movwf	?___ftmul+1
  2627  02C4  0822               	movf	?___ftpack+2,w
  2628  02C5  00C0               	movwf	?___ftmul+2
  2629  02C6  0008               	return
  2630  02C7                     __end_of___ftmul:	
  2631                           
  2632                           	psect	text9
  2633  02C7                     __ptext9:	
  2634 ;; *************** function ___ftdiv *****************
  2635 ;; Defined at:
  2636 ;;		line 56 in file "/opt/microchip/xc8/v1.45/sources/common/ftdiv.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;  f2              3   14[BANK0 ] float 
  2639 ;;  f1              3   17[BANK0 ] float 
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;  f3              3   25[BANK0 ] float 
  2642 ;;  sign            1   29[BANK0 ] unsigned char 
  2643 ;;  exp             1   28[BANK0 ] unsigned char 
  2644 ;;  cntr            1   24[BANK0 ] unsigned char 
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  3   14[BANK0 ] float 
  2647 ;; Registers used:
  2648 ;;		wreg, status,2, status,0, pclath, cstack
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2654 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2655 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2656 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2657 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2658 ;;Total ram usage:       16 bytes
  2659 ;; Hardware stack levels used:    1
  2660 ;; Hardware stack levels required when called:    3
  2661 ;; This function calls:
  2662 ;;		___ftpack
  2663 ;; This function is called by:
  2664 ;;		_echo
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           
  2669                           ;psect for function ___ftdiv
  2670  02C7                     ___ftdiv:	
  2671                           
  2672                           ;incstack = 0
  2673                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2674  02C7  0020               	movlb	0	; select bank0
  2675  02C8  0831               	movf	___ftdiv@f1,w
  2676  02C9  00B4               	movwf	??___ftdiv
  2677  02CA  0832               	movf	___ftdiv@f1+1,w
  2678  02CB  00B5               	movwf	??___ftdiv+1
  2679  02CC  0833               	movf	___ftdiv@f1+2,w
  2680  02CD  00B6               	movwf	??___ftdiv+2
  2681  02CE  1003               	clrc
  2682  02CF  0D35               	rlf	??___ftdiv+1,w
  2683  02D0  0D36               	rlf	??___ftdiv+2,w
  2684  02D1  00B7               	movwf	??___ftdiv+3
  2685  02D2  0837               	movf	??___ftdiv+3,w
  2686  02D3  00BC               	movwf	___ftdiv@exp
  2687  02D4  083C               	movf	___ftdiv@exp,w
  2688  02D5  1D03               	btfss	3,2
  2689  02D6  2ADE               	goto	l1387
  2690  02D7  3000               	movlw	0
  2691  02D8  00AE               	movwf	?___ftdiv
  2692  02D9  3000               	movlw	0
  2693  02DA  00AF               	movwf	?___ftdiv+1
  2694  02DB  3000               	movlw	0
  2695  02DC  00B0               	movwf	?___ftdiv+2
  2696  02DD  0008               	return
  2697  02DE                     l1387:	
  2698  02DE  082E               	movf	___ftdiv@f2,w
  2699  02DF  00B4               	movwf	??___ftdiv
  2700  02E0  082F               	movf	___ftdiv@f2+1,w
  2701  02E1  00B5               	movwf	??___ftdiv+1
  2702  02E2  0830               	movf	___ftdiv@f2+2,w
  2703  02E3  00B6               	movwf	??___ftdiv+2
  2704  02E4  1003               	clrc
  2705  02E5  0D35               	rlf	??___ftdiv+1,w
  2706  02E6  0D36               	rlf	??___ftdiv+2,w
  2707  02E7  00B7               	movwf	??___ftdiv+3
  2708  02E8  0837               	movf	??___ftdiv+3,w
  2709  02E9  00BD               	movwf	___ftdiv@sign
  2710  02EA  083D               	movf	___ftdiv@sign,w
  2711  02EB  1D03               	btfss	3,2
  2712  02EC  2AF4               	goto	l1393
  2713  02ED  3000               	movlw	0
  2714  02EE  00AE               	movwf	?___ftdiv
  2715  02EF  3000               	movlw	0
  2716  02F0  00AF               	movwf	?___ftdiv+1
  2717  02F1  3000               	movlw	0
  2718  02F2  00B0               	movwf	?___ftdiv+2
  2719  02F3  0008               	return
  2720  02F4                     l1393:	
  2721  02F4  3000               	movlw	0
  2722  02F5  00B9               	movwf	___ftdiv@f3
  2723  02F6  3000               	movlw	0
  2724  02F7  00BA               	movwf	___ftdiv@f3+1
  2725  02F8  3000               	movlw	0
  2726  02F9  00BB               	movwf	___ftdiv@f3+2
  2727  02FA  3089               	movlw	137
  2728  02FB  073D               	addwf	___ftdiv@sign,w
  2729  02FC  00B4               	movwf	??___ftdiv
  2730  02FD  0834               	movf	??___ftdiv,w
  2731  02FE  02BC               	subwf	___ftdiv@exp,f
  2732  02FF  0831               	movf	___ftdiv@f1,w
  2733  0300  00B4               	movwf	??___ftdiv
  2734  0301  0832               	movf	___ftdiv@f1+1,w
  2735  0302  00B5               	movwf	??___ftdiv+1
  2736  0303  0833               	movf	___ftdiv@f1+2,w
  2737  0304  00B6               	movwf	??___ftdiv+2
  2738  0305  3010               	movlw	16
  2739  0306                     u1345:	
  2740  0306  36B6               	lsrf	??___ftdiv+2,f
  2741  0307  0CB5               	rrf	??___ftdiv+1,f
  2742  0308  0CB4               	rrf	??___ftdiv,f
  2743  0309  0B89               	decfsz	9,f
  2744  030A  2B06               	goto	u1345
  2745  030B  0834               	movf	??___ftdiv,w
  2746  030C  00B7               	movwf	??___ftdiv+3
  2747  030D  0837               	movf	??___ftdiv+3,w
  2748  030E  00BD               	movwf	___ftdiv@sign
  2749  030F  082E               	movf	___ftdiv@f2,w
  2750  0310  00B4               	movwf	??___ftdiv
  2751  0311  082F               	movf	___ftdiv@f2+1,w
  2752  0312  00B5               	movwf	??___ftdiv+1
  2753  0313  0830               	movf	___ftdiv@f2+2,w
  2754  0314  00B6               	movwf	??___ftdiv+2
  2755  0315  3010               	movlw	16
  2756  0316                     u1355:	
  2757  0316  36B6               	lsrf	??___ftdiv+2,f
  2758  0317  0CB5               	rrf	??___ftdiv+1,f
  2759  0318  0CB4               	rrf	??___ftdiv,f
  2760  0319  0B89               	decfsz	9,f
  2761  031A  2B16               	goto	u1355
  2762  031B  0834               	movf	??___ftdiv,w
  2763  031C  00B7               	movwf	??___ftdiv+3
  2764  031D  0837               	movf	??___ftdiv+3,w
  2765  031E  06BD               	xorwf	___ftdiv@sign,f
  2766  031F  3080               	movlw	128
  2767  0320  00B4               	movwf	??___ftdiv
  2768  0321  0834               	movf	??___ftdiv,w
  2769  0322  05BD               	andwf	___ftdiv@sign,f
  2770  0323  17B2               	bsf	___ftdiv@f1+1,7
  2771  0324  30FF               	movlw	255
  2772  0325  05B1               	andwf	___ftdiv@f1,f
  2773  0326  30FF               	movlw	255
  2774  0327  05B2               	andwf	___ftdiv@f1+1,f
  2775  0328  3000               	movlw	0
  2776  0329  05B3               	andwf	___ftdiv@f1+2,f
  2777  032A  17AF               	bsf	___ftdiv@f2+1,7
  2778  032B  30FF               	movlw	255
  2779  032C  05AE               	andwf	___ftdiv@f2,f
  2780  032D  30FF               	movlw	255
  2781  032E  05AF               	andwf	___ftdiv@f2+1,f
  2782  032F  3000               	movlw	0
  2783  0330  05B0               	andwf	___ftdiv@f2+2,f
  2784  0331  3018               	movlw	24
  2785  0332  00B4               	movwf	??___ftdiv
  2786  0333  0834               	movf	??___ftdiv,w
  2787  0334  00B8               	movwf	___ftdiv@cntr
  2788  0335                     l1407:	
  2789  0335  3001               	movlw	1
  2790  0336                     u1365:	
  2791  0336  35B9               	lslf	___ftdiv@f3,f
  2792  0337  0DBA               	rlf	___ftdiv@f3+1,f
  2793  0338  0DBB               	rlf	___ftdiv@f3+2,f
  2794  0339  0B89               	decfsz	9,f
  2795  033A  2B36               	goto	u1365
  2796  033B  0830               	movf	___ftdiv@f2+2,w
  2797  033C  0233               	subwf	___ftdiv@f1+2,w
  2798  033D  1D03               	skipz
  2799  033E  2B45               	goto	u1375
  2800  033F  082F               	movf	___ftdiv@f2+1,w
  2801  0340  0232               	subwf	___ftdiv@f1+1,w
  2802  0341  1D03               	skipz
  2803  0342  2B45               	goto	u1375
  2804  0343  082E               	movf	___ftdiv@f2,w
  2805  0344  0231               	subwf	___ftdiv@f1,w
  2806  0345                     u1375:	
  2807  0345  1C03               	skipc
  2808  0346  2B4E               	goto	l1415
  2809  0347  082E               	movf	___ftdiv@f2,w
  2810  0348  02B1               	subwf	___ftdiv@f1,f
  2811  0349  082F               	movf	___ftdiv@f2+1,w
  2812  034A  3BB2               	subwfb	___ftdiv@f1+1,f
  2813  034B  0830               	movf	___ftdiv@f2+2,w
  2814  034C  3BB3               	subwfb	___ftdiv@f1+2,f
  2815  034D  1439               	bsf	___ftdiv@f3,0
  2816  034E                     l1415:	
  2817  034E  3001               	movlw	1
  2818  034F                     u1385:	
  2819  034F  35B1               	lslf	___ftdiv@f1,f
  2820  0350  0DB2               	rlf	___ftdiv@f1+1,f
  2821  0351  0DB3               	rlf	___ftdiv@f1+2,f
  2822  0352  0B89               	decfsz	9,f
  2823  0353  2B4F               	goto	u1385
  2824  0354  3001               	movlw	1
  2825  0355  02B8               	subwf	___ftdiv@cntr,f
  2826  0356  1D03               	btfss	3,2
  2827  0357  2B35               	goto	l1407
  2828  0358  0839               	movf	___ftdiv@f3,w
  2829  0359  00A0               	movwf	___ftpack@arg
  2830  035A  083A               	movf	___ftdiv@f3+1,w
  2831  035B  00A1               	movwf	___ftpack@arg+1
  2832  035C  083B               	movf	___ftdiv@f3+2,w
  2833  035D  00A2               	movwf	___ftpack@arg+2
  2834  035E  083C               	movf	___ftdiv@exp,w
  2835  035F  00B4               	movwf	??___ftdiv
  2836  0360  0834               	movf	??___ftdiv,w
  2837  0361  00A3               	movwf	___ftpack@exp
  2838  0362  083D               	movf	___ftdiv@sign,w
  2839  0363  00B5               	movwf	??___ftdiv+1
  2840  0364  0835               	movf	??___ftdiv+1,w
  2841  0365  00A4               	movwf	___ftpack@sign
  2842  0366  3184  2482         	fcall	___ftpack
  2843  0368  0020               	movlb	0	; select bank0
  2844  0369  0820               	movf	?___ftpack,w
  2845  036A  00AE               	movwf	?___ftdiv
  2846  036B  0821               	movf	?___ftpack+1,w
  2847  036C  00AF               	movwf	?___ftdiv+1
  2848  036D  0822               	movf	?___ftpack+2,w
  2849  036E  00B0               	movwf	?___ftdiv+2
  2850  036F  0008               	return
  2851  0370                     __end_of___ftdiv:	
  2852                           
  2853                           	psect	text10
  2854  06FA                     __ptext10:	
  2855 ;; *************** function ___awtoft *****************
  2856 ;; Defined at:
  2857 ;;		line 32 in file "/opt/microchip/xc8/v1.45/sources/common/awtoft.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;  c               2    8[BANK0 ] int 
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;  sign            1   13[BANK0 ] unsigned char 
  2862 ;; Return value:  Size  Location     Type
  2863 ;;                  3    8[BANK0 ] float 
  2864 ;; Registers used:
  2865 ;;		wreg, status,2, status,0, pclath, cstack
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2871 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2872 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2873 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2874 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2875 ;;Total ram usage:        6 bytes
  2876 ;; Hardware stack levels used:    1
  2877 ;; Hardware stack levels required when called:    3
  2878 ;; This function calls:
  2879 ;;		___ftpack
  2880 ;; This function is called by:
  2881 ;;		_echo
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           
  2886                           ;psect for function ___awtoft
  2887  06FA                     ___awtoft:	
  2888                           
  2889                           ;incstack = 0
  2890                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  2891  06FA  0020               	movlb	0	; select bank0
  2892  06FB  01AD               	clrf	___awtoft@sign
  2893  06FC  1FA9               	btfss	___awtoft@c+1,7
  2894  06FD  2F05               	goto	l1377
  2895  06FE  09A8               	comf	___awtoft@c,f
  2896  06FF  09A9               	comf	___awtoft@c+1,f
  2897  0700  0AA8               	incf	___awtoft@c,f
  2898  0701  1903               	skipnz
  2899  0702  0AA9               	incf	___awtoft@c+1,f
  2900  0703  01AD               	clrf	___awtoft@sign
  2901  0704  0AAD               	incf	___awtoft@sign,f
  2902  0705                     l1377:	
  2903  0705  0828               	movf	___awtoft@c,w
  2904  0706  00A0               	movwf	___ftpack@arg
  2905  0707  0829               	movf	___awtoft@c+1,w
  2906  0708  00A1               	movwf	___ftpack@arg+1
  2907  0709  01A2               	clrf	___ftpack@arg+2
  2908  070A  308E               	movlw	142
  2909  070B  00AB               	movwf	??___awtoft
  2910  070C  082B               	movf	??___awtoft,w
  2911  070D  00A3               	movwf	___ftpack@exp
  2912  070E  082D               	movf	___awtoft@sign,w
  2913  070F  00AC               	movwf	??___awtoft+1
  2914  0710  082C               	movf	??___awtoft+1,w
  2915  0711  00A4               	movwf	___ftpack@sign
  2916  0712  3184  2482         	fcall	___ftpack
  2917  0714  0020               	movlb	0	; select bank0
  2918  0715  0820               	movf	?___ftpack,w
  2919  0716  00A8               	movwf	?___awtoft
  2920  0717  0821               	movf	?___ftpack+1,w
  2921  0718  00A9               	movwf	?___awtoft+1
  2922  0719  0822               	movf	?___ftpack+2,w
  2923  071A  00AA               	movwf	?___awtoft+2
  2924  071B  0008               	return
  2925  071C                     __end_of___awtoft:	
  2926                           
  2927                           	psect	text11
  2928  0482                     __ptext11:	
  2929 ;; *************** function ___ftpack *****************
  2930 ;; Defined at:
  2931 ;;		line 62 in file "/opt/microchip/xc8/v1.45/sources/common/float.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;  arg             3    0[BANK0 ] unsigned um
  2934 ;;  exp             1    3[BANK0 ] unsigned char 
  2935 ;;  sign            1    4[BANK0 ] unsigned char 
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;		None
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  3    0[BANK0 ] float 
  2940 ;; Registers used:
  2941 ;;		wreg, status,2, status,0
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2947 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2949 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2950 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2951 ;;Total ram usage:        8 bytes
  2952 ;; Hardware stack levels used:    1
  2953 ;; Hardware stack levels required when called:    2
  2954 ;; This function calls:
  2955 ;;		Nothing
  2956 ;; This function is called by:
  2957 ;;		___awtoft
  2958 ;;		___ftdiv
  2959 ;;		___ftmul
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           
  2964                           ;psect for function ___ftpack
  2965  0482                     ___ftpack:	
  2966                           
  2967                           ;incstack = 0
  2968                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2969  0482  0020               	movlb	0	; select bank0
  2970  0483  0823               	movf	___ftpack@exp,w
  2971  0484  1903               	btfsc	3,2
  2972  0485  2C8B               	goto	l1257
  2973  0486  0822               	movf	___ftpack@arg+2,w
  2974  0487  0421               	iorwf	___ftpack@arg+1,w
  2975  0488  0420               	iorwf	___ftpack@arg,w
  2976  0489  1D03               	skipz
  2977  048A  2C9C               	goto	l1263
  2978  048B                     l1257:	
  2979  048B  3000               	movlw	0
  2980  048C  00A0               	movwf	?___ftpack
  2981  048D  3000               	movlw	0
  2982  048E  00A1               	movwf	?___ftpack+1
  2983  048F  3000               	movlw	0
  2984  0490  00A2               	movwf	?___ftpack+2
  2985  0491  0008               	return
  2986  0492                     l1261:	
  2987  0492  3001               	movlw	1
  2988  0493  00A5               	movwf	??___ftpack
  2989  0494  0825               	movf	??___ftpack,w
  2990  0495  07A3               	addwf	___ftpack@exp,f
  2991  0496  3001               	movlw	1
  2992  0497                     u1075:	
  2993  0497  36A2               	lsrf	___ftpack@arg+2,f
  2994  0498  0CA1               	rrf	___ftpack@arg+1,f
  2995  0499  0CA0               	rrf	___ftpack@arg,f
  2996  049A  0B89               	decfsz	9,f
  2997  049B  2C97               	goto	u1075
  2998  049C                     l1263:	
  2999  049C  30FE               	movlw	254
  3000  049D  0522               	andwf	___ftpack@arg+2,w
  3001  049E  1903               	btfsc	3,2
  3002  049F  2CB5               	goto	l416
  3003  04A0  2C92               	goto	l1261
  3004  04A1                     l1265:	
  3005  04A1  3001               	movlw	1
  3006  04A2  00A5               	movwf	??___ftpack
  3007  04A3  0825               	movf	??___ftpack,w
  3008  04A4  07A3               	addwf	___ftpack@exp,f
  3009  04A5  3001               	movlw	1
  3010  04A6  07A0               	addwf	___ftpack@arg,f
  3011  04A7  3000               	movlw	0
  3012  04A8  1803               	skipnc
  3013  04A9  3001               	movlw	1
  3014  04AA  07A1               	addwf	___ftpack@arg+1,f
  3015  04AB  3000               	movlw	0
  3016  04AC  1803               	skipnc
  3017  04AD  3001               	movlw	1
  3018  04AE  07A2               	addwf	___ftpack@arg+2,f
  3019  04AF  3001               	movlw	1
  3020  04B0                     u1095:	
  3021  04B0  36A2               	lsrf	___ftpack@arg+2,f
  3022  04B1  0CA1               	rrf	___ftpack@arg+1,f
  3023  04B2  0CA0               	rrf	___ftpack@arg,f
  3024  04B3  0B89               	decfsz	9,f
  3025  04B4  2CB0               	goto	u1095
  3026  04B5                     l416:	
  3027  04B5  30FF               	movlw	255
  3028  04B6  0522               	andwf	___ftpack@arg+2,w
  3029  04B7  1903               	btfsc	3,2
  3030  04B8  2CC2               	goto	l1273
  3031  04B9  2CA1               	goto	l1265
  3032  04BA                     l1271:	
  3033  04BA  3001               	movlw	1
  3034  04BB  02A3               	subwf	___ftpack@exp,f
  3035  04BC  3001               	movlw	1
  3036  04BD                     u1115:	
  3037  04BD  35A0               	lslf	___ftpack@arg,f
  3038  04BE  0DA1               	rlf	___ftpack@arg+1,f
  3039  04BF  0DA2               	rlf	___ftpack@arg+2,f
  3040  04C0  0B89               	decfsz	9,f
  3041  04C1  2CBD               	goto	u1115
  3042  04C2                     l1273:	
  3043  04C2  1BA1               	btfsc	___ftpack@arg+1,7
  3044  04C3  2CC8               	goto	l423
  3045  04C4  3002               	movlw	2
  3046  04C5  0223               	subwf	___ftpack@exp,w
  3047  04C6  1803               	skipnc
  3048  04C7  2CBA               	goto	l1271
  3049  04C8                     l423:	
  3050  04C8  1823               	btfsc	___ftpack@exp,0
  3051  04C9  2CD0               	goto	l424
  3052  04CA  30FF               	movlw	255
  3053  04CB  05A0               	andwf	___ftpack@arg,f
  3054  04CC  307F               	movlw	127
  3055  04CD  05A1               	andwf	___ftpack@arg+1,f
  3056  04CE  30FF               	movlw	255
  3057  04CF  05A2               	andwf	___ftpack@arg+2,f
  3058  04D0                     l424:	
  3059  04D0  1003               	clrc
  3060  04D1  0CA3               	rrf	___ftpack@exp,f
  3061  04D2  0823               	movf	___ftpack@exp,w
  3062  04D3  00A5               	movwf	??___ftpack
  3063  04D4  01A6               	clrf	??___ftpack+1
  3064  04D5  01A7               	clrf	??___ftpack+2
  3065  04D6  3010               	movlw	16
  3066  04D7                     u1155:	
  3067  04D7  35A5               	lslf	??___ftpack,f
  3068  04D8  0DA6               	rlf	??___ftpack+1,f
  3069  04D9  0DA7               	rlf	??___ftpack+2,f
  3070  04DA  0B89               	decfsz	9,f
  3071  04DB  2CD7               	goto	u1155
  3072  04DC  0825               	movf	??___ftpack,w
  3073  04DD  04A0               	iorwf	___ftpack@arg,f
  3074  04DE  0826               	movf	??___ftpack+1,w
  3075  04DF  04A1               	iorwf	___ftpack@arg+1,f
  3076  04E0  0827               	movf	??___ftpack+2,w
  3077  04E1  04A2               	iorwf	___ftpack@arg+2,f
  3078  04E2  0824               	movf	___ftpack@sign,w
  3079  04E3  1903               	btfsc	3,2
  3080  04E4  0008               	return
  3081  04E5  17A2               	bsf	___ftpack@arg+2,7
  3082  04E6  0008               	return
  3083  04E7                     __end_of___ftpack:	
  3084                           
  3085                           	psect	text12
  3086  071C                     __ptext12:	
  3087 ;; *************** function _Lcd_Write_String *****************
  3088 ;; Defined at:
  3089 ;;		line 117 in file "lcd.h"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;  a               2    5[BANK0 ] PTR unsigned char 
  3092 ;;		 -> STR_10(4), STR_9(6), STR_8(11), STR_7(4), 
  3093 ;;		 -> STR_6(6), STR_5(15), STR_4(4), STR_3(6), 
  3094 ;;		 -> STR_2(11), main@bufB(8), main@bufA(8), STR_1(16), 
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;  i               2    8[BANK0 ] int 
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  1    wreg      void 
  3099 ;; Registers used:
  3100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3106 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3107 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3108 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3109 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3110 ;;Total ram usage:        5 bytes
  3111 ;; Hardware stack levels used:    1
  3112 ;; Hardware stack levels required when called:    4
  3113 ;; This function calls:
  3114 ;;		_Lcd_Write_Char
  3115 ;; This function is called by:
  3116 ;;		_main
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119                           
  3120                           
  3121                           ;psect for function _Lcd_Write_String
  3122  071C                     _Lcd_Write_String:	
  3123                           
  3124                           ;lcd.h: 118: int i;
  3125                           ;lcd.h: 119: for(i=0;a[i]!='\0';i++)
  3126                           
  3127                           ;incstack = 0
  3128                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3129  071C  0020               	movlb	0	; select bank0
  3130  071D  01A8               	clrf	Lcd_Write_String@i
  3131  071E  01A9               	clrf	Lcd_Write_String@i+1
  3132  071F                     l1583:	
  3133  071F  0825               	movf	Lcd_Write_String@a,w
  3134  0720  0728               	addwf	Lcd_Write_String@i,w
  3135  0721  0084               	movwf	4
  3136  0722  0826               	movf	Lcd_Write_String@a+1,w
  3137  0723  3D29               	addwfc	Lcd_Write_String@i+1,w
  3138  0724  0085               	movwf	5
  3139  0725  0012               	moviw fsr0++
  3140  0726  1903               	btfsc	3,2
  3141  0727  0008               	return
  3142                           
  3143                           ;lcd.h: 120: Lcd_Write_Char(a[i]);
  3144  0728  0825               	movf	Lcd_Write_String@a,w
  3145  0729  0728               	addwf	Lcd_Write_String@i,w
  3146  072A  0084               	movwf	4
  3147  072B  0826               	movf	Lcd_Write_String@a+1,w
  3148  072C  3D29               	addwfc	Lcd_Write_String@i+1,w
  3149  072D  0085               	movwf	5
  3150  072E  0800               	movf	0,w	;code access
  3151  072F  3186  267B  3187   	fcall	_Lcd_Write_Char
  3152  0732  3001               	movlw	1
  3153  0733  0020               	movlb	0	; select bank0
  3154  0734  07A8               	addwf	Lcd_Write_String@i,f
  3155  0735  3000               	movlw	0
  3156  0736  3DA9               	addwfc	Lcd_Write_String@i+1,f
  3157  0737  2F1F               	goto	l1583
  3158  0738                     __end_of_Lcd_Write_String:	
  3159                           
  3160                           	psect	text13
  3161  067B                     __ptext13:	
  3162 ;; *************** function _Lcd_Write_Char *****************
  3163 ;; Defined at:
  3164 ;;		line 100 in file "lcd.h"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;  a               1    wreg     unsigned char 
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;  a               1    4[BANK0 ] unsigned char 
  3169 ;;  y               1    3[BANK0 ] unsigned char 
  3170 ;;  temp            1    2[BANK0 ] unsigned char 
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  1    wreg      void 
  3173 ;; Registers used:
  3174 ;;		wreg, status,2, status,0, pclath, cstack
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3181 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3182 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3183 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3184 ;;Total ram usage:        4 bytes
  3185 ;; Hardware stack levels used:    1
  3186 ;; Hardware stack levels required when called:    3
  3187 ;; This function calls:
  3188 ;;		_Lcd_Port
  3189 ;; This function is called by:
  3190 ;;		_Lcd_Write_String
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           
  3195                           ;psect for function _Lcd_Write_Char
  3196  067B                     _Lcd_Write_Char:	
  3197                           
  3198                           ;incstack = 0
  3199                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3200                           ;Lcd_Write_Char@a stored from wreg
  3201  067B  0020               	movlb	0	; select bank0
  3202  067C  00A4               	movwf	Lcd_Write_Char@a
  3203                           
  3204                           ;lcd.h: 101: RC6 = 0;
  3205  067D  130E               	bcf	14,6	;volatile
  3206                           
  3207                           ;lcd.h: 102: char temp,y;
  3208                           ;lcd.h: 103: temp = a&0x0F;
  3209  067E  0824               	movf	Lcd_Write_Char@a,w
  3210  067F  390F               	andlw	15
  3211  0680  00A1               	movwf	??_Lcd_Write_Char
  3212  0681  0821               	movf	??_Lcd_Write_Char,w
  3213  0682  00A2               	movwf	Lcd_Write_Char@temp
  3214                           
  3215                           ;lcd.h: 104: y = a&0xF0;
  3216  0683  0824               	movf	Lcd_Write_Char@a,w
  3217  0684  39F0               	andlw	240
  3218  0685  00A1               	movwf	??_Lcd_Write_Char
  3219  0686  0821               	movf	??_Lcd_Write_Char,w
  3220  0687  00A3               	movwf	Lcd_Write_Char@y
  3221                           
  3222                           ;lcd.h: 105: RC0 = 1;
  3223  0688  140E               	bsf	14,0	;volatile
  3224                           
  3225                           ;lcd.h: 106: Lcd_Port(y>>4);
  3226  0689  0823               	movf	Lcd_Write_Char@y,w
  3227  068A  00A1               	movwf	??_Lcd_Write_Char
  3228  068B  3004               	movlw	4
  3229  068C                     u1305:	
  3230  068C  36A1               	lsrf	??_Lcd_Write_Char,f
  3231  068D  0B89               	decfsz	9,f
  3232  068E  2E8C               	goto	u1305
  3233  068F  0821               	movf	??_Lcd_Write_Char,w
  3234  0690  3187  274F  3186   	fcall	_Lcd_Port
  3235                           
  3236                           ;lcd.h: 107: RC3 = 1;
  3237  0693  0020               	movlb	0	; select bank0
  3238  0694  158E               	bsf	14,3	;volatile
  3239                           
  3240                           ;lcd.h: 108: _delay((unsigned long)((40)*(8000000/4000000.0)));
  3241  0695  301A               	movlw	26
  3242  0696                     u2057:	
  3243  0696  0B89               	decfsz	9,f
  3244  0697  2E96               	goto	u2057
  3245  0698  3200               	nop2
  3246                           
  3247                           ;lcd.h: 109: RC3 = 0;
  3248  0699  0020               	movlb	0	; select bank0
  3249  069A  118E               	bcf	14,3	;volatile
  3250                           
  3251                           ;lcd.h: 110: Lcd_Port(temp);
  3252  069B  0822               	movf	Lcd_Write_Char@temp,w
  3253  069C  3187  274F  3186   	fcall	_Lcd_Port
  3254                           
  3255                           ;lcd.h: 111: RC3 = 1;
  3256  069F  0020               	movlb	0	; select bank0
  3257  06A0  158E               	bsf	14,3	;volatile
  3258                           
  3259                           ;lcd.h: 112: _delay((unsigned long)((40)*(8000000/4000000.0)));
  3260  06A1  301A               	movlw	26
  3261  06A2                     u2067:	
  3262  06A2  0B89               	decfsz	9,f
  3263  06A3  2EA2               	goto	u2067
  3264  06A4  3200               	nop2
  3265                           
  3266                           ;lcd.h: 113: RC3 = 0;
  3267  06A5  0020               	movlb	0	; select bank0
  3268  06A6  118E               	bcf	14,3	;volatile
  3269                           
  3270                           ;lcd.h: 114: RC6 = 1;
  3271  06A7  170E               	bsf	14,6	;volatile
  3272  06A8  0008               	return
  3273  06A9                     __end_of_Lcd_Write_Char:	
  3274                           
  3275                           	psect	text14
  3276  05D4                     __ptext14:	
  3277 ;; *************** function _Lcd_Set_Cursor *****************
  3278 ;; Defined at:
  3279 ;;		line 62 in file "lcd.h"
  3280 ;; Parameters:    Size  Location     Type
  3281 ;;  a               1    wreg     unsigned char 
  3282 ;;  b               1    3[BANK0 ] unsigned char 
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;  a               1    6[BANK0 ] unsigned char 
  3285 ;;  temp            1    9[BANK0 ] unsigned char 
  3286 ;;  y               1    8[BANK0 ] unsigned char 
  3287 ;;  z               1    7[BANK0 ] unsigned char 
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  1    wreg      void 
  3290 ;; Registers used:
  3291 ;;		wreg, status,2, status,0, pclath, cstack
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3297 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3298 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3299 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3300 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3301 ;;Total ram usage:        7 bytes
  3302 ;; Hardware stack levels used:    1
  3303 ;; Hardware stack levels required when called:    4
  3304 ;; This function calls:
  3305 ;;		_Lcd_Cmd
  3306 ;; This function is called by:
  3307 ;;		_main
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311                           
  3312                           ;psect for function _Lcd_Set_Cursor
  3313  05D4                     _Lcd_Set_Cursor:	
  3314                           
  3315                           ;incstack = 0
  3316                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3317                           ;Lcd_Set_Cursor@a stored from wreg
  3318  05D4  0020               	movlb	0	; select bank0
  3319  05D5  00A6               	movwf	Lcd_Set_Cursor@a
  3320                           
  3321                           ;lcd.h: 63: char temp,z,y;
  3322                           ;lcd.h: 64: if(a == 1)
  3323  05D6  0326               	decf	Lcd_Set_Cursor@a,w
  3324  05D7  1D03               	btfss	3,2
  3325  05D8  2DF6               	goto	l1557
  3326                           
  3327                           ;lcd.h: 65: {
  3328                           ;lcd.h: 66: temp = 0x80 + b - 1;
  3329  05D9  0823               	movf	Lcd_Set_Cursor@b,w
  3330  05DA  3E7F               	addlw	127
  3331  05DB  00A4               	movwf	??_Lcd_Set_Cursor
  3332  05DC  0824               	movf	??_Lcd_Set_Cursor,w
  3333  05DD  00A9               	movwf	Lcd_Set_Cursor@temp
  3334                           
  3335                           ;lcd.h: 67: z = temp>>4;
  3336  05DE  0829               	movf	Lcd_Set_Cursor@temp,w
  3337  05DF  00A4               	movwf	??_Lcd_Set_Cursor
  3338  05E0  3004               	movlw	4
  3339  05E1                     u1665:	
  3340  05E1  36A4               	lsrf	??_Lcd_Set_Cursor,f
  3341  05E2  0B89               	decfsz	9,f
  3342  05E3  2DE1               	goto	u1665
  3343  05E4  0824               	movf	??_Lcd_Set_Cursor,w
  3344  05E5  00A5               	movwf	??_Lcd_Set_Cursor+1
  3345  05E6  0825               	movf	??_Lcd_Set_Cursor+1,w
  3346  05E7  00A7               	movwf	Lcd_Set_Cursor@z
  3347                           
  3348                           ;lcd.h: 68: y = temp & 0x0F;
  3349  05E8  0829               	movf	Lcd_Set_Cursor@temp,w
  3350  05E9  390F               	andlw	15
  3351  05EA  00A4               	movwf	??_Lcd_Set_Cursor
  3352  05EB  0824               	movf	??_Lcd_Set_Cursor,w
  3353  05EC  00A8               	movwf	Lcd_Set_Cursor@y
  3354                           
  3355                           ;lcd.h: 69: Lcd_Cmd(z);
  3356  05ED  0827               	movf	Lcd_Set_Cursor@z,w
  3357  05EE  3187  2738  3185   	fcall	_Lcd_Cmd
  3358                           
  3359                           ;lcd.h: 70: Lcd_Cmd(y);
  3360  05F1  0020               	movlb	0	; select bank0
  3361  05F2  0828               	movf	Lcd_Set_Cursor@y,w
  3362  05F3  3187  2738         	fcall	_Lcd_Cmd
  3363                           
  3364                           ;lcd.h: 71: }
  3365  05F5  0008               	return
  3366  05F6                     l1557:	
  3367                           
  3368                           ;lcd.h: 72: else if(a == 2)
  3369  05F6  3002               	movlw	2
  3370  05F7  0020               	movlb	0	; select bank0
  3371  05F8  0626               	xorwf	Lcd_Set_Cursor@a,w
  3372  05F9  1D03               	btfss	3,2
  3373  05FA  0008               	return
  3374                           
  3375                           ;lcd.h: 73: {
  3376                           ;lcd.h: 74: temp = 0xC0 + b - 1;
  3377  05FB  0823               	movf	Lcd_Set_Cursor@b,w
  3378  05FC  3EBF               	addlw	191
  3379  05FD  00A4               	movwf	??_Lcd_Set_Cursor
  3380  05FE  0824               	movf	??_Lcd_Set_Cursor,w
  3381  05FF  00A9               	movwf	Lcd_Set_Cursor@temp
  3382                           
  3383                           ;lcd.h: 75: z = temp>>4;
  3384  0600  0829               	movf	Lcd_Set_Cursor@temp,w
  3385  0601  00A4               	movwf	??_Lcd_Set_Cursor
  3386  0602  3004               	movlw	4
  3387  0603                     u1685:	
  3388  0603  36A4               	lsrf	??_Lcd_Set_Cursor,f
  3389  0604  0B89               	decfsz	9,f
  3390  0605  2E03               	goto	u1685
  3391  0606  0824               	movf	??_Lcd_Set_Cursor,w
  3392  0607  00A5               	movwf	??_Lcd_Set_Cursor+1
  3393  0608  0825               	movf	??_Lcd_Set_Cursor+1,w
  3394  0609  00A7               	movwf	Lcd_Set_Cursor@z
  3395                           
  3396                           ;lcd.h: 76: y = temp & 0x0F;
  3397  060A  0829               	movf	Lcd_Set_Cursor@temp,w
  3398  060B  390F               	andlw	15
  3399  060C  00A4               	movwf	??_Lcd_Set_Cursor
  3400  060D  0824               	movf	??_Lcd_Set_Cursor,w
  3401  060E  00A8               	movwf	Lcd_Set_Cursor@y
  3402                           
  3403                           ;lcd.h: 77: Lcd_Cmd(z);
  3404  060F  0827               	movf	Lcd_Set_Cursor@z,w
  3405  0610  3187  2738  3185   	fcall	_Lcd_Cmd
  3406                           
  3407                           ;lcd.h: 78: Lcd_Cmd(y);
  3408  0613  0020               	movlb	0	; select bank0
  3409  0614  0828               	movf	Lcd_Set_Cursor@y,w
  3410  0615  3187  2738         	fcall	_Lcd_Cmd
  3411  0617  0008               	return
  3412  0618                     __end_of_Lcd_Set_Cursor:	
  3413                           
  3414                           	psect	text15
  3415  0549                     __ptext15:	
  3416 ;; *************** function _Lcd_Init *****************
  3417 ;; Defined at:
  3418 ;;		line 82 in file "lcd.h"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;		None
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;		None
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  1    wreg      void 
  3425 ;; Registers used:
  3426 ;;		wreg, status,2, status,0, pclath, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3434 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3435 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3436 ;;Total ram usage:        1 bytes
  3437 ;; Hardware stack levels used:    1
  3438 ;; Hardware stack levels required when called:    4
  3439 ;; This function calls:
  3440 ;;		_Lcd_Cmd
  3441 ;;		_Lcd_Port
  3442 ;; This function is called by:
  3443 ;;		_main
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447                           
  3448                           ;psect for function _Lcd_Init
  3449  0549                     _Lcd_Init:	
  3450                           
  3451                           ;lcd.h: 83: Lcd_Port(0x00);
  3452                           
  3453                           ;incstack = 0
  3454                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3455  0549  3000               	movlw	0
  3456  054A  3187  274F  3185   	fcall	_Lcd_Port
  3457                           
  3458                           ;lcd.h: 84: _delay((unsigned long)((20)*(8000000/4000.0)));
  3459  054D  3034               	movlw	52
  3460  054E  0020               	movlb	0	; select bank0
  3461  054F  00A3               	movwf	??_Lcd_Init
  3462  0550  30F1               	movlw	241
  3463  0551                     u2077:	
  3464  0551  0B89               	decfsz	9,f
  3465  0552  2D51               	goto	u2077
  3466  0553  0BA3               	decfsz	??_Lcd_Init,f
  3467  0554  2D51               	goto	u2077
  3468  0555  3200               	nop2
  3469                           
  3470                           ;lcd.h: 85: Lcd_Cmd(0x03);
  3471  0556  3003               	movlw	3
  3472  0557  3187  2738  3185   	fcall	_Lcd_Cmd
  3473                           
  3474                           ;lcd.h: 86: _delay((unsigned long)((5)*(8000000/4000.0)));
  3475  055A  300D               	movlw	13
  3476  055B  0020               	movlb	0	; select bank0
  3477  055C  00A3               	movwf	??_Lcd_Init
  3478  055D  30FB               	movlw	251
  3479  055E                     u2087:	
  3480  055E  0B89               	decfsz	9,f
  3481  055F  2D5E               	goto	u2087
  3482  0560  0BA3               	decfsz	??_Lcd_Init,f
  3483  0561  2D5E               	goto	u2087
  3484  0562  3200               	nop2
  3485                           
  3486                           ;lcd.h: 87: Lcd_Cmd(0x03);
  3487  0563  3003               	movlw	3
  3488  0564  3187  2738  3185   	fcall	_Lcd_Cmd
  3489                           
  3490                           ;lcd.h: 88: _delay((unsigned long)((11)*(8000000/4000.0)));
  3491  0567  301D               	movlw	29
  3492  0568  0020               	movlb	0	; select bank0
  3493  0569  00A3               	movwf	??_Lcd_Init
  3494  056A  3091               	movlw	145
  3495  056B                     u2097:	
  3496  056B  0B89               	decfsz	9,f
  3497  056C  2D6B               	goto	u2097
  3498  056D  0BA3               	decfsz	??_Lcd_Init,f
  3499  056E  2D6B               	goto	u2097
  3500                           
  3501                           ;lcd.h: 89: Lcd_Cmd(0x03);
  3502  056F  3003               	movlw	3
  3503  0570  3187  2738  3185   	fcall	_Lcd_Cmd
  3504                           
  3505                           ;lcd.h: 91: Lcd_Cmd(0x02);
  3506  0573  3002               	movlw	2
  3507  0574  3187  2738  3185   	fcall	_Lcd_Cmd
  3508                           
  3509                           ;lcd.h: 92: Lcd_Cmd(0x02);
  3510  0577  3002               	movlw	2
  3511  0578  3187  2738  3185   	fcall	_Lcd_Cmd
  3512                           
  3513                           ;lcd.h: 93: Lcd_Cmd(0x08);
  3514  057B  3008               	movlw	8
  3515  057C  3187  2738  3185   	fcall	_Lcd_Cmd
  3516                           
  3517                           ;lcd.h: 94: Lcd_Cmd(0x00);
  3518  057F  3000               	movlw	0
  3519  0580  3187  2738  3185   	fcall	_Lcd_Cmd
  3520                           
  3521                           ;lcd.h: 95: Lcd_Cmd(0x0C);
  3522  0583  300C               	movlw	12
  3523  0584  3187  2738  3185   	fcall	_Lcd_Cmd
  3524                           
  3525                           ;lcd.h: 96: Lcd_Cmd(0x00);
  3526  0587  3000               	movlw	0
  3527  0588  3187  2738  3185   	fcall	_Lcd_Cmd
  3528                           
  3529                           ;lcd.h: 97: Lcd_Cmd(0x06);
  3530  058B  3006               	movlw	6
  3531  058C  3187  2738         	fcall	_Lcd_Cmd
  3532  058E  0008               	return
  3533  058F                     __end_of_Lcd_Init:	
  3534                           
  3535                           	psect	text16
  3536  079B                     __ptext16:	
  3537 ;; *************** function _Lcd_Clear *****************
  3538 ;; Defined at:
  3539 ;;		line 57 in file "lcd.h"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;		None
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;		None
  3544 ;; Return value:  Size  Location     Type
  3545 ;;                  1    wreg      void 
  3546 ;; Registers used:
  3547 ;;		wreg, status,2, status,0, pclath, cstack
  3548 ;; Tracked objects:
  3549 ;;		On entry : 0/0
  3550 ;;		On exit  : 0/0
  3551 ;;		Unchanged: 0/0
  3552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3557 ;;Total ram usage:        0 bytes
  3558 ;; Hardware stack levels used:    1
  3559 ;; Hardware stack levels required when called:    4
  3560 ;; This function calls:
  3561 ;;		_Lcd_Cmd
  3562 ;; This function is called by:
  3563 ;;		_main
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567                           
  3568                           ;psect for function _Lcd_Clear
  3569  079B                     _Lcd_Clear:	
  3570                           
  3571                           ;lcd.h: 58: Lcd_Cmd(0);
  3572                           
  3573                           ;incstack = 0
  3574                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3575  079B  3000               	movlw	0
  3576  079C  3187  2738  3187   	fcall	_Lcd_Cmd
  3577                           
  3578                           ;lcd.h: 59: Lcd_Cmd(1);
  3579  079F  3001               	movlw	1
  3580  07A0  3187  2738         	fcall	_Lcd_Cmd
  3581  07A2  0008               	return
  3582  07A3                     __end_of_Lcd_Clear:	
  3583                           
  3584                           	psect	text17
  3585  0738                     __ptext17:	
  3586 ;; *************** function _Lcd_Cmd *****************
  3587 ;; Defined at:
  3588 ;;		line 47 in file "lcd.h"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;  a               1    wreg     unsigned char 
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;  a               1    2[BANK0 ] unsigned char 
  3593 ;; Return value:  Size  Location     Type
  3594 ;;                  1    wreg      void 
  3595 ;; Registers used:
  3596 ;;		wreg, status,2, status,0, pclath, cstack
  3597 ;; Tracked objects:
  3598 ;;		On entry : 0/0
  3599 ;;		On exit  : 0/0
  3600 ;;		Unchanged: 0/0
  3601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3603 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3604 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3605 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3606 ;;Total ram usage:        2 bytes
  3607 ;; Hardware stack levels used:    1
  3608 ;; Hardware stack levels required when called:    3
  3609 ;; This function calls:
  3610 ;;		_Lcd_Port
  3611 ;; This function is called by:
  3612 ;;		_Lcd_Clear
  3613 ;;		_Lcd_Set_Cursor
  3614 ;;		_Lcd_Init
  3615 ;;		_Lcd_Shift_Right
  3616 ;;		_Lcd_Shift_Left
  3617 ;; This function uses a non-reentrant model
  3618 ;;
  3619                           
  3620                           
  3621                           ;psect for function _Lcd_Cmd
  3622  0738                     _Lcd_Cmd:	
  3623                           
  3624                           ;incstack = 0
  3625                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3626                           ;Lcd_Cmd@a stored from wreg
  3627  0738  0020               	movlb	0	; select bank0
  3628  0739  00A2               	movwf	Lcd_Cmd@a
  3629                           
  3630                           ;lcd.h: 48: RC6 = 0;
  3631  073A  130E               	bcf	14,6	;volatile
  3632                           
  3633                           ;lcd.h: 49: RC0 = 0;
  3634  073B  100E               	bcf	14,0	;volatile
  3635                           
  3636                           ;lcd.h: 50: Lcd_Port(a);
  3637  073C  0822               	movf	Lcd_Cmd@a,w
  3638  073D  3187  274F  3187   	fcall	_Lcd_Port
  3639                           
  3640                           ;lcd.h: 51: RC3 = 1;
  3641  0740  0020               	movlb	0	; select bank0
  3642  0741  158E               	bsf	14,3	;volatile
  3643                           
  3644                           ;lcd.h: 52: _delay((unsigned long)((4)*(8000000/4000.0)));
  3645  0742  300B               	movlw	11
  3646  0743  0020               	movlb	0	; select bank0
  3647  0744  00A1               	movwf	??_Lcd_Cmd
  3648  0745  3062               	movlw	98
  3649  0746                     u2107:	
  3650  0746  0B89               	decfsz	9,f
  3651  0747  2F46               	goto	u2107
  3652  0748  0BA1               	decfsz	??_Lcd_Cmd,f
  3653  0749  2F46               	goto	u2107
  3654  074A  0000               	nop
  3655                           
  3656                           ;lcd.h: 53: RC3 = 0;
  3657  074B  0020               	movlb	0	; select bank0
  3658  074C  118E               	bcf	14,3	;volatile
  3659                           
  3660                           ;lcd.h: 54: RC6 = 1;
  3661  074D  170E               	bsf	14,6	;volatile
  3662  074E  0008               	return
  3663  074F                     __end_of_Lcd_Cmd:	
  3664                           
  3665                           	psect	text18
  3666  074F                     __ptext18:	
  3667 ;; *************** function _Lcd_Port *****************
  3668 ;; Defined at:
  3669 ;;		line 26 in file "lcd.h"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;  a               1    wreg     unsigned char 
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;  a               1    0[BANK0 ] unsigned char 
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  1    wreg      void 
  3676 ;; Registers used:
  3677 ;;		wreg
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3684 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3686 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3687 ;;Total ram usage:        1 bytes
  3688 ;; Hardware stack levels used:    1
  3689 ;; Hardware stack levels required when called:    2
  3690 ;; This function calls:
  3691 ;;		Nothing
  3692 ;; This function is called by:
  3693 ;;		_Lcd_Cmd
  3694 ;;		_Lcd_Init
  3695 ;;		_Lcd_Write_Char
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           
  3700                           ;psect for function _Lcd_Port
  3701  074F                     _Lcd_Port:	
  3702                           
  3703                           ;incstack = 0
  3704                           ; Regs used in _Lcd_Port: [wreg]
  3705                           ;Lcd_Port@a stored from wreg
  3706  074F  0020               	movlb	0	; select bank0
  3707  0750  00A0               	movwf	Lcd_Port@a
  3708                           
  3709                           ;lcd.h: 27: if(a & 1)
  3710  0751  1C20               	btfss	Lcd_Port@a,0
  3711  0752  2F55               	goto	l65
  3712                           
  3713                           ;lcd.h: 28: RB4 = 1;
  3714  0753  160D               	bsf	13,4	;volatile
  3715  0754  2F56               	goto	l1241
  3716  0755                     l65:	
  3717                           
  3718                           ;lcd.h: 29: else
  3719                           ;lcd.h: 30: RB4 = 0;
  3720  0755  120D               	bcf	13,4	;volatile
  3721  0756                     l1241:	
  3722                           
  3723                           ;lcd.h: 32: if(a & 2)
  3724  0756  1CA0               	btfss	Lcd_Port@a,1
  3725  0757  2F5A               	goto	l67
  3726                           
  3727                           ;lcd.h: 33: RB5 = 1;
  3728  0758  168D               	bsf	13,5	;volatile
  3729  0759  2F5B               	goto	l1245
  3730  075A                     l67:	
  3731                           
  3732                           ;lcd.h: 34: else
  3733                           ;lcd.h: 35: RB5 = 0;
  3734  075A  128D               	bcf	13,5	;volatile
  3735  075B                     l1245:	
  3736                           
  3737                           ;lcd.h: 37: if(a & 4)
  3738  075B  1D20               	btfss	Lcd_Port@a,2
  3739  075C  2F5F               	goto	l69
  3740                           
  3741                           ;lcd.h: 38: RB6 = 1;
  3742  075D  170D               	bsf	13,6	;volatile
  3743  075E  2F60               	goto	l1249
  3744  075F                     l69:	
  3745                           
  3746                           ;lcd.h: 39: else
  3747                           ;lcd.h: 40: RB6 = 0;
  3748  075F  130D               	bcf	13,6	;volatile
  3749  0760                     l1249:	
  3750                           
  3751                           ;lcd.h: 42: if(a & 8)
  3752  0760  1DA0               	btfss	Lcd_Port@a,3
  3753  0761  2F64               	goto	l71
  3754                           
  3755                           ;lcd.h: 43: RB7 = 1;
  3756  0762  178D               	bsf	13,7	;volatile
  3757  0763  0008               	return
  3758  0764                     l71:	
  3759                           
  3760                           ;lcd.h: 44: else
  3761                           ;lcd.h: 45: RB7 = 0;
  3762  0764  138D               	bcf	13,7	;volatile
  3763  0765  0008               	return
  3764  0766                     __end_of_Lcd_Port:	
  3765                           
  3766                           	psect	intentry
  3767  0004                     __pintentry:	
  3768 ;; *************** function _ISR *****************
  3769 ;; Defined at:
  3770 ;;		line 102 in file "FinalProject3.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;		None
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;		None
  3775 ;; Return value:  Size  Location     Type
  3776 ;;                  1    wreg      void 
  3777 ;; Registers used:
  3778 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3786 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3787 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3788 ;;Total ram usage:        1 bytes
  3789 ;; Hardware stack levels used:    1
  3790 ;; Hardware stack levels required when called:    1
  3791 ;; This function calls:
  3792 ;;		___awmod
  3793 ;; This function is called by:
  3794 ;;		Interrupt level 1
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798  0004                     _ISR:	
  3799                           
  3800                           ;incstack = 0
  3801  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3802                           
  3803                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3804  0005  3180               	pagesel	$
  3805  0006  0020               	movlb	0	; select bank0
  3806  0007  087F               	movf	127,w
  3807  0008  00F7               	movwf	??_ISR
  3808                           
  3809                           ;FinalProject3.c: 103: if (INTCON & (1<<2)) {
  3810  0009  1D0B               	btfss	11,2	;volatile
  3811  000A  2830               	goto	i1l122
  3812                           
  3813                           ;FinalProject3.c: 104: INTCON = INTCON & ~(1<<2);
  3814  000B  080B               	movf	11,w	;volatile
  3815  000C  39FB               	andlw	251
  3816  000D  008B               	movwf	11	;volatile
  3817                           
  3818                           ;FinalProject3.c: 105: *pisr_counter+=4;
  3819  000E  087D               	movf	_pisr_counter,w
  3820  000F  0086               	movwf	6
  3821  0010  0187               	clrf	7
  3822  0011  3004               	movlw	4
  3823  0012  0781               	addwf	1,f
  3824  0013  3141               	addfsr 1,1
  3825  0014  1803               	skipnc
  3826  0015  0A81               	incf	1,f
  3827                           
  3828                           ;FinalProject3.c: 106: if((*pisr_counter % 15625) == 0) ++*pdelay_counter;
  3829  0016  3009               	movlw	9
  3830  0017  00F0               	movwf	___awmod@divisor
  3831  0018  303D               	movlw	61
  3832  0019  00F1               	movwf	___awmod@divisor+1
  3833  001A  087D               	movf	_pisr_counter,w
  3834  001B  0086               	movwf	6
  3835  001C  0187               	clrf	7
  3836  001D  3F40               	moviw [0]fsr1
  3837  001E  00F2               	movwf	___awmod@dividend
  3838  001F  3F41               	moviw [1]fsr1
  3839  0020  00F3               	movwf	___awmod@dividend+1
  3840  0021  3185  258F  3180   	fcall	___awmod
  3841  0024  0870               	movf	?___awmod,w
  3842  0025  0471               	iorwf	?___awmod+1,w
  3843  0026  1D03               	btfss	3,2
  3844  0027  2830               	goto	i1l122
  3845  0028  087C               	movf	_pdelay_counter,w
  3846  0029  0086               	movwf	6
  3847  002A  0187               	clrf	7
  3848  002B  3001               	movlw	1
  3849  002C  0781               	addwf	1,f
  3850  002D  3141               	addfsr 1,1
  3851  002E  1803               	skipnc
  3852  002F  0A81               	incf	1,f
  3853  0030                     i1l122:	
  3854                           ;FinalProject3.c: 107: }
  3855                           ;FinalProject3.c: 108: return;
  3856                           
  3857  0030  0877               	movf	??_ISR,w
  3858  0031  0020               	movlb	0	; select bank0
  3859  0032  00FF               	movwf	127
  3860  0033  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3861  0034  0009               	retfie
  3862  0035                     __end_of_ISR:	
  3863                           
  3864                           	psect	text20
  3865  058F                     __ptext20:	
  3866 ;; *************** function ___awmod *****************
  3867 ;; Defined at:
  3868 ;;		line 6 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;  divisor         2    0[COMMON] int 
  3871 ;;  dividend        2    2[COMMON] int 
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;  sign            1    6[COMMON] unsigned char 
  3874 ;;  counter         1    5[COMMON] unsigned char 
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  2    0[COMMON] int 
  3877 ;; Registers used:
  3878 ;;		wreg, status,2, status,0
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3884 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3885 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3886 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3887 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3888 ;;Total ram usage:        7 bytes
  3889 ;; Hardware stack levels used:    1
  3890 ;; This function calls:
  3891 ;;		Nothing
  3892 ;; This function is called by:
  3893 ;;		_ISR
  3894 ;;		_ping
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           
  3899                           ;psect for function ___awmod
  3900  058F                     ___awmod:	
  3901                           
  3902                           ;incstack = 0
  3903                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3904  058F  01F6               	clrf	___awmod@sign
  3905  0590  1FF3               	btfss	___awmod@dividend+1,7
  3906  0591  2D99               	goto	i1l1653
  3907  0592  09F2               	comf	___awmod@dividend,f
  3908  0593  09F3               	comf	___awmod@dividend+1,f
  3909  0594  0AF2               	incf	___awmod@dividend,f
  3910  0595  1903               	skipnz
  3911  0596  0AF3               	incf	___awmod@dividend+1,f
  3912  0597  01F6               	clrf	___awmod@sign
  3913  0598  0AF6               	incf	___awmod@sign,f
  3914  0599                     i1l1653:	
  3915  0599  1FF1               	btfss	___awmod@divisor+1,7
  3916  059A  2DA0               	goto	i1l1657
  3917  059B  09F0               	comf	___awmod@divisor,f
  3918  059C  09F1               	comf	___awmod@divisor+1,f
  3919  059D  0AF0               	incf	___awmod@divisor,f
  3920  059E  1903               	skipnz
  3921  059F  0AF1               	incf	___awmod@divisor+1,f
  3922  05A0                     i1l1657:	
  3923  05A0  0870               	movf	___awmod@divisor,w
  3924  05A1  0471               	iorwf	___awmod@divisor+1,w
  3925  05A2  1903               	btfsc	3,2
  3926  05A3  2DC7               	goto	i1l1675
  3927  05A4  01F5               	clrf	___awmod@counter
  3928  05A5  0AF5               	incf	___awmod@counter,f
  3929  05A6                     i1l1665:	
  3930  05A6  1BF1               	btfsc	___awmod@divisor+1,7
  3931  05A7  2DB2               	goto	i1l1667
  3932  05A8  3001               	movlw	1
  3933  05A9                     u178_25:	
  3934  05A9  35F0               	lslf	___awmod@divisor,f
  3935  05AA  0DF1               	rlf	___awmod@divisor+1,f
  3936  05AB  0B89               	decfsz	9,f
  3937  05AC  2DA9               	goto	u178_25
  3938  05AD  3001               	movlw	1
  3939  05AE  00F4               	movwf	??___awmod
  3940  05AF  0874               	movf	??___awmod,w
  3941  05B0  07F5               	addwf	___awmod@counter,f
  3942  05B1  2DA6               	goto	i1l1665
  3943  05B2                     i1l1667:	
  3944  05B2  0871               	movf	___awmod@divisor+1,w
  3945  05B3  0273               	subwf	___awmod@dividend+1,w
  3946  05B4  1D03               	skipz
  3947  05B5  2DB8               	goto	u180_25
  3948  05B6  0870               	movf	___awmod@divisor,w
  3949  05B7  0272               	subwf	___awmod@dividend,w
  3950  05B8                     u180_25:	
  3951  05B8  1C03               	skipc
  3952  05B9  2DBE               	goto	i1l1671
  3953  05BA  0870               	movf	___awmod@divisor,w
  3954  05BB  02F2               	subwf	___awmod@dividend,f
  3955  05BC  0871               	movf	___awmod@divisor+1,w
  3956  05BD  3BF3               	subwfb	___awmod@dividend+1,f
  3957  05BE                     i1l1671:	
  3958  05BE  3001               	movlw	1
  3959  05BF                     u181_25:	
  3960  05BF  36F1               	lsrf	___awmod@divisor+1,f
  3961  05C0  0CF0               	rrf	___awmod@divisor,f
  3962  05C1  0B89               	decfsz	9,f
  3963  05C2  2DBF               	goto	u181_25
  3964  05C3  3001               	movlw	1
  3965  05C4  02F5               	subwf	___awmod@counter,f
  3966  05C5  1D03               	btfss	3,2
  3967  05C6  2DB2               	goto	i1l1667
  3968  05C7                     i1l1675:	
  3969  05C7  0876               	movf	___awmod@sign,w
  3970  05C8  1903               	btfsc	3,2
  3971  05C9  2DCF               	goto	i1l1679
  3972  05CA  09F2               	comf	___awmod@dividend,f
  3973  05CB  09F3               	comf	___awmod@dividend+1,f
  3974  05CC  0AF2               	incf	___awmod@dividend,f
  3975  05CD  1903               	skipnz
  3976  05CE  0AF3               	incf	___awmod@dividend+1,f
  3977  05CF                     i1l1679:	
  3978  05CF  0873               	movf	___awmod@dividend+1,w
  3979  05D0  00F1               	movwf	?___awmod+1
  3980  05D1  0872               	movf	___awmod@dividend,w
  3981  05D2  00F0               	movwf	?___awmod
  3982  05D3  0008               	return
  3983  05D4                     __end_of___awmod:	
  3984  007E                     btemp	set	126	;btemp
  3985  007E                     int$flags	set	126
  3986  007E                     wtemp0	set	126


Data Sizes:
    Strings     63
    Constant    0
    Data        3
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     75      78
    BANK1            80     22      22
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> main@bufB(BANK1[8]), main@bufA(BANK1[8]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 8
		 -> main@bufB(BANK1[8]), main@bufA(BANK1[8]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> main@bufB(BANK1[8]), main@bufA(BANK1[8]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 8
		 -> main@bufB(BANK1[8]), main@bufA(BANK1[8]), 

    echo@sfrdev	PTR unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), PORTB(SFR0[1]), PORTA(SFR0[1]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 8
		 -> main@bufB(BANK1[8]), main@bufA(BANK1[8]), 

    pdelay_counter	PTR int  size(1) Largest target is 2
		 -> delay_counter(COMMON[2]), 

    pinitialize	PTR int  size(1) Largest target is 2
		 -> initialize(BANK0[2]), 

    pisr_counter	PTR int  size(1) Largest target is 2
		 -> isr_counter(COMMON[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[4]), STR_9(CODE[6]), STR_8(CODE[11]), STR_7(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[15]), STR_4(CODE[4]), STR_3(CODE[6]), 
		 -> STR_2(CODE[11]), main@bufB(BANK1[8]), main@bufA(BANK1[8]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___awmod

Critical Paths under _main in BANK0

    _main->_echo
    _itoa->_utoa
    _utoa->___lwdiv
    _echo->___fttol
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    25      4   10746
                                             68 BANK0      7     3      4
                                              0 BANK1     22    22      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                               _echo
                               _itoa
                          _pinConfig
 ---------------------------------------------------------------------------------
 (1) _pinConfig                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    1503
                                             17 BANK0      7     3      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1074
                                              8 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     265
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     374
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _echo                                                 8     6      2    6718
                                             60 BANK0      8     6      2
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     305
                                             46 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2100
                                             30 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2054
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1812
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1668
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     5     3      2    1116
                                              5 BANK0      5     3      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     751
                                              3 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                              3 BANK0      1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  1     1      0     508
                                              7 COMMON     1     1      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     508
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _echo
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
   _pinConfig

 _ISR (ROOT)
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4B      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     16      16       7       27.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      72      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      72      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Apr 15 03:42:42 2018

              __CFG_CP$OFF 0000                         l71 0764                         l65 0755  
                       l67 075A                         l69 075F                        l131 01AB  
                      l140 0373                        l142 0377                        l143 037B  
                      l423 04C8                        l424 04D0                        l416 04B5  
                      l522 0533                        l507 0468                        _RA0 0060  
                      _RC0 0070                        _RA5 0065                        _RB4 006C  
                      _RB5 006D                        _RC3 0073                        _RB6 006E  
                      _RB7 006F                        _RC6 0076               __CFG_CPD$OFF 0000  
                      _ISR 0004               ___awmod@sign 0076               __CFG_BORV$LO 0000  
                      wreg 0009               __CFG_LVP$OFF 0000                       ?_ISR 0070  
             ___ftdiv@cntr 0038               ___ftdiv@sign 003D                       l1303 063F  
                     l1241 0756                       l1321 06BC                       l1307 0648  
                     l1245 075B                       l1261 0492                       l1325 06C8  
                     l1271 04BA                       l1263 049C                       l1415 034E  
                     l1407 0335                       l1511 0479                       l1319 06B0  
                     l1249 0760                       l1273 04C2                       l1265 04A1  
                     l1257 048B                       l1505 045F                       l1329 06D1  
                     l1451 0283                       l1435 0240                       l1507 046B  
                     l1603 0380                       l1429 022A                       l1605 038B  
                     l1517 04ED                       l1463 029F                       l1447 027B  
                     l1615 0396                       l1295 0621                       l1527 050B  
                     l1377 0705                       l1393 02F4                       l1617 03A6  
                     l1297 062D                       l1641 06EE                       l1387 02DE  
                     l1459 0297                       l1557 05F6                       l1717 008C  
                     l1583 071F                       l1479 0414                       l1743 0141  
                     l1497 0444                       l1499 0452                       l1775 01F3  
                     STR_1 0766                       STR_2 0790                       STR_3 07A3  
                     STR_4 07A9                       STR_5 0776                       STR_6 07A3  
                     STR_7 07A9                       STR_8 0785                       STR_9 07A3  
                     u1115 04BD                       u1205 062E                       u1215 0638  
                     u2007 0085                       u1305 068C                       u1225 0640  
                     u2017 0131                       u2107 0746                       u1155 04D7  
                     u1075 0497                       u2027 01A3                       u2037 01EC  
                     u1095 04B0                       u2047 0391                       u1255 06B3  
                     u2057 0696                       u1345 0306                       u1505 02A6  
                     u1425 024C                       u1185 0624                       u2067 06A2  
                     u1355 0316                       u1435 025C                       u1275 06C2  
                     u2077 0551                       u1365 0336                       u1285 06C9  
                     u2087 055E                       u1375 0345                       u1455 0284  
                     u1535 041B                       u1704 039F                       u2097 056B  
                     u1385 034F                       u1465 028A                       u1705 039E  
                     u1724 03AF                       u1565 0445                       u1725 03AE  
                     u1495 02A0                       u1665 05E1                       u1905 015B  
                     u1595 0460                       u1915 0207                       u1685 0603  
                     u1865 00DA                       u1875 00E8                       u1895 014D  
                     u1997 005B               __CFG_WRT$OFF 0000          ?_Lcd_Write_String 0025  
                     _echo 0370                       _main 004C               ___ftpack@arg 0020  
                     _itoa 06D6               ___ftpack@exp 0023                       fsr0h 0005  
                     fsr1h 0007                       indf0 0000                       fsr0l 0004  
                     indf1 0001                       fsr1l 0006                       btemp 007E  
                     _utoa 04E7                       start 0035         ??_Lcd_Write_String 0027  
            __CFG_IESO$OFF 0000            __end_of_Lcd_Cmd 074F              __CFG_MCLRE$ON 0000  
             ___ftmul@cntr 004C               ___ftmul@sign 004D                      ??_ISR 0077  
             ___fttol@exp1 005B               ___fttol@lval 0057                      ?_echo 005C  
                    ?_main 0064                      ?_itoa 0031                      STR_10 07A9  
            __CFG_WDTE$OFF 0000            __end_of___awmod 05D4            __end_of___ftdiv 0370  
                    ?_utoa 0028            __end_of___ftmul 02C7                      _T1CON 0018  
          __end_of___fttol 0482            __end_of___lwdiv 064D                      i1l122 0030  
          __end_of___lwmod 06D6                      _TMR1H 0017                      _TMR1L 0016  
                    _PORTA 000C                      _PORTB 000D                      _PORTC 000E  
  __size_of_Lcd_Set_Cursor 0044                      _TRISA 008C                      _TRISB 008D  
                    _TRISC 008E             __CFG_FCMEN$OFF 0000              ___awtoft@sign 002D  
                    echo@a 0062              ___ftpack@sign 0024             __CFG_BOREN$OFF 0000  
                    utoa@c 002F                      utoa@v 002D                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 058F           __end_of_Lcd_Port 0766  
          __initialization 0037               __end_of_echo 03FB               __end_of_main 0213  
             __end_of_itoa 06FA               __end_of_utoa 0549                     ??_echo 005E  
                   ??_main 0068              ___fttol@sign1 0056                     ??_itoa 0035  
                   ??_utoa 002C         __size_of_Lcd_Clear 0008             __CFG_PLLEN$OFF 0000  
         __end_of___awtoft 071C                     _ANSELA 018C                     _ANSELB 018D  
                   _ANSELC 018E           __end_of___ftpack 04E7                     i1l1653 0599  
                   i1l1671 05BE                     i1l1665 05A6                     i1l1657 05A0  
                   i1l1667 05B2                     i1l1675 05C7                     i1l1679 05CF  
                   _INTCON 000B                     u180_25 05B8                     u181_25 05BF  
                   u178_25 05A9                     _OSCCON 0099                  ??_Lcd_Cmd 0021  
                   _TMR1ON 00C0    __size_of_Lcd_Write_Char 002E             __CFG_PWRTE$OFF 0000  
           __CFG_STVREN$ON 0000                  ??___awmod 0074              main@ping_val1 00B2  
            main@ping_val2 00B4                  ??___ftdiv 0034                  ??___ftmul 0044  
                ??___fttol 0052                  ??___lwdiv 0024                  ??___lwmod 0024  
          ___awmod@divisor 0070            ___awmod@counter 0075      ___ftmul@f3_as_product 0049  
                   itoa@cp 0036               __pdataCOMMON 007C            Lcd_Set_Cursor@a 0026  
          Lcd_Set_Cursor@b 0023            Lcd_Set_Cursor@y 0028            Lcd_Set_Cursor@z 0027  
  __end_of__initialization 0048          __end_of_Lcd_Clear 07A3                 ___ftdiv@f1 0031  
               ___ftdiv@f2 002E                 ___ftdiv@f3 0039                 ___awtoft@c 0028  
               ___ftmul@f1 003E                 ___ftmul@f2 0041                 ___fttol@f1 004E  
           __pcstackCOMMON 0070               __pidataBANK0 07AF             _Lcd_Set_Cursor 05D4  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                 __pbssBANK0 006B  
       __size_of_pinConfig 002E                 __pmaintext 004C                 __pintentry 0004  
__size_of_Lcd_Write_String 001C                  ?___awtoft 0028                  ?___ftpack 0020  
   __end_of_Lcd_Set_Cursor 0618                 ??_Lcd_Init 0023                 ??_Lcd_Port 0020  
                  _RXDTSEL 08EF                    _TXCKSEL 08EA             _Lcd_Write_Char 067B  
                  _Lcd_Cmd 0738                 echo@sfrdev 0060                    ___awmod 058F  
                  ___ftdiv 02C7                    ___ftmul 0213                    ___fttol 03FB  
                  ___lwdiv 0618                    ___lwmod 06A9                 ??___awtoft 002B  
               ??___ftpack 0025            ?_Lcd_Set_Cursor 0023                 _initialize 006B  
                  __ptext1 064D                    __ptext2 06D6                    __ptext3 04E7  
                  __ptext4 06A9                    __ptext5 0618                    __ptext6 0370  
                  __ptext7 03FB                    __ptext8 0213                    __ptext9 02C7  
             __size_of_ISR 0031                    echo@pin 005C           ___awmod@dividend 0072  
        __end_of_pinConfig 067B     __end_of_Lcd_Write_Char 06A9       end_of_initialization 0048  
                  itoa@buf 0037                    itoa@val 0031                  Lcd_Port@a 0020  
                  utoa@buf 0030                    utoa@val 0028           __CFG_FOSC$INTOSC 0000  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0025          Lcd_Write_String@i 0028  
              ___ftdiv@exp 003C                 main@toggle 00B0                ___ftmul@exp 0048  
                _Lcd_Clear 079B           _Lcd_Write_String 071C              __pidataCOMMON 07AD  
      start_initialization 0037                __end_of_ISR 0035          __size_of_Lcd_Init 0046  
        __size_of_Lcd_Port 0017                 ?_Lcd_Clear 0070                __pdataBANK0 006D  
          Lcd_Write_Char@a 0024            Lcd_Write_Char@y 0023          __size_of___awtoft 0022  
        __size_of___ftpack 0065                __pbssCOMMON 0078                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00A0              _delay_counter 0078  
                 ?_Lcd_Cmd 0070           ___lwdiv@dividend 0022           ??_Lcd_Set_Cursor 0024  
           _pdelay_counter 007C                   ?___awmod 0070                   ?___ftdiv 002E  
                 ?___ftmul 003E                   ?___fttol 004E                   ?___lwdiv 0020  
                 ?___lwmod 0020           ___lwdiv@quotient 0025                  _pinConfig 064D  
                 Lcd_Cmd@a 0022                ??_Lcd_Clear 0023           ??_Lcd_Write_Char 0021  
                 _Lcd_Init 0549                   _Lcd_Port 074F                 ?_pinConfig 0070  
 __end_of_Lcd_Write_String 0738           __size_of_Lcd_Cmd 0017           __size_of___awmod 0045  
         __size_of___ftdiv 00A9           __size_of___ftmul 00B4           __size_of___fttol 0087  
         __size_of___lwdiv 0035           __size_of___lwmod 002D                   ___awtoft 06FA  
                 ___ftpack 0482            ___lwdiv@divisor 0020            ___lwdiv@counter 0027  
                 __ptext10 06FA                   __ptext11 0482                   __ptext20 058F  
                 __ptext12 071C                   __ptext13 067B                   __ptext14 05D4  
                 __ptext15 0549                   __ptext16 079B                   __ptext17 0738  
                 __ptext18 074F                   echo@port 005F              __size_of_echo 008B  
            __size_of_main 01C7              __size_of_itoa 0024              __size_of_utoa 0062  
                 int$flags 007E                _isr_counter 007A                   main@bufA 00A0  
                 main@bufB 00A8                   main@argc 0064                   main@argv 0066  
             _pisr_counter 007D                   itoa@base 0033                ??_pinConfig 0020  
       Lcd_Write_Char@temp 0022                   intlevel1 0000           ___lwmod@dividend 0022  
              _pinitialize 006D          __CFG_CLKOUTEN$OFF 0000         Lcd_Set_Cursor@temp 0029  
            __pstringtext1 0766              __pstringtext2 0776              __pstringtext3 0785  
            __pstringtext4 0790              __pstringtext5 07A3              __pstringtext6 07A9  
            __pstringtext7 0000                   utoa@base 002A                 _OPTION_REG 0095  
          ___lwmod@divisor 0020            ___lwmod@counter 0025  
